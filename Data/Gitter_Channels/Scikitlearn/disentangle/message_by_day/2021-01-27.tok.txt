<s> <user> i am trying <unka> for <unka> <unka> . it seems to stop too early . i.e . i get [ <unk#/> ] 26 trees , <unk#> leaves ( 31 on avg ), max depth = 12 , train loss : <unk#.> , val loss : <unk#.> , in <unk#a.> [ <unk#/> ] 26 trees , <unk#> leaves ( 31 on avg ), max depth = 12 , train loss : <unk#.> , val loss : <unk#.> , in <unk#a.> [ <unk#/> ] 26 trees , <unk#> leaves ( 31 on avg ), max depth = 13 , train loss : <unk#.> , val loss : <unk#.> , in <unk#a.> fit 624 trees in <unk#.> s , ( <unk#> total leaves ) </s>
<s> <user> you can get a much smaller loss using <unka> for example </s>
<s> <user> but it is much faster than <unka> for <unka> <unka> </s>
<s> <user> hmm .. is <unka> <unka> meant to work yet with <unka> ? </s>
<s> <user> i 'm trying to modify the <unka> transformer interface for transformers that need to transform <unka`> , <unka`> and <unka_`> together , i.e . the entire dataset . this is the signature i came up with that allows chaining these transformers with a <unka`> , i 'm wondering if anyone has any better ideas ? i really do n't like having a <unka`> parameter . <unk#a`> class <unka(> , <unka> ): def <unka(> , data , <unka=> ) -> " <unka> " : x , y , <unka_> = data ... return self def <unka(> , data ): x , y , <unka_> = data ... return ( x , y , <unka_> ) <unk`> </s>
<s> <user> one alternative i see is to not have the <unka`> parameter , and instead specify <unka"`> as the last <unka> in pipelines . i think this may be better ? <unka`> is only there because it would be confusing to have a <unka`> parameter when <unka`> is part of <unka`> . </s>
