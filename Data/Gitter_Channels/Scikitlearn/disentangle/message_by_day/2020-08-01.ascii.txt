[23:28] <5e3f3d7cd73408ce4fd915a4> Thanks @rth. I saw how Skorch does things, it's somewhat similar to how SciKeras is doing things now.  An alternative I thought of that I wanted to get feedback on is to have the user define (1) `__init__` and parameters for this model and (2) a `build_keras_model_` function that is expected to return an instance of a Keras `Model`. So a user defined model would look something like: ```python3 class MyModel(KerasClassifier):     def __init__(         self,         random_state=None,     ):         self.random_state = random_state      def build_keras_model(self, X, n_classes_):         model = keras.models.Model         ...         return model ```
[23:32] <5e3f3d7cd73408ce4fd915a4> Where `build_keras_model` would have access to all of the estimator attributes in addition to variables like `n_classes_` and `X/y` which `KerasClassifier.fit` passes if they exist in the signature of `build_keras_model`.
