[20:11] <61a11a356da03739848b5ea2> Hello, Scikit devs and contributors. I have a question regarding one of the examples left in PR #21958. `/examples/linear_model/plot_sparse_logistic_regression_mnist.py`. I guess this one is left because is not as straightforward to accelerate. This example involves a logistic regression using the saga algorithm and l1 penalty. In my attempt to optimize it, I found out that most of the running time is spent fetching the data instead of running the regression itself. The most I could do was 5% faster, which translates to 2 seconds difference. Unfortunately, by reducing `train_samples` the running time is not meaningfully decreased.  Another option I considered was to run LogisticRegression with `tol=0.9` and `n_jobs=2`, and `max_iter=40`. Unfortunately, can't get more than 5%.  One of the tweaks I managed to do was in the plot itself, by running the reshape outside the plot and using a list comprehension itself. Overall it makes the plot faster.  Checking other PRs, it seems that the acceleration obtained in this example is quite low. I am not sure even if this is an example that can be further improved considering the most expensive operation here is `fetch_openml`. For the same reason, not sure submitting a PR with such a low improvement is even a good idea.  I appreciate your thoughts on it. Maybe I'm missing something relevant. Thanks!
--------------------------------------------------------------------------------------------------
