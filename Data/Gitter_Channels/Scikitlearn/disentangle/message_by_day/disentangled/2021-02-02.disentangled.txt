[10:06] <60190f016da037398460db58> Hi! I have a quick question about the capabilities of Scikit-Learn's Pipeline (also asked in the other channel): Currently my data looks like the following 0 20 1 23 2 25 3 29 4 24 ... Where the index is a step in time, and the value is the value associated with that timestep. I am transforming it into 0 [20, 23, 25] [29, 24] 1 [29, 24, 24] [23, 22] 2 [23, 22, 26] [23, 25] ... By running a sort of window function over it. The index then is sample number, the first array is the input features, and the second array is the target.  If I input my data values as X into a pipeline, how to address the following: my custom transformer generates y from the input X, but the pipeline requires a y to begin with my custom transformer changes the length of X, which I think the pipeline also complains about.  Especially the latter is really important to me, as I want to be able to change the amount of features in X. Other options for example would be: 0 [20, 23] [25, 29] 1 [25, 29] [24, 29] ... or even 0 [20, 23, 25, 29] [24, 29] 1 [24, 29, 24, 24] [23, 22] etc.  Is there a standard solution for this, or should I write a wrapper for this? Thanks in advance!
--------------------------------------------------------------------------------------------------
[10:10] <541a528b163965c9bc2053de> Our pipelines are unfortunately no meant to change the number of samples or the target. So I guess this kind of preprocessing will have to happen outside of the pipeline it-self...
[10:13] <541a528b163965c9bc2053de> If the goal of the pipeline is to do parameter tuning for size of the time-window of the feature extraction preprocessor in a Grid/RandomizedSearchCV (for instance), then I think it's better to switch to a parameter tuner with a more flexible / less opinionated API such as https://optuna.org/ for instance.
[10:14] <541a528b163965c9bc2053de> > Is there a specific reason why that is prevented from being changed?  Our transformers where never meant to change y. This is an early design decision that is really hard to change now (without breaking users code). And changing the number of samples without changing y is meaningless.
--------------------------------------------------------------------------------------------------
[10:13] <60190f016da037398460db58> Is there a specific reason why that is prevented from being changed?
[10:13] <60190f016da037398460db58> Thank you!
--------------------------------------------------------------------------------------------------
[10:19] <60190f016da037398460db58> That's a shame, because I can imagine resampling / different sampling strategies / generating additional samples with differing noise levels would be a very useful thing to put in a pipeline so it can be gridsearched.
[10:20] <60190f016da037398460db58> I'll have a look at optuna, thanks for your answers!
--------------------------------------------------------------------------------------------------
[10:47] <541a528b163965c9bc2053de> But's really trick to get right, especially with the metrics. For instance when dealing with imbalanced classification problems, you want to resample at training time but not at test  validation / prediction / score time.  Imbalanced Learn has a custom pipeline and a custom API for resampling transformers with the fit_resample method: https://imbalanced-learn.org/  However this is not what you want for your use case: you want to perform the same transformation both at fit and predict time. It's hard to express all those use cases in a simple and intuitive unified API that would not led to users to shoot themselves in the foot. And there the backward compat constraints to take into account which makes it really hard to make our API evolve in that regard.
[10:48] <541a528b163965c9bc2053de> @KylevdLangemheen would you mind reposting this question to github discussions: https://github.com/scikit-learn/scikit-learn/discussions   I think this would make it more googleable and linkable for others that have related issues.
--------------------------------------------------------------------------------------------------
[11:33] <60190f016da037398460db58> Very understandable! I'm just sad I couldn't get an easy way out :P  I'll repost it there when I can, likely later today.
--------------------------------------------------------------------------------------------------
