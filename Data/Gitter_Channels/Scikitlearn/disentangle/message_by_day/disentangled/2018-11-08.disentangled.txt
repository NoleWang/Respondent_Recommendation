[11:01] <567f5d7716b6c7089cc043a8> @kirk86 you need to find the appropriate kernels from `sklearn.gaussian_process.kernels` and construct the equivalent kernel to construct your covariance matrix for the GP. I haven't looked into them to know if there's a one to one mapping between the old ones and the new implementations. Alternatively, you can try and construct the solution to your usecase from scratch using tutorials such as: https://scikit-learn.org/dev/modules/gaussian_process.html#gaussian-process
--------------------------------------------------------------------------------------------------
[11:54] <567f5d7716b6c7089cc043a8> @amueller in less than two weeks we're going to have a meetup for people who are new and interested in open source development. I'll be introducing them to scikit-learn's development process, for which it'll be nice to have the issue/pr labels updated. The main issue which also troubles myself whenever I'm looking for something to work on, is that the "help wanted" labels are very rarely removed from the issues once they're put there. Going through the first 25 issues tagged with "help wanted", only 7 actually really need help, and for most of them there's already an open PR to fix the issue. I'm not sure how it can be improved in a sustainable way, but it'd be nice if somebody could update the labels at least for now :)
[11:57] <567f5d7716b6c7089cc043a8> this is our meetup: https://www.meetup.com/opensourcediversity/events/255369540/
--------------------------------------------------------------------------------------------------
[11:56] <5b6f95c3d73408ce4fa450d4> @adrinjalali I second that.
[11:57] <5b6f95c3d73408ce4fa450d4> Is there any proposed date for this? @adrinjalali ?
--------------------------------------------------------------------------------------------------
[15:38] <579618a040f3a6eec05c5e42> @adrinjalali thank you for taking time to respond. I was thinking the same think that you're suggesting but I can't find any `cubic` kernel in the list of available kernels: ``` >>> sklearn.gaussian_process.kernels. sklearn.gaussian_process.kernels.ABCMeta(                sklearn.gaussian_process.kernels.PairwiseKernel(         sklearn.gaussian_process.kernels.kv( sklearn.gaussian_process.kernels.CompoundKernel(         sklearn.gaussian_process.kernels.Product(                sklearn.gaussian_process.kernels.math sklearn.gaussian_process.kernels.ConstantKernel(         sklearn.gaussian_process.kernels.RBF(                    sklearn.gaussian_process.kernels.namedtuple( sklearn.gaussian_process.kernels.DotProduct(             sklearn.gaussian_process.kernels.RationalQuadratic(      sklearn.gaussian_process.kernels.np sklearn.gaussian_process.kernels.ExpSineSquared(         sklearn.gaussian_process.kernels.StationaryKernelMixin(  sklearn.gaussian_process.kernels.pairwise_kernels( sklearn.gaussian_process.kernels.Exponentiation(         sklearn.gaussian_process.kernels.Sum(                    sklearn.gaussian_process.kernels.pdist( sklearn.gaussian_process.kernels.Hyperparameter(         sklearn.gaussian_process.kernels.WhiteKernel(            sklearn.gaussian_process.kernels.signature( sklearn.gaussian_process.kernels.Kernel(                 sklearn.gaussian_process.kernels.abstractmethod(         sklearn.gaussian_process.kernels.six sklearn.gaussian_process.kernels.KernelOperator(         sklearn.gaussian_process.kernels.cdist(                  sklearn.gaussian_process.kernels.squareform( sklearn.gaussian_process.kernels.Matern(                 sklearn.gaussian_process.kernels.clone(                   sklearn.gaussian_process.kernels.NormalizedKernelMixin(  sklearn.gaussian_process.kernels.gamma( ```
--------------------------------------------------------------------------------------------------
[17:31] <579618a040f3a6eec05c5e42> A question for the developers, how can someone add a custom kernel to gaussian process, I have custom method but keep getting error when adding it directly do we need to wrap it with some base estimator because it complains about the `get_params` method
[17:34] <579618a040f3a6eec05c5e42> ``` (Pdb) gp.fit(np.random.randn(10, 3), np.random.randn(10)) *** TypeError: Cannot clone object 'array([0.99946371, 0.99859908, 0.99818002, 0.9994673 , 0.99954341,        0.99969851, 0.99905772, 0.99932515, 0.99906479, 0.99983097])' (type <class 'numpy.ndarray'>): it does not seem to be a scikit-learn estimator as it does not implement a 'get_params' methods. ```
[17:47] <579618a040f3a6eec05c5e42> I guess this is still an issue https://stackoverflow.com/questions/49188159/how-to-create-a-custom-kernel-for-a-gaussian-process-regressor-in-scikit-learn
--------------------------------------------------------------------------------------------------
