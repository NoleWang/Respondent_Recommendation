[12:34] <matrix-RebelCoder:matrix.org> Hey smart people. I am trying to figure out/understand the warning. Solution I found just tell you to disable to warning. Maybe someone give a hint why I am seen the following warning is this super simple Multiple Regression example? ``` data_file = pd.read_csv("FuelConsumption.csv")  data_frame = data_file[     [         'ENGINESIZE',         'CYLINDERS',         'FUELCONSUMPTION_CITY',         'FUELCONSUMPTION_HWY',         'FUELCONSUMPTION_COMB',         'CO2EMISSIONS'     ] ]  data_set_x = ['ENGINESIZE', 'CYLINDERS', 'FUELCONSUMPTION_COMB'] data_set_y = ['CO2EMISSIONS']  mask = np.random.rand(len(data_frame)) < 0.8 train = data_frame[mask] test = data_frame[~mask]  lr_regression = linear_model.LinearRegression() train_x = np.asanyarray(train[data_set_x]) train_y = np.asanyarray(train[data_set_y]) lr_regression.fit(train_x, train_y)  y_hat = lr_regression.predict(test[data_set_x]) test_x = np.asanyarray(test[data_set_x]) test_y = np.asanyarray(test[data_set_y]) ```  The line 26: ``` y_hat = lr_regression.predict(test[data_set_x]) ```  Produces this warning: ``` sklearn/base.py:443: UserWarning: X has feature names, but LinearRegression was fitted without feature names   warnings.warn( ```
[13:44] <5c77a43ed73408ce4fb93081> In your example, `lr_regression.fit` was called with an ndarray, while `lr_regression.predict` was called with a DataFrame. To prevent the warning, you can `fit` with the DataFrame directly:  ```python lr_regression.fit(train[data_set_x], train[data_set_y]) ```  without casting to a ndarray.
[15:11] <matrix-RebelCoder:matrix.org> Interesting! Thanks. I tried that, and it still has a warning though. I think I figured it out. I use the `np array` on all of them now. ``` lr_regression = linear_model.LinearRegression() train_x = np.asanyarray(train[data_set_x]) train_y = np.asanyarray(train[data_set_y]) lr_regression.fit(train_x, train_y)  test_x = np.asanyarray(test[data_set_x]) test_y = np.asanyarray(test[data_set_y]) y_hat = lr_regression.predict(test_x) ```  This works. I am also wondering, (yet to look into it) why `np arrays` are used if just the data frame can be used, as you have suggested?e
