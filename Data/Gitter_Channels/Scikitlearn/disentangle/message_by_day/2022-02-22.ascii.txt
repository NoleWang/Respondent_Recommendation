[15:17] <5e7de2b6d73408ce4fde36e6> Hi scikit-learn team! I've got a new computer (MacBookPro, chip: Apple M1 Pro) on which I installed the development version of scikit-learn. When I ran pytest I encountered the following:  ``` (sklearn-dev) <unconvertable>  scikit-learn git:(main) pytest =========================================================================================== test session starts ============================================================================================ platform darwin -- Python 3.9.10, pytest-7.0.1, pluggy-1.0.0 rootdir: /Users/maren/Documents/scikit-learn, configfile: setup.cfg, testpaths: sklearn plugins: xdist-2.5.0, forked-1.4.0, cov-3.0.0 collecting ... [1]    54294 killed     pytest ```` 
[15:19] <55d21ee30fc9f982beadabb8> this does not look good :)
[15:19] <5e7de2b6d73408ce4fde36e6> I then tried to check what's going on and found the following. Do you have an idea of what I need to do?  ``` (sklearn-dev) <unconvertable>  scikit-learn git:(main) python -vvv -c "import sklearn" import _frozen_importlib # frozen import _imp # builtin import '_thread' # <class '_frozen_importlib.BuiltinImporter'> import '_warnings' # <class '_frozen_importlib.BuiltinImporter'> import '_weakref' # <class '_frozen_importlib.BuiltinImporter'> import '_io' # <class '_frozen_importlib.BuiltinImporter'> import 'marshal' # <class '_frozen_importlib.BuiltinImporter'> import 'posix' # <class '_frozen_importlib.BuiltinImporter'> import '_frozen_importlib_external' # <class '_frozen_importlib.FrozenImporter'> # installing zipimport hook import 'time' # <class '_frozen_importlib.BuiltinImporter'> import 'zipimport' # <class '_frozen_importlib.FrozenImporter'> # installed zipimport hook # /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/__init__.cpython-39.pyc matches /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__init__.py # code object from '/Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/__init__.cpython-39.pyc' # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/codecs.cpython-39-darwin.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/codecs.abi3.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/codecs.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/codecs.py # /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/__pycache__/codecs.cpython-39.pyc matches /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/codecs.py # code object from '/Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/__pycache__/codecs.cpython-39.pyc' import '_codecs' # <class '_frozen_importlib.BuiltinImporter'> import 'codecs' # <_frozen_importlib_external.SourceFileLoader object at 0x101613be0> # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/aliases.cpython-39-darwin.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/aliases.abi3.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/aliases.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/aliases.py # /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/aliases.cpython-39.pyc matches /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/aliases.py # code object from '/Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/aliases.cpython-39.pyc' import 'encodings.aliases' # <_frozen_importlib_external.SourceFileLoader object at 0x101643190> import 'encodings' # <_frozen_importlib_external.SourceFileLoader object at 0x1016139d0> # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/utf_8.cpython-39-darwin.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/utf_8.abi3.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/utf_8.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/utf_8.py # /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/utf_8.cpython-39.pyc matches /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/utf_8.py # code object from '/Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/utf_8.cpython-39.pyc' import 'encodings.utf_8' # <_frozen_importlib_external.SourceFileLoader object at 0x1016138b0> import '_signal' # <class '_frozen_importlib.BuiltinImporter'> # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/latin_1.cpython-39-darwin.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/latin_1.abi3.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/latin_1.so # trying /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/latin_1.py # /Users/maren/mambaforge/envs/sklearn-dev/lib/python3.9/encodings/__pycache__/latin_1.cpython-39.pyc matches /Users/maren/mambaforg ``` 
[15:20] <55d21ee30fc9f982beadabb8> which compilers are you using when installing the dev version
[15:22] <5e7de2b6d73408ce4fde36e6> It looks like I can't post the full error message because it's too long. I followed the installation here: https://scikit-learn.org/stable/developers/advanced_installation.html#macos-compilers-from-conda-forge So I installed `compilers` and `llvm-openmp`.
[15:24] <5e7de2b6d73408ce4fde36e6> And I used the `Miniforge3-MacOSX-arm64` download from here: https://github.com/conda-forge/miniforge#miniforge
[15:24] <55d21ee30fc9f982beadabb8> let me try with the last version of comilers on my M1 machine
[15:26] <55d21ee30fc9f982beadabb8> I assume that you forced installing python 3.9 and not 3.10?
[15:27] <matrix-ogrisel:matrix.org> you can use https://gist.github.com to post the full error log and give a link here
[15:30] <5e7de2b6d73408ce4fde36e6> Thank you! Here is the link: https://gist.github.com/marenwestermann/9ffddb7a2f0ef6798d350f3595997ed1
[15:32] <55d21ee30fc9f982beadabb8> I can reproduce
[15:35] <55d21ee30fc9f982beadabb8> clang and llvm have been updated 
[15:39] <55d21ee30fc9f982beadabb8> so temporary I think that installing `compilers=1.3` should fix the problem. I will give it a try.
[15:39] <55d21ee30fc9f982beadabb8> Then we need to understand why the new compilers are failing. But I can see that clang and llvm have been updated
[15:42] <55d21ee30fc9f982beadabb8> uhm it is not the compilers :(
[15:44] <5e7de2b6d73408ce4fde36e6> I just tried using `compilers=1.3` but it didn't solve the problem
[15:44] <matrix-ogrisel:matrix.org> @marenwestermann: can you please open an issue?
[15:44] <5e7de2b6d73408ce4fde36e6> Yes, will do
[15:47] <5e7de2b6d73408ce4fde36e6> I'm about to head off to a PyLadies Berlin open source hack night that I'm hosting, so will do it then. This is actually a good example case that I can show. :) 
[15:53] <matrix-ogrisel:matrix.org> nice :)
[15:53] <matrix-ogrisel:matrix.org> hopefully you will be able to find a workaround if it proves too complex to fix
