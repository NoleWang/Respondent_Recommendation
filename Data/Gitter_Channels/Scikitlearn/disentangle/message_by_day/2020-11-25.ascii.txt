[01:39] <5e3f3d7cd73408ce4fd915a4> @ichisadashioko if you want to use Keras + sklearn check out SciKeras: https://github.com/adriangb/scikeras
[07:49] <55d21ee30fc9f982beadabb8> @adriangb I was wondering if you could mention what is the benefit of scikeras compared to the KerasClassifier and KerasRegressor?
[14:20] <5e3f3d7cd73408ce4fd915a4> It's a pretty long list. Some Scikit-Learn specific ones are:
[14:47] <5e3f3d7cd73408ce4fd915a4> (was on mobile) * Allows pickling of estimators, allow ensembles and gridsearch to work properly * Allows you to use multi-input/output models to sklearn (especially important since some pre-trained models have "extra" outputs) * Working random_state (random state in Keras is pretty complicated) * Adds `partial_fit` and `predict_proba` * Your models can dynamically adjust the Keras input/output shape to the data (previously, that had to be hardcoded) * Support for `class_weights` in the same format as other sklearn estimators (including `class_weights="auto"`). * A lot of compatibility improvements, stuff like implementing `n_features_in_` and `_estimator_type` * Allows you to grid-search parameters for optimizers and losses via [routed params](https://scikeras.readthedocs.io/en/latest/advanced.html#routed-parameters). 
[14:55] <5e3f3d7cd73408ce4fd915a4> Some not Sklearn specific advantages: * Is actively maintained (the TF team may [deprecate](https://github.com/tensorflow/tensorflow/pull/37201#pullrequestreview-391650001) the wrappers in TF) * Has actual [documentation](https://scikeras.readthedocs.io/en/latest/index.html)
[14:55] <5e3f3d7cd73408ce4fd915a4> I should write this stuff down somewhere in a docs page :sweat_smile: 
[14:57] <55d21ee30fc9f982beadabb8> OK so this us super useful :). Thanks for maintaining such wrapper
[15:00] <55d21ee30fc9f982beadabb8> Basically, it would be great to have the info (regarding the deprecation and full-compatibility) in the landing page.  When reading it I was kinda currious about it :)
[15:00] <5e3f3d7cd73408ce4fd915a4> I hope it's useful! And yep totally agreed, I opened myself an issue to add it to our docs / README.md
[15:24] <567f5d7716b6c7089cc043a8> we could also add this to our "related projects"
[15:54] <5e3f3d7cd73408ce4fd915a4> It would be great if you did! Probably could also update `keras Deep Learning library capable of running on top of either TensorFlow or Theano` -> `Keras, the official high-level Deep Learning API for TensorFlow`
