[01:20] <5eeb9b35d73408ce4fe749bc> Hello! For the last 2 weeks of the MLH program, I was thinking of helping to address sklearn's backlog of PRs (e.g. by doing code reviews). Does anyone have any recommendations for how best to approach that? (searching through the backlog, triaging PRs, leaving some types of PRs for core maintainers, etc.)
[16:11] <5baf7d9ad73408ce4fa9c9b2> @joshuacwnewton reviewing is always welcome and it's a great way to learn! The things I personally look for during a review are: - backward compatibility and consistency with the current library / ecosystem. - test coverage. Ideally we want tests to be fast as well. - docs: every new feature should be documented at least in the UG. Big ones ideally come with a new example - code clarity and comments: you want your future self to be able to understand why something was done the way it was done  In terms of where to find PRs to review, we have a "waiting for reviewer" tag. Also you can try filtering by PRs which already have one approval: these might be easier to review. Feel free to review old PRs but note that there's a chance these will never be addressed.
