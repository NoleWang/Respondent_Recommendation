[14:26] <5d285286d73408ce4fc5e475> Hello, I understand this is a long shot, but didn't know where else to ask. I am running scikit learn in an online judge environment (DMOJ). Such environment disallows syscalls (for security reasons). The sklearn is installed in conda environment. If I use LogisticRegression().fit(X,y) everything works fine.  However, if I use LogisticRegression(multi_class='multinomial').fit(X,y), the judge stops the process as the LR was apperently trying to make some disallowed syscall. What is the low-level difference between LR and multinomial LR? Is there a workaround for this?
[14:40] <5d285286d73408ce4fc5e475> could th eproblem be that the multinomial version tries to spawn another processes even with n_jobs=1??
[14:56] <5f203be0d73408ce4feabfb8> could someone help me understand how the regression tree works in sklearn, is it created in the cart, using the standard deviation to create the leaves? I did not find any manual implementation of the cart for regression.
[15:52] <567f5d7716b6c7089cc043a8> @oplatek it's probably due to some multithreading, probably in BLAS, and I think nowadays you can control that through `threadpoolctl`. @ogrisel or @jeremiedbb know probably much better 
[15:58] <5d285286d73408ce4fc5e475> @adrinjalali  thats other Ondrej :]. thank you, I already tried   os.environ['MKL_NUM_THREADS'] = '1' os.environ['NUMEXPR_NUM_THREADS'] = '1' os.environ['OMP_NUM_THREADS'] = '1' os.environ['OPENBLAS_NUM_THREADS'] = '1'  or eporting these variables, but with no luck so far
