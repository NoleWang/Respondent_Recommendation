[18:01] <5759dd0dc2f0db084a1d128d> @amueller I was reading the docstring of the f-regression and I am wondering if what is written is not very misleading
[18:03] <5759dd0dc2f0db084a1d128d> @amueller I would have to read the code to check, but I was very confused with the docstring, so I googled and I arrived on stack exchange: http://stats.stackexchange.com/questions/204141/difference-between-selecting-features-based-on-f-regression-and-based-on-r2
[18:10] <5759dd0dc2f0db084a1d128d> @amueller To me, the docstring suggests that the code actually does p linear regressions, and looks for the significance of the parameter (usually, this is done by converting the  t-score/t-test), but it mentions and f-score and f-test which is usually used to compare nested models
[18:10] <5759dd0dc2f0db084a1d128d> disclaimer: I have no clue what I talking about :D
[18:25] <5759dd0dc2f0db084a1d128d> So I think the stack exchange link is misleading as well.
[18:27] <5759dd0dc2f0db084a1d128d> In the specific case of scikit-learn's implementation, the f-score and t-score are identical (as we are comparing one model to the null), so it indeed boils down to selecting the features that are significantly correlated with the target. If the K-top features are selected, it is exactly what sure independance screening is about
[23:01] <54bd5965db8155e6700ed583> Hi everyone. I have a problem that I would love to solve with scikit-learn, but cant seem to figure out how to crack it. Im hoping someone who knows a bit more about the package might have a quick answer.  I have a matrix $$X$$ that I want to factorize with sparse NMF as $$X = WH$$. I would like to use cross-validation to tune the hyperparameters (to wit, level of sparsity and # of components). Since the only place that $$X$$ shows up in the objective function for NMF is $$||X-WH||_F$$, I would imagine doing the cross validation in random folds, each time leaving out a random subset of the elements of  $$X$$ from the Forbenius norm, fitting the model, and then computing the reconstruction error on those elements. However I cant seem to find any way or think of a trick to do the fit on just a subset of the matrix (scikit-learns NMF algorithm doesnt seem to like it when I try to <unconvertable> leave out <unconvertable> some of the elements by setting them to `nan` :-P ). Is there any other route to accomplishing this within the package? 
