[{"name": "ai-chatbot-framework", "url": "https://github.com/Xnsam/ai-chatbot-framework", "description": "A python chatbot framework with Natural Language Understanding and Artificial Intelligence.", "language": ["Python", "JavaScript", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12496, "topics": []}, {"name": "algoliasearch-client-python", "url": "https://github.com/Xnsam/algoliasearch-client-python", "description": "Algolia Search API Client for Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1054, "topics": []}, {"name": "api-ai-php", "url": "https://github.com/Xnsam/api-ai-php", "description": "Unofficial php sdk for Api.ai", "language": ["PHP"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 18, "topics": []}, {"name": "assignments", "url": "https://github.com/Xnsam/assignments", "description": "practise. practise. practise", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14, "topics": []}, {"name": "Atis_dataset", "url": "https://github.com/Xnsam/Atis_dataset", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5555, "topics": []}, {"name": "autokeras", "url": "https://github.com/Xnsam/autokeras", "description": "accessible AutoML for deep learning.", "language": ["Python", "Shell", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 68322, "topics": []}, {"name": "awesome-rnn", "url": "https://github.com/Xnsam/awesome-rnn", "description": "Recurrent Neural Network - A curated list of resources dedicated to RNN", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 269, "topics": []}, {"name": "chabot_sequence_2_sequence", "url": "https://github.com/Xnsam/chabot_sequence_2_sequence", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 52, "topics": []}, {"name": "chatbot-retrieval", "url": "https://github.com/Xnsam/chatbot-retrieval", "description": "Dual LSTM Encoder for Dialog Response Generation", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20092, "topics": []}, {"name": "cheatsheets-ai", "url": "https://github.com/Xnsam/cheatsheets-ai", "description": "Essential Cheat Sheets for deep learning and machine learning researchers", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 28314, "topics": []}, {"name": "clarifai-python", "url": "https://github.com/Xnsam/clarifai-python", "description": "Clarifai API Python Client", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1546, "topics": []}, {"name": "clothing_classification", "url": "https://github.com/Xnsam/clothing_classification", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 437, "topics": []}, {"name": "CNN-text-classification-keras", "url": "https://github.com/Xnsam/CNN-text-classification-keras", "description": "Text Classification by Convolutional Neural Network in Keras", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 483, "topics": []}, {"name": "cnn_music", "url": "https://github.com/Xnsam/cnn_music", "description": "A CNN for music genre classification and TSC in general", "language": ["MATLAB", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 26479, "topics": []}, {"name": "Deep-Learning", "url": "https://github.com/Xnsam/Deep-Learning", "description": null, "language": ["Jupyter Notebook", "HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 25050, "topics": []}, {"name": "deep-named-entity-recognition", "url": "https://github.com/Xnsam/deep-named-entity-recognition", "description": "Use RNNs to identify entities in news queries", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 18550, "topics": []}, {"name": "deep-voice-conversion", "url": "https://github.com/Xnsam/deep-voice-conversion", "description": "Deep neural networks for voice conversion (voice style transfer) in Tensorflow", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 172469, "topics": []}, {"name": "demo_pr", "url": "https://github.com/Xnsam/demo_pr", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": []}, {"name": "detect-language-keras", "url": "https://github.com/Xnsam/detect-language-keras", "description": "In this project we will focus on Text Classification. Here, we create a model capable of classifying the language of the input text. ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3703, "topics": []}, {"name": "dldt", "url": "https://github.com/Xnsam/dldt", "description": "Deep Learning Deployment Toolkit", "language": ["C++", "Python", "CMake", "C", "Shell", "Makefile", "M4", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 54553, "topics": []}, {"name": "dlvcnptel", "url": "https://github.com/Xnsam/dlvcnptel", "description": "Tutorials for DLVC NPTEL MOOC", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 449, "topics": []}, {"name": "docs", "url": "https://github.com/Xnsam/docs", "description": "GRAKN.AI Documentation", "language": ["CSS", "HTML", "Java", "JavaScript", "Ruby", "Shell", "Groovy"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20976, "topics": []}, {"name": "examples", "url": "https://github.com/Xnsam/examples", "description": "Set of code samples highlighting the different ways to use the Algolia API", "language": ["CSS", "HTML", "JavaScript", "Ruby"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 43187, "topics": []}, {"name": "explainable_ai", "url": "https://github.com/Xnsam/explainable_ai", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5, "topics": []}, {"name": "FakeImageDetection", "url": "https://github.com/Xnsam/FakeImageDetection", "description": "Fake Image Detection Using Machine Learning", "language": ["Java", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 34830, "topics": []}, {"name": "fruits-360", "url": "https://github.com/Xnsam/fruits-360", "description": "This project uses fruits-360 data set and tries to model a resnet18 model implemented in pyTorch via transfer learning concept.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 280, "topics": []}, {"name": "generating-reviews-discovering-sentiment", "url": "https://github.com/Xnsam/generating-reviews-discovering-sentiment", "description": "Code for \"Learning to Generate Reviews and Discovering Sentiment\"", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 312643, "topics": []}, {"name": "GIMP-ELA", "url": "https://github.com/Xnsam/GIMP-ELA", "description": "A JPEG Error Level Analysis forensic plugin for the GNU Image Manipulation Program (GIMP)", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17, "topics": []}, {"name": "gramex", "url": "https://github.com/Xnsam/gramex", "description": "A visual analytics platform to build data-based web apps with less code.", "language": ["Python", "HTML", "JavaScript", "CSS", "Smarty", "Makefile", "R", "Shell", "Dockerfile", "Rebol", "PowerShell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11643, "topics": []}, {"name": "Handwriting-OCR", "url": "https://github.com/Xnsam/Handwriting-OCR", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11138, "topics": []}, {"name": "haptik_text_classification", "url": "https://github.com/Xnsam/haptik_text_classification", "description": "Classification of Haptik user chat queries into right Business Verticals using NLP", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5738, "topics": []}, {"name": "hello_world", "url": "https://github.com/Xnsam/hello_world", "description": "Just Another Repository", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "How-to-Generate-Art-Demo", "url": "https://github.com/Xnsam/How-to-Generate-Art-Demo", "description": "This is the code for \"How to Generate Art - Intro to Deep Learning #8' by Siraj Raval on YouTube", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11047, "topics": []}, {"name": "How-to-Learn-from-Little-Data", "url": "https://github.com/Xnsam/How-to-Learn-from-Little-Data", "description": "This is the code for \"How to Learn from Little Data - Intro to Deep Learning #17' by Siraj Raval on YouTube", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17, "topics": []}, {"name": "id_classification", "url": "https://github.com/Xnsam/id_classification", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1461, "topics": []}, {"name": "incubator-predictionio-sdk-php", "url": "https://github.com/Xnsam/incubator-predictionio-sdk-php", "description": "PredictionIO PHP SDK", "language": ["PHP"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 93, "topics": []}, {"name": "iphone_xs_supply_chain", "url": "https://github.com/Xnsam/iphone_xs_supply_chain", "description": "This is the code for \"Iphone XS Supply Chain\" By Siraj Raval on Youtube", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6843, "topics": []}, {"name": "julia", "url": "https://github.com/Xnsam/julia", "description": "The Julia Language: A fresh approach to technical computing.", "language": ["Julia", "C", "C++", "Scheme", "Makefile", "Shell", "LLVM", "Clojure", "Assembly", "Objective-C", "Ruby", "NSIS", "PowerShell", "AppleScript", "GDB"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 465330, "topics": []}, {"name": "Kaggle-Carvana-3rd-Place-Solution", "url": "https://github.com/Xnsam/Kaggle-Carvana-3rd-Place-Solution", "description": "3rd place solution ( Carvana Image Masking Challenge )", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 140, "topics": []}, {"name": "Kaggle_Challenge_LIVE-Two-Sigma", "url": "https://github.com/Xnsam/Kaggle_Challenge_LIVE-Two-Sigma", "description": "This is the code for \"Kaggle Challenge (LIVE)\" by Siraj Raval on Youtube", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "keras", "url": "https://github.com/Xnsam/keras", "description": "Deep Learning library for Python. Convnets, recurrent neural networks, and more. Runs on TensorFlow or Theano.", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7856, "topics": []}, {"name": "keras_frcnn", "url": "https://github.com/Xnsam/keras_frcnn", "description": "Keras Implementation of faster-rcnn", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 38735, "topics": []}, {"name": "labelImg", "url": "https://github.com/Xnsam/labelImg", "description": ":metal: LabelImg is a graphical image annotation tool and label object bounding boxes in images", "language": ["Python", "Shell", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 238194, "topics": []}, {"name": "learning-to-rank", "url": "https://github.com/Xnsam/learning-to-rank", "description": "Experiments on how to use machine learning to rank a product catalog", "language": ["Jupyter Notebook", "Python", "Perl", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4319, "topics": []}, {"name": "lectures-labs", "url": "https://github.com/Xnsam/lectures-labs", "description": "Slides and Jupyter notebooks for the Deep Learning lectures at M2 Data Science Universit\u00e9 Paris Saclay", "language": ["Jupyter Notebook", "HTML", "Python", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 136667, "topics": []}, {"name": "lor-prediction", "url": "https://github.com/Xnsam/lor-prediction", "description": "Sequence generation with LSTM neural network base on Lord of the Rings", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 60757, "topics": []}, {"name": "lstm-siamese-text-similarity", "url": "https://github.com/Xnsam/lstm-siamese-text-similarity", "description": "\u269b\ufe0f It is keras based implementation of siamese architecture using lstm encoders to compute text similarity", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 60, "topics": []}, {"name": "machine_learning_prax", "url": "https://github.com/Xnsam/machine_learning_prax", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11348, "topics": []}, {"name": "makeyourownneuralnetwork", "url": "https://github.com/Xnsam/makeyourownneuralnetwork", "description": "Code for the Make Your Own Neural Network book", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 159, "topics": []}, {"name": "mapboxgl-d3-playground", "url": "https://github.com/Xnsam/mapboxgl-d3-playground", "description": "Some examples on how to combine Mapbox GL JS and d3.js for creating interactive geovisualizations", "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9, "topics": []}, {"name": "mathematics_dataset", "url": "https://github.com/Xnsam/mathematics_dataset", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 105, "topics": []}, {"name": "Mathematics_for_Beginners", "url": "https://github.com/Xnsam/Mathematics_for_Beginners", "description": "This is the formula sheet for \"Mathematics for Beginners\" by Siraj Raval on Youtube", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "ML-MOOC-NPTEL", "url": "https://github.com/Xnsam/ML-MOOC-NPTEL", "description": "This repository contains the Tutorials for the NPTEL MOOC on Machine Learning.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11846, "topics": []}, {"name": "models", "url": "https://github.com/Xnsam/models", "description": "Models built with TensorFlow", "language": ["Python", "C++", "HTML", "Protocol Buffer", "Jupyter Notebook", "Shell", "JavaScript", "Makefile", "C", "GLSL"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 161266, "topics": []}, {"name": "move37", "url": "https://github.com/Xnsam/move37", "description": "Coding Demos from the School of AI's Move37 Course", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "moviebot", "url": "https://github.com/Xnsam/moviebot", "description": "Movie Chatbot built on top of GRAKN.AI", "language": ["Java"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "movieRec", "url": "https://github.com/Xnsam/movieRec", "description": "ShinyApps application of a movie recommendation system", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1071, "topics": []}, {"name": "msc-project", "url": "https://github.com/Xnsam/msc-project", "description": "Intelligent Hearing", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1417, "topics": []}, {"name": "nascell-automl", "url": "https://github.com/Xnsam/nascell-automl", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11339, "topics": []}, {"name": "ner-lstm", "url": "https://github.com/Xnsam/ner-lstm", "description": "Named Entity Recognition using multilayered bidirectional LSTM", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2768, "topics": []}, {"name": "neupy", "url": "https://github.com/Xnsam/neupy", "description": "NeuPy is a Python library for Artificial Neural Networks and Deep Learning.", "language": ["Python", "HTML", "JavaScript", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 104914, "topics": []}, {"name": "opencv", "url": "https://github.com/Xnsam/opencv", "description": "Open Source Computer Vision Library", "language": ["C++", "C", "CMake", "Java", "Python", "Objective-C++", "JavaScript", "Cuda", "Perl", "Shell", "PowerShell", "Objective-C", "HTML", "TeX", "Batchfile", "Prolog"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 464719, "topics": []}, {"name": "OpenCVSnippets", "url": "https://github.com/Xnsam/OpenCVSnippets", "description": "This repo contains some OpenCV code snippets.", "language": ["C++", "QMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 132, "topics": []}, {"name": "opencv_demos", "url": "https://github.com/Xnsam/opencv_demos", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 191479, "topics": []}, {"name": "photoshopped-or-not", "url": "https://github.com/Xnsam/photoshopped-or-not", "description": "Detecting Photoshopped images with Machine Learning. Created during Data Science Retreat.", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1468, "topics": []}, {"name": "pikachu-detection", "url": "https://github.com/Xnsam/pikachu-detection", "description": "Detection of Pikachu on Android using Tensorflow Object Detection API", "language": ["Jupyter Notebook", "Java", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 42735, "topics": []}, {"name": "pix2code", "url": "https://github.com/Xnsam/pix2code", "description": "pix2code: Generating Code from a Graphical User Interface Screenshot", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 776650, "topics": []}, {"name": "predicting-poverty", "url": "https://github.com/Xnsam/predicting-poverty", "description": "Combining satellite imagery and machine learning to predict poverty", "language": ["Jupyter Notebook", "Python", "R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 745, "topics": []}, {"name": "Push-Notification-To-Android-Using-Arduino-Node-MCU-and-Firebase-Cloud-Messaging", "url": "https://github.com/Xnsam/Push-Notification-To-Android-Using-Arduino-Node-MCU-and-Firebase-Cloud-Messaging", "description": "#send #push-notification #android #arduino #esp8266 #firebase #fcm #cloud-messaging  This tutorial describes how to implement IoT Push notifications. Using IoT push notifications, we can send notifications to other devices. In this case, we want to send an IoT push notifications from a smart object (Arduino Node MCU) to a mobile smartphone (i.e. Android smartphone). This project integrates different eco-systems: IoT and Android. This project can have several implementations: for example, we can send a push notification to our smartphone when an alert occurs.", "language": ["C++", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 21355, "topics": []}, {"name": "pyltr", "url": "https://github.com/Xnsam/pyltr", "description": "Python learning to rank (LTR) toolkit", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 60, "topics": []}, {"name": "python-sdk", "url": "https://github.com/Xnsam/python-sdk", "description": ":snake: Client library to use the IBM Watson services in Python and available in pip as watson-developer-cloud", "language": ["Python", "HTML", "Makefile", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14833, "topics": []}, {"name": "Python-tkinter-DiceRoller", "url": "https://github.com/Xnsam/Python-tkinter-DiceRoller", "description": "Basic python code for a dice-roller in python using tkinter", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "python_practisce", "url": "https://github.com/Xnsam/python_practisce", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "python_testing", "url": "https://github.com/Xnsam/python_testing", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "pytorch_tutorial", "url": "https://github.com/Xnsam/pytorch_tutorial", "description": "PyTorch 1.0 Tutorial", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5745, "topics": []}, {"name": "qiskit-terra", "url": "https://github.com/Xnsam/qiskit-terra", "description": "Terra provides the foundations for Qiskit. It allows the user to write quantum circuits easily, and takes care of the constraints of real hardware.", "language": ["Python", "C++", "CMake", "Shell", "Makefile", "Pascal", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 28867, "topics": []}, {"name": "Recommendations", "url": "https://github.com/Xnsam/Recommendations", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 307, "topics": []}, {"name": "RecommenderSystems_R", "url": "https://github.com/Xnsam/RecommenderSystems_R", "description": "Scripts for recommender systems", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": []}, {"name": "rnn-from-scratch", "url": "https://github.com/Xnsam/rnn-from-scratch", "description": "Use tensorflow's tf.scan to build vanilla, GRU and LSTM RNNs", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1581, "topics": []}, {"name": "rnn-nlu", "url": "https://github.com/Xnsam/rnn-nlu", "description": "A TensorFlow implementation of Recurrent Neural Networks for Sequence Classification and Sequence Labeling", "language": ["Python", "Perl"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 31, "topics": []}, {"name": "rtmonoaudio2midi", "url": "https://github.com/Xnsam/rtmonoaudio2midi", "description": "Real-time note recognition in monophonic audio stream", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 18, "topics": []}, {"name": "sample-datasets", "url": "https://github.com/Xnsam/sample-datasets", "description": "Sample Graql Datasets for GRAKN.AI", "language": ["Web Ontology Language", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 73973, "topics": []}, {"name": "SC-FEGAN", "url": "https://github.com/Xnsam/SC-FEGAN", "description": "SC-FEGAN : Face Editing Generative Adversarial Network with User's Sketch and Color (ICCV2019)", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11857, "topics": []}, {"name": "sentiment-analysis-in-python", "url": "https://github.com/Xnsam/sentiment-analysis-in-python", "description": "A simple implmentation of ", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "sentiment-analysis-in-python-nltk", "url": "https://github.com/Xnsam/sentiment-analysis-in-python-nltk", "description": "A simple implementation of sentiment analysis in python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1, "topics": []}, {"name": "sentiment-analysis-websockets", "url": "https://github.com/Xnsam/sentiment-analysis-websockets", "description": "Add Sentiment Analysis to Your Inbound Call Flow with IBM Watson and Nexmo", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2144, "topics": []}, {"name": "sentiment_analysis_python", "url": "https://github.com/Xnsam/sentiment_analysis_python", "description": "Working with sentiment analysis in Python.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 602, "topics": []}, {"name": "Siamese-LSTM", "url": "https://github.com/Xnsam/Siamese-LSTM", "description": "Siamese Recurrent Neural network with LSTM for evaluating semantic similarity between sentences. ", "language": ["OpenEdge ABL", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7830, "topics": []}, {"name": "simple-file-upload", "url": "https://github.com/Xnsam/simple-file-upload", "description": "Example created for the blog post \"How to Upload Files With Django\"", "language": ["Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "simple-python-pyinstaller-app", "url": "https://github.com/Xnsam/simple-python-pyinstaller-app", "description": "For an introductory tutorial on how to use Jenkins to build a simple Python application with PyInstaller.", "language": ["Python", "Groovy"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "sketch-code", "url": "https://github.com/Xnsam/sketch-code", "description": "Keras model to generate HTML code from hand-drawn website mockups. Implements an image captioning architecture to drawn source images.", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2067, "topics": []}, {"name": "slot_filling_intent_joint_model", "url": "https://github.com/Xnsam/slot_filling_intent_joint_model", "description": "attention based joint model for intent detection and slot filling ", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2548, "topics": []}, {"name": "speech-recognition-neural-network", "url": "https://github.com/Xnsam/speech-recognition-neural-network", "description": "This is the end-to-end Speech Recognition neural network, deployed in Keras. This was my final project for Artificial Intelligence Nanodegree @Udacity.", "language": ["HTML", "Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13270, "topics": []}, {"name": "stylist", "url": "https://github.com/Xnsam/stylist", "description": "Fast artistic style transfer with convolutional neural networks.", "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13255, "topics": []}, {"name": "Supply-demand-forecasting", "url": "https://github.com/Xnsam/Supply-demand-forecasting", "description": "supply demmand gap prediction for ride-hailing", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5029, "topics": []}, {"name": "SymmFCNet", "url": "https://github.com/Xnsam/SymmFCNet", "description": "Learning Symmetry Consistent Deep CNNs for Face Completion", "language": ["Lua"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4747, "topics": []}, {"name": "synthetic-graph-data", "url": "https://github.com/Xnsam/synthetic-graph-data", "description": "Synthetic data generation for graph ML experiments", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 36, "topics": []}, {"name": "talos", "url": "https://github.com/Xnsam/talos", "description": "Hyperparameter Optimization for Keras Models", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 326, "topics": []}, {"name": "tensorflow-examples", "url": "https://github.com/Xnsam/tensorflow-examples", "description": "Basic tensorflow examples with code", "language": ["Jupyter Notebook", "Python", "JavaScript", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 37955, "topics": []}, {"name": "tensorflow-hangul-recognition", "url": "https://github.com/Xnsam/tensorflow-hangul-recognition", "description": "Handwritten Korean Character Recognition with TensorFlow and Android", "language": ["Java", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 80929, "topics": []}, {"name": "tensorflow_cookbook", "url": "https://github.com/Xnsam/tensorflow_cookbook", "description": "Code for Tensorflow Machine Learning Cookbook", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 18514, "topics": []}, {"name": "tensorflow_speech_recognition_demo", "url": "https://github.com/Xnsam/tensorflow_speech_recognition_demo", "description": "This is the code for 'How to Make a Simple Tensorflow Speech Recognizer' by @Sirajology on Youtube", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "tesseract", "url": "https://github.com/Xnsam/tesseract", "description": "Tesseract Open Source OCR Engine (main repository)", "language": ["C++", "C", "Shell", "Java", "CMake", "Makefile", "M4", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41918, "topics": []}, {"name": "text_classification", "url": "https://github.com/Xnsam/text_classification", "description": "all kinds of text classificaiton models and more with deep learning", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14165, "topics": []}, {"name": "tf_project_demo", "url": "https://github.com/Xnsam/tf_project_demo", "description": "End to End framework", "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9947, "topics": []}, {"name": "ThinkDSP", "url": "https://github.com/Xnsam/ThinkDSP", "description": "LaTeX source and Python code for \"Think DSP: Digital Signal Processing in Python\", by Allen B. Downey.", "language": ["Jupyter Notebook", "TeX", "Python", "PostScript", "Makefile", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 192600, "topics": []}, {"name": "transparent_latent_gan", "url": "https://github.com/Xnsam/transparent_latent_gan", "description": "Use supervised learning to illuminate the latent space of GAN for controlled generation and edit", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3862, "topics": []}, {"name": "treelstm", "url": "https://github.com/Xnsam/treelstm", "description": "Tree-structured Long Short-Term Memory networks (http://arxiv.org/abs/1503.00075)", "language": ["Lua", "Python", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 71, "topics": []}, {"name": "treelstm-1", "url": "https://github.com/Xnsam/treelstm-1", "description": "Fast mini batch version of treelstm using tensorflow", "language": ["Python", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 59, "topics": []}, {"name": "treelstm.pytorch", "url": "https://github.com/Xnsam/treelstm.pytorch", "description": "Tree LSTM implementation in PyTorch", "language": ["Python", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 57, "topics": []}, {"name": "Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka", "url": "https://github.com/Xnsam/Twitter-Sentiment-Analysis-Using-Spark-Streaming-And-Kafka", "description": "Twitter Sentiment Analysis using Spark and Kafka", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 24, "topics": []}, {"name": "vehicle_detection", "url": "https://github.com/Xnsam/vehicle_detection", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 120268, "topics": []}, {"name": "voice-watson-speechtotext", "url": "https://github.com/Xnsam/voice-watson-speechtotext", "description": "Transcribe audio from a Call using IBM Watson", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": []}, {"name": "webapp_flask_grabcut", "url": "https://github.com/Xnsam/webapp_flask_grabcut", "description": "Grabcut Webapp in Flask", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}]