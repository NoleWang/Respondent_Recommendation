[{"name": "celery-remote-worker", "url": "https://github.com/gbroccolo/celery-remote-worker", "description": "An example to setup some remote Celery workers that execute code installed only on server side", "language": ["Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "demo", "url": "https://github.com/gbroccolo/demo", "description": "create a ec2 vm, setup a demo for data ingestion and analysis", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 51, "topics": []}, {"name": "flask-redis-docker", "url": "https://github.com/gbroccolo/flask-redis-docker", "description": "An example of asynchronous requests to dockerized Flask application", "language": ["Python"], "forks_count": 7, "stargazers_count": 8, "watchers_count": 8, "size": 27, "topics": []}, {"name": "geom", "url": "https://github.com/gbroccolo/geom", "description": "Geometry interfaces to help drive interoperability within the Go geospatial community", "language": ["Go", "JavaScript", "HTML", "Shell", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 37736, "topics": []}, {"name": "h2o_distributed_architecture", "url": "https://github.com/gbroccolo/h2o_distributed_architecture", "description": "An example of distributed architecture to run H2O models training in parallel using 1) futures or 2) async", "language": ["Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 88, "topics": []}, {"name": "k8s_example", "url": "https://github.com/gbroccolo/k8s_example", "description": "From a Jupyter notebook to a scalable service in cloud", "language": ["Jupyter Notebook", "Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 640, "topics": ["anomaly-detection", "asynchronous-programming", "celery", "docker", "jupyter-notebook", "kubernetes", "microservices", "python3", "redis", "scaleable"]}, {"name": "kafka-schema-registry-java", "url": "https://github.com/gbroccolo/kafka-schema-registry-java", "description": "An example of AVRO messages exchanged between Java producers and consumers using the Confluent schema registry", "language": ["Java", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "kafka-schema-registry-python", "url": "https://github.com/gbroccolo/kafka-schema-registry-python", "description": "An example of AVRO messages exchanged between Python producers and consumers using the Confluent schema registry", "language": ["Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "pgsphere", "url": "https://github.com/gbroccolo/pgsphere", "description": null, "language": ["C", "C++", "Perl", "Shell", "PLpgSQL", "Yacc", "Makefile", "Lex"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 824, "topics": []}, {"name": "pgsphere-1", "url": "https://github.com/gbroccolo/pgsphere-1", "description": "PgSphere provides spherical data types, functions, operators, and indexing for PostgreSQL.", "language": ["C", "C++", "Perl", "Yacc", "Makefile", "Lex", "PLpgSQL"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 735, "topics": []}, {"name": "postgis", "url": "https://github.com/gbroccolo/postgis", "description": "PostGIS spatial database extension to PostgreSQL [mirror]", "language": ["PLpgSQL", "C", "Perl", "M4", "Shell", "Makefile", "Python", "Yacc", "Roff", "C++", "Lex", "Raku", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 90922, "topics": []}, {"name": "scikit-learn", "url": "https://github.com/gbroccolo/scikit-learn", "description": "scikit-learn: machine learning in Python", "language": ["Python", "C++", "C", "Shell", "Batchfile", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 116447, "topics": []}]