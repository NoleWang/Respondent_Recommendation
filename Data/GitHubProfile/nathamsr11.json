[{"name": "Automated-Gland-Segmentation-Leading-to-Cancer-Detection-for-Colorectal-Biopsy-Images", "url": "https://github.com/nathamsr11/Automated-Gland-Segmentation-Leading-to-Cancer-Detection-for-Colorectal-Biopsy-Images", "description": "Glandular formation and morphology along with the architectural appearance of glands exhibit significant importance in the detection and prognosis of inflammatory bowel disease and colorectal cancer. The extracted glandular information from segmentation of histopathology images facilitate the pathologists to grade the aggressiveness of tumor. Manual segmentation and classification of glands is often time consuming due to large datasets from a single patient. We are presenting an algorithm that can automate the segmentation as well as classification of H and E (hematoxylin and eosin) stained colorectal cancer histopathology images. In comparison to research being conducted on cancers like prostate and breast, the literature for colorectal cancer segmentation is scarce. Inter as well as intra-gland variability and cellular heterogeneity has made this a strenuous problem. The proposed approach includes intensity-based information, morphological operations along with the Deep Convolutional Neural network (CNN) to evaluate the malignancy of tumor. This method is presented to outpace the traditional algorithms. We used transfer learning technique to train AlexNet for classification. The dataset is taken from MCCAI GlaS challenge which contains total 165 images in which 80 are benign and 85 are malignant. Our algorithm is successful in classification of malignancy with an accuracy of 90.40, Sensitivity 89% and Specificity of 91%. here is a copy of this project from a ", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2, "topics": []}, {"name": "blood.vue_firebase", "url": "https://github.com/nathamsr11/blood.vue_firebase", "description": "bloodbank", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "Coding_ChallengeOptions", "url": "https://github.com/nathamsr11/Coding_ChallengeOptions", "description": "https://drive.google.com/file/d/15X00ZWBjla7qGOIW33j8865QdF89IyAk/view?usp=sharing\\  The dataset is tabular and the features involved should be self-explanatory. We would like for you to come up with a specific problem yourself and solve it properly. This is an \u201copen challenge,\u201d mainly focusing on natural language processing. The problem could be either about predictive modeling or providing analytical insights for some business use cases. Note the problem should be treated as large-scale, as the dataset is large (e.g., >100GB) and will not fit into the RAM of your machine. Python is strongly recommended in terms of the coding language.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "Coursera_Big_Data_for_Data_Engineers", "url": "https://github.com/nathamsr11/Coursera_Big_Data_for_Data_Engineers", "description": "Assignments for Big Data for Data Engineers specialization on Coursera by Yandex.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 485, "topics": []}, {"name": "Distributed-System", "url": "https://github.com/nathamsr11/Distributed-System", "description": "Distributed System implementation with paxos, consensus algorithm, locking, failure detection, group view and RPCs", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "django-vue.js-blog", "url": "https://github.com/nathamsr11/django-vue.js-blog", "description": "django-vue.js-blog", "language": ["Python", "CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3704, "topics": []}, {"name": "DP-200-Implementing-an-Azure-Data-Solution", "url": "https://github.com/nathamsr11/DP-200-Implementing-an-Azure-Data-Solution", "description": null, "language": ["TSQL"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 37086, "topics": []}, {"name": "e-comm-web-client", "url": "https://github.com/nathamsr11/e-comm-web-client", "description": null, "language": ["JavaScript", "Vue", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1413, "topics": []}, {"name": "EPC-Advanced-Topics", "url": "https://github.com/nathamsr11/EPC-Advanced-Topics", "description": "Example programs from class will be posted here.", "language": ["Java", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5650, "topics": []}, {"name": "facial-expression-recognition", "url": "https://github.com/nathamsr11/facial-expression-recognition", "description": "Facial expression recognition deep learning examples", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 21, "topics": []}, {"name": "FlutterChatAppTutorial", "url": "https://github.com/nathamsr11/FlutterChatAppTutorial", "description": "Fully Functioning Chat App with Flutter & Firebase ", "language": ["Dart", "Ruby", "Swift", "HTML", "Kotlin", "Objective-C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 218, "topics": []}, {"name": "fundall", "url": "https://github.com/nathamsr11/fundall", "description": null, "language": ["Dart", "Swift", "Kotlin", "Objective-C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10612, "topics": []}, {"name": "hello-vue-django", "url": "https://github.com/nathamsr11/hello-vue-django", "description": "vuejs and Django integration with hot code reload", "language": ["Python", "JavaScript", "Vue", "Makefile", "HTML"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 17, "topics": []}, {"name": "learntools", "url": "https://github.com/nathamsr11/learntools", "description": "Tools and tests used in Kaggle Learn exercises", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 105438, "topics": []}, {"name": "migrate", "url": "https://github.com/nathamsr11/migrate", "description": "Tool to help customers migrate artifacts between Databricks workspaces. This allows customers to export configurations and code artifacts as a backup or as part of a migration between a different workspace. ", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 639, "topics": []}, {"name": "mmlspark", "url": "https://github.com/nathamsr11/mmlspark", "description": "Microsoft Machine Learning for Apache Spark", "language": ["Scala", "Python", "Jupyter Notebook", "Dockerfile", "Shell", "R", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4801, "topics": []}, {"name": "nodejs.org", "url": "https://github.com/nathamsr11/nodejs.org", "description": "The Node.js website.", "language": ["JavaScript", "CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 54332, "topics": []}, {"name": "NPLRuntime", "url": "https://github.com/nathamsr11/NPLRuntime", "description": "NPL - Neural Parallel Language", "language": ["C++", "C", "Makefile", "Lua", "Objective-C", "CMake", "Shell", "Python", "M4", "Java", "Roff", "DIGITAL Command Language", "HLSL", "D", "C#", "HTML", "NSIS", "Assembly", "Batchfile", "Cuda", "Awk", "Perl", "Objective-C++", "GLSL", "JavaScript", "MATLAB", "Pascal", "VBScript", "SWIG", "TSQL", "Inno Setup", "Module Management System", "Dockerfile", "Gnuplot", "sed", "Smarty"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 194417, "topics": []}, {"name": "pima-diabetes-prediction-using-tensflow", "url": "https://github.com/nathamsr11/pima-diabetes-prediction-using-tensflow", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14, "topics": []}, {"name": "Project-14.-Parkinson-s-Disease-Detection.ipynb", "url": "https://github.com/nathamsr11/Project-14.-Parkinson-s-Disease-Detection.ipynb", "description": "About this file Data Set Information: This dataset is composed of a range of biomedical voice measurements from 31 people, 23 with Parkinson's disease (PD). Each column in the table is a particular voice measure, and each row corresponds to one of 195 voice recordings from these individuals (\"name\" column). The main aim of the data is to discriminate healthy people from those with PD, according to the \"status\" column which is set to 0 for healthy and 1 for PD.  Attribute Information:  Matrix column entries (attributes):  name - ASCII subject name and recording number  MDVP:Fo(Hz) - Average vocal fundamental frequency  MDVP:Fhi(Hz) - Maximum vocal fundamental frequency  MDVP:Flo(Hz) - Minimum vocal fundamental frequency  MDVP:Jitter(%) , MDVP:Jitter(Abs) , MDVP:RAP , MDVP:PPQ , Jitter:DDP - Several measures of variation in fundamental frequency  MDVP:Shimmer , MDVP:Shimmer(dB) , Shimmer:APQ3 , Shimmer:APQ5 , MDVP:APQ , Shimmer:DDA - Several measures of variation in amplitude  NHR , HNR - Two measures of ratio of noise to tonal components in the voice  status - Health status of the subject (one) - Parkinson's, (zero) - healthy  RPDE , D2 - Two nonlinear dynamical complexity measures  DFA - Signal fractal scaling exponent  spread1 , spread2 , PPE - Three nonlinear measures of fundamental frequency variation", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 36, "topics": []}, {"name": "pwa", "url": "https://github.com/nathamsr11/pwa", "description": "PWA template for vue-cli based on the webpack template", "language": ["JavaScript", "Vue", "HTML", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 131, "topics": []}, {"name": "PyHive", "url": "https://github.com/nathamsr11/PyHive", "description": "Python interface to Hive and Presto. \ud83d\udc1d", "language": ["Python", "Shell", "Java"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 370, "topics": []}, {"name": "reat-native", "url": "https://github.com/nathamsr11/reat-native", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "sana", "url": "https://github.com/nathamsr11/sana", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1, "topics": ["react-native"]}, {"name": "spark", "url": "https://github.com/nathamsr11/spark", "description": "Apache Spark - A unified analytics engine for large-scale data processing", "language": ["Scala", "Java", "Python", "HiveQL", "R", "PLpgSQL", "Shell", "JavaScript", "q", "ANTLR", "HTML", "Jupyter Notebook", "Roff", "Batchfile", "CSS", "Dockerfile", "PowerShell", "Thrift", "Makefile", "C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 345343, "topics": []}, {"name": "spark-twitter-sentiment-analysis", "url": "https://github.com/nathamsr11/spark-twitter-sentiment-analysis", "description": "Sentiment Analysis of a Twitter Topic with Spark Structured Streaming", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": []}, {"name": "sparkify", "url": "https://github.com/nathamsr11/sparkify", "description": "Predict churn with Apache Spark", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 1227, "topics": []}, {"name": "sparta", "url": "https://github.com/nathamsr11/sparta", "description": "Real Time Analytics and Data Pipelines based on Spark Streaming", "language": ["Scala", "JavaScript", "Gherkin", "HTML", "CSS", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 128883, "topics": []}, {"name": "supervised", "url": "https://github.com/nathamsr11/supervised", "description": "supervised machine learning", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 19, "topics": []}, {"name": "yadex_big_data", "url": "https://github.com/nathamsr11/yadex_big_data", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 387, "topics": []}, {"name": "yandex-big-data-engineering", "url": "https://github.com/nathamsr11/yandex-big-data-engineering", "description": null, "language": ["Jupyter Notebook", "Shell"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 469, "topics": []}]