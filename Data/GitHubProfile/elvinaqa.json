[{"name": "agogo", "url": "https://github.com/elvinaqa/agogo", "description": "A reimplementation of AlphaGo in Go (specifically AlphaZero)", "language": ["Go", "Shell", "Dockerfile", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 239, "topics": []}, {"name": "ai-car-simulation", "url": "https://github.com/elvinaqa/ai-car-simulation", "description": "A simple self-driving AI car game, which uses NEAT.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 518, "topics": []}, {"name": "Amazon-Review-Analyzer-Summarizer-Python-NLP-ML-", "url": "https://github.com/elvinaqa/Amazon-Review-Analyzer-Summarizer-Python-NLP-ML-", "description": "The software service which scrapes, stores, analyzer, summarizes and displays the summarization text ", "language": ["Python", "HTML", "CSS"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 8841, "topics": []}, {"name": "Article-Scraper-and-Summarizer", "url": "https://github.com/elvinaqa/Article-Scraper-and-Summarizer", "description": "This code scrapes the articles from the given link and summarizes it based off Bag of Words method (NLTK, Newspaper libraries used)", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "assistant", "url": "https://github.com/elvinaqa/assistant", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 59959, "topics": []}, {"name": "AutoEncoders", "url": "https://github.com/elvinaqa/AutoEncoders", "description": "AutoEncoders Keras", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 266, "topics": []}, {"name": "AutoEncoders-Number-Noise-Generationa-and-Removal-Keras", "url": "https://github.com/elvinaqa/AutoEncoders-Number-Noise-Generationa-and-Removal-Keras", "description": "AutoEncoders Number Noise Generationa and Removal with Tensorflow Keras", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 37, "topics": []}, {"name": "awesome-python", "url": "https://github.com/elvinaqa/awesome-python", "description": "A curated list of awesome Python frameworks, libraries, software and resources", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6616, "topics": []}, {"name": "Bank-Lending-Club-Keras-Tensorflow-Loan-Prediction", "url": "https://github.com/elvinaqa/Bank-Lending-Club-Keras-Tensorflow-Loan-Prediction", "description": "These files contain complete loan data for all loans issued through the 2007-2015, including the current loan status (Current, Late, Fully Paid, etc.) and latest payment information. The file containing loan data through the \"present\" contains complete loan data for all loans issued through the previous completed calendar quarter. Additional features include credit scores, number of finance inquiries, address including zip codes, and state, and collections among others. The file is a matrix of about 890 thousand observations and 75 variables. A data dictionary is provided in a separate file. k", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20515, "topics": []}, {"name": "Basic-ANN-Pytorch", "url": "https://github.com/elvinaqa/Basic-ANN-Pytorch", "description": "Basic ANN Pytorch Application with Python", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41, "topics": []}, {"name": "BeautifulSoup4-Python-", "url": "https://github.com/elvinaqa/BeautifulSoup4-Python-", "description": "Usage of BS4 and Summarizing text", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 36, "topics": []}, {"name": "Bounce", "url": "https://github.com/elvinaqa/Bounce", "description": "Bouncing Ball Android App EA", "language": ["Java"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 124, "topics": []}, {"name": "Breast-Cancer-Detection-Python", "url": "https://github.com/elvinaqa/Breast-Cancer-Detection-Python", "description": "Breast Cancer Detection with Decision Tree, Logistic Regression, and Random Forest algorithms", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 247, "topics": []}, {"name": "Btc-Stock", "url": "https://github.com/elvinaqa/Btc-Stock", "description": "Bitcoin, Etherium, Litecoin Stock Price and Profit Analysis  with Python ", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "Car-Plate-Detection", "url": "https://github.com/elvinaqa/Car-Plate-Detection", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 328, "topics": []}, {"name": "Chess-C-OpenGL-", "url": "https://github.com/elvinaqa/Chess-C-OpenGL-", "description": null, "language": ["C++"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17, "topics": []}, {"name": "Classification-of-Images", "url": "https://github.com/elvinaqa/Classification-of-Images", "description": "Classification of Images with CNN", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 145, "topics": []}, {"name": "CNN-on-CIFAR-Keras-Tensorflow", "url": "https://github.com/elvinaqa/CNN-on-CIFAR-Keras-Tensorflow", "description": "CNN on CIFAR Keras Tensorflow Application", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2181, "topics": []}, {"name": "CNNS---Layers-Application", "url": "https://github.com/elvinaqa/CNNS---Layers-Application", "description": "Convolutional Neural Networks implementation and application", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 59, "topics": []}, {"name": "Computer-Vision-instructional-", "url": "https://github.com/elvinaqa/Computer-Vision-instructional-", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1496, "topics": []}, {"name": "Coronavirus-Update-Scraping", "url": "https://github.com/elvinaqa/Coronavirus-Update-Scraping", "description": "Worldmeter info (coronavirus) scraping, writing updated data to excel file 6 April 2020", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 26, "topics": []}, {"name": "CryptoAnalysis-Python", "url": "https://github.com/elvinaqa/CryptoAnalysis-Python", "description": "Bitcoin, Etherium, Litecoin Stock price and profit Analysis ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 319, "topics": []}, {"name": "cs329s-ml-deployment-tutorial", "url": "https://github.com/elvinaqa/cs329s-ml-deployment-tutorial", "description": "Code and files to go along with CS329s machine learning model deployment tutorial.", "language": ["Jupyter Notebook", "Python", "Dockerfile", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 70376, "topics": []}, {"name": "CSS-of-Amaze-with-Animate.css", "url": "https://github.com/elvinaqa/CSS-of-Amaze-with-Animate.css", "description": "CSS of Amaze with Wow and Animate.css repos including loading animations , blurring buttons, and lots more", "language": ["JavaScript", "CSS", "HTML", "Sass"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 2584, "topics": []}, {"name": "CTRLplusS.github.io", "url": "https://github.com/elvinaqa/CTRLplusS.github.io", "description": null, "language": ["Jupyter Notebook", "TeX", "HTML", "CSS", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 151426, "topics": []}, {"name": "d3-JS-for-Data-Visualization-", "url": "https://github.com/elvinaqa/d3-JS-for-Data-Visualization-", "description": "Data Visualization in Web", "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "Data-Cleaning-Challenge-", "url": "https://github.com/elvinaqa/Data-Cleaning-Challenge-", "description": "MO14-Round-1-Dealing-With-Data-Workbook - 2014- Championship", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 467, "topics": []}, {"name": "Data-Structures-Complexity-stuff", "url": "https://github.com/elvinaqa/Data-Structures-Complexity-stuff", "description": "Data Structures Complexity stuff", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 8, "topics": []}, {"name": "DCGAN-Keras", "url": "https://github.com/elvinaqa/DCGAN-Keras", "description": "Deep Convolutional Generative Adversarial Networks with Tensorflow Keras Application", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 89, "topics": []}, {"name": "Deep-Neural-Network-Problem-Bank-Note-Data-Random-Forest-", "url": "https://github.com/elvinaqa/Deep-Neural-Network-Problem-Bank-Note-Data-Random-Forest-", "description": "Deep Neural Network Problem for solving Bank Note Data problem (plus 100 solution with  Random Forest)", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 256, "topics": []}, {"name": "Deepface-Emotion-Detection-Python", "url": "https://github.com/elvinaqa/Deepface-Emotion-Detection-Python", "description": "Detecting emotions and dominant one with Deepface lib", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 1802, "topics": []}, {"name": "DeepFake-Detection", "url": "https://github.com/elvinaqa/DeepFake-Detection", "description": "Using Convnets and advanced Image Processing techniques to detect DeepFake videos. ", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 38342, "topics": []}, {"name": "DeepFocus", "url": "https://github.com/elvinaqa/DeepFocus", "description": "DeepFocus: Learned Image Synthesis for Computational Displays", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17419613, "topics": []}, {"name": "DeepLearningCV", "url": "https://github.com/elvinaqa/DeepLearningCV", "description": "Course code for my Deep Learning Computer Vision Course ", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5198, "topics": []}, {"name": "Deploy-DL-Model---Keras-on-Flask", "url": "https://github.com/elvinaqa/Deploy-DL-Model---Keras-on-Flask", "description": "Deploy-DL-Model - Keras-on Flask Web application", "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 63, "topics": []}, {"name": "detech.github.io", "url": "https://github.com/elvinaqa/detech.github.io", "description": null, "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "Detect-Disease-Python", "url": "https://github.com/elvinaqa/Detect-Disease-Python", "description": "Detecting cardiovascular disease with Random Forest ML Alg", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1055, "topics": []}, {"name": "driverlessai-recipes", "url": "https://github.com/elvinaqa/driverlessai-recipes", "description": "Recipes for Driverless AI", "language": ["Python", "TeX", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11345, "topics": []}, {"name": "earesume", "url": "https://github.com/elvinaqa/earesume", "description": "AERES", "language": ["HTML", "TeX", "CSS", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13185, "topics": []}, {"name": "Early-Stop-Dropout-Layers-Keras", "url": "https://github.com/elvinaqa/Early-Stop-Dropout-Layers-Keras", "description": "Keras Tensorflow", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 226, "topics": []}, {"name": "elvinaqa", "url": "https://github.com/elvinaqa/elvinaqa", "description": "for intro", "language": [], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 65, "topics": []}, {"name": "Face_Recognition-Python", "url": "https://github.com/elvinaqa/Face_Recognition-Python", "description": "Face Recognition with Python with face_recognition library", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1081, "topics": []}, {"name": "Fashion-MNIST-Neural-Networks-with-Keras-", "url": "https://github.com/elvinaqa/Fashion-MNIST-Neural-Networks-with-Keras-", "description": "Fashion MNIST Neural Networks with Keras ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 48, "topics": []}, {"name": "Fast.ai-Image-Colorizer-Deoldify-Colorify", "url": "https://github.com/elvinaqa/Fast.ai-Image-Colorizer-Deoldify-Colorify", "description": "Fast.ai Image Colorizer Deoldify Colorification App", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4260, "topics": []}, {"name": "Finger-Count-OpenCV", "url": "https://github.com/elvinaqa/Finger-Count-OpenCV", "description": "Counting number of fingers in ROI", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 931, "topics": []}, {"name": "Flask-Web-App-Basics", "url": "https://github.com/elvinaqa/Flask-Web-App-Basics", "description": "Basics o s Flask covered in the files from how to use templates, bootstrap and template inheritance, message flashing from different pages,  HTTP request, POST & GET methods and their usage, Sessions, Databases with SQLite SQLAlchemy, deleting adding users, mail, etc. and more", "language": ["HTML", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 5, "topics": []}, {"name": "foco", "url": "https://github.com/elvinaqa/foco", "description": "Stay focused with Foco :rocket:", "language": ["CSS", "JavaScript", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 35142, "topics": []}, {"name": "Forex-Strategy-Python", "url": "https://github.com/elvinaqa/Forex-Strategy-Python", "description": "Find out selling or buying option of stocks based on price raise and drop on long and shot-run", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9, "topics": []}, {"name": "Full-ANN-Classification-Pytorch", "url": "https://github.com/elvinaqa/Full-ANN-Classification-Pytorch", "description": "Full ANN-Classification-Pytorch Application with income dataset", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 623, "topics": []}, {"name": "GAN-Keras", "url": "https://github.com/elvinaqa/GAN-Keras", "description": "Generative Adversarial Networks with Tensorflow Keras", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 25, "topics": []}, {"name": "HackAqua", "url": "https://github.com/elvinaqa/HackAqua", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 927, "topics": []}, {"name": "Hands-MediumON-ML", "url": "https://github.com/elvinaqa/Hands-MediumON-ML", "description": "Hands-on Medium Deep learning Applications in real-case, ex: Kaggle kernels", "language": ["Jupyter Notebook", "HTML", "JavaScript", "Python"], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 17462, "topics": []}, {"name": "handson-ml", "url": "https://github.com/elvinaqa/handson-ml", "description": "A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.", "language": ["Jupyter Notebook", "Python", "Dockerfile", "Shell", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 85305, "topics": []}, {"name": "HandsonML-and-DLTheory", "url": "https://github.com/elvinaqa/HandsonML-and-DLTheory", "description": "is for the implmentation of th simpler projects with the Python (Machine Learning application) which was created as opposing to the HandsMediumOn repo", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 78068, "topics": []}, {"name": "Handwritten-Digit-Classification-Kaggle-Top1", "url": "https://github.com/elvinaqa/Handwritten-Digit-Classification-Kaggle-Top1", "description": "Handwritten Digit Classification on the MNIST dataset with Convolutional Neural Networks with the accuracy of 99%", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 3061, "topics": []}, {"name": "IBM-Employee-Attrition", "url": "https://github.com/elvinaqa/IBM-Employee-Attrition", "description": "IBM Employee Attrition with Random Forest", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 52, "topics": []}, {"name": "IBM-Watson-Chatbot", "url": "https://github.com/elvinaqa/IBM-Watson-Chatbot", "description": "Conversational Customer Care Chatbot deployed on IBM Cloud", "language": ["Python", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 219, "topics": ["ai", "chatbots"]}, {"name": "Img2Video-Converter", "url": "https://github.com/elvinaqa/Img2Video-Converter", "description": "Python code for converting images to video and vice versa with OpenCV lib", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5, "topics": []}, {"name": "Intent-Recognition", "url": "https://github.com/elvinaqa/Intent-Recognition", "description": "Intent Recognition and classification with GRU, LSTM stacking, DeepPavlov and BERT models", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 5, "watchers_count": 5, "size": 1017, "topics": []}, {"name": "Intent-Recognition-Flask-Deployment", "url": "https://github.com/elvinaqa/Intent-Recognition-Flask-Deployment", "description": "Deployed a Keras Intent Recognition model, with blending of codes from Intent Recognition tasks, Kaggle competitions, GRU, LSTM, BERT, and SGD models", "language": ["Jupyter Notebook", "JavaScript", "HTML", "CSS", "Python"], "forks_count": 3, "stargazers_count": 2, "watchers_count": 2, "size": 3246, "topics": ["bert", "gru", "intent-recognition-tasks", "kaggle-competitions", "lstm", "nlp-machine-learning"]}, {"name": "Invisible-Cloak-OpenCV-Harry-Potter-", "url": "https://github.com/elvinaqa/Invisible-Cloak-OpenCV-Harry-Potter-", "description": "Replacing red pixels with background image to create an effect of invisibility", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2, "topics": []}, {"name": "Kaggle-Fruit-Classifier-90-", "url": "https://github.com/elvinaqa/Kaggle-Fruit-Classifier-90-", "description": "131 (81) classes of fruits with more than 50K pictures, a task on Kaggle", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11753, "topics": []}, {"name": "kaggle-titanic", "url": "https://github.com/elvinaqa/kaggle-titanic", "description": "kaggle titanic solution", "language": ["Jupyter Notebook", "TeX", "HTML", "CSS", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 152588, "topics": []}, {"name": "Kaggle-Titanic-EA", "url": "https://github.com/elvinaqa/Kaggle-Titanic-EA", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 53, "topics": []}, {"name": "Karabakh-Mapbox-Flask-App", "url": "https://github.com/elvinaqa/Karabakh-Mapbox-Flask-App", "description": "This app is designed for specific purpose of showing the liberated areas of Azerbaijanian territory with Mapbox, Flask", "language": ["HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3526, "topics": []}, {"name": "katacoda-scenarios", "url": "https://github.com/elvinaqa/katacoda-scenarios", "description": "Katacoda Scenarios", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "Keras-Bank-Note-Data-Python", "url": "https://github.com/elvinaqa/Keras-Bank-Note-Data-Python", "description": "Keras Basics (Deep Learning Bank Note Prediction with Neural Nets)", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 25, "topics": []}, {"name": "Keras-CNN-MNIST", "url": "https://github.com/elvinaqa/Keras-CNN-MNIST", "description": "Keras CNN MNIST", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 234, "topics": []}, {"name": "Keras-Training-Neural-Nets", "url": "https://github.com/elvinaqa/Keras-Training-Neural-Nets", "description": "Training Neural Nets with a small ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 173, "topics": []}, {"name": "Keyword-Extractor-for-Websites", "url": "https://github.com/elvinaqa/Keyword-Extractor-for-Websites", "description": "A tool for mining the extracted keywords from given attributes of a particular website", "language": ["JavaScript", "Python", "HTML", "CSS"], "forks_count": 2, "stargazers_count": 4, "watchers_count": 4, "size": 3609, "topics": ["deep-learning", "keyword-extractor", "marketing-automation", "python", "text-mining"]}, {"name": "Kidney-Disease-Detection", "url": "https://github.com/elvinaqa/Kidney-Disease-Detection", "description": "Kidney Disease Detection with Artificial Neural Networks", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 49, "topics": []}, {"name": "King-Price-Prediction-Kaggle-Keras", "url": "https://github.com/elvinaqa/King-Price-Prediction-Kaggle-Keras", "description": "Prediction of House Prices based on couple of features. Used Tensorflow Keras to get high accurated predictions with Neural Nets", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1628, "topics": []}, {"name": "Know-Your-Intent", "url": "https://github.com/elvinaqa/Know-Your-Intent", "description": "State of the Art results in Intent Classification using Sematic Hashing for three datasets: AskUbuntu, Chatbot and WebApplication. ", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10341, "topics": []}, {"name": "LightAutoML", "url": "https://github.com/elvinaqa/LightAutoML", "description": "LAMA - automatic model creation framework", "language": ["Python", "Jupyter Notebook", "HTML", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5889, "topics": []}, {"name": "Live-Facial-Recognition-", "url": "https://github.com/elvinaqa/Live-Facial-Recognition-", "description": "Live Face Detection and  Recognition with face_recognition library", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 786, "topics": []}, {"name": "LoginRegister-Animation-JS", "url": "https://github.com/elvinaqa/LoginRegister-Animation-JS", "description": "Animated Login Registration", "language": ["CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 443, "topics": []}, {"name": "Malaria-Computer-Vision-Problem---CNN-Keras", "url": "https://github.com/elvinaqa/Malaria-Computer-Vision-Problem---CNN-Keras", "description": "Solving Computer Vision problem with National Library of Medicine dataset containing images of malaria infected/uninfected sets", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14755, "topics": []}, {"name": "mediapipe-python", "url": "https://github.com/elvinaqa/mediapipe-python", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10, "topics": []}, {"name": "ML-From-Scratch", "url": "https://github.com/elvinaqa/ML-From-Scratch", "description": "Machine Learning From Scratch. Bare bones NumPy implementations of machine learning models and algorithms with a focus on accessibility. Aims to cover everything from linear regression to deep learning.", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 553, "topics": []}, {"name": "models", "url": "https://github.com/elvinaqa/models", "description": "Models and examples built with TensorFlow", "language": ["Python", "Jupyter Notebook", "C++", "Shell", "Starlark", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 562798, "topics": []}, {"name": "Monty-Hall-Monte-Carlo-", "url": "https://github.com/elvinaqa/Monty-Hall-Monte-Carlo-", "description": "Monty Hall Problem", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "Mouse-Draw-on-Images-OpenCV", "url": "https://github.com/elvinaqa/Mouse-Draw-on-Images-OpenCV", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 137, "topics": []}, {"name": "Movie_Bot", "url": "https://github.com/elvinaqa/Movie_Bot", "description": "https://youtu.be/7hQhPMPNY6A", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11377, "topics": []}, {"name": "MusicPlayer", "url": "https://github.com/elvinaqa/MusicPlayer", "description": null, "language": ["JavaScript", "CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 81051, "topics": []}, {"name": "NER-Python", "url": "https://github.com/elvinaqa/NER-Python", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 24, "topics": []}, {"name": "next_word_prediction", "url": "https://github.com/elvinaqa/next_word_prediction", "description": "Using transformers to predict next word and predict <mask> word", "language": ["Python", "HTML", "JavaScript", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 546, "topics": []}, {"name": "NLP--Text-Processing-and-Text-Generation-Batch-Creation", "url": "https://github.com/elvinaqa/NLP--Text-Processing-and-Text-Generation-Batch-Creation", "description": "NLP- Text Processing and Text Generation, Batch Creation Complex Neural Networks Model Building with Embedding, GRU, Dense for Text Generation from the Shakespeare s works ", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 2345, "topics": []}, {"name": "NLP-Analysis-of-Text", "url": "https://github.com/elvinaqa/NLP-Analysis-of-Text", "description": "Natural Language Processing", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 30, "topics": []}, {"name": "NLP-progress", "url": "https://github.com/elvinaqa/NLP-progress", "description": "Repository to track the progress in Natural Language Processing (NLP), including the datasets and the current state-of-the-art for the most common NLP tasks.", "language": ["Python", "HTML", "Ruby"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1086, "topics": []}, {"name": "NYC-Fare-Regression-Prediction-Kaggle-Pytorch", "url": "https://github.com/elvinaqa/NYC-Fare-Regression-Prediction-Kaggle-Pytorch", "description": "NYC Fare Regression-Prediction Kaggle-Pytorch App", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3883, "topics": []}, {"name": "Object-Detection-Python", "url": "https://github.com/elvinaqa/Object-Detection-Python", "description": "Template Matching, Edge and Corner Detection", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "Python-Data-Scraping-IMDb-Movie-site-using-BeautifulSoup-Series-1-", "url": "https://github.com/elvinaqa/Python-Data-Scraping-IMDb-Movie-site-using-BeautifulSoup-Series-1-", "description": "Data Scraping using Python BeautifulSoup", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2961, "topics": []}, {"name": "Python-for-Algorithms--Data-Structures--and-Interviews", "url": "https://github.com/elvinaqa/Python-for-Algorithms--Data-Structures--and-Interviews", "description": "Files for Udemy Course on Algorithms and Data Structures", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 534, "topics": []}, {"name": "Python-Playing-with-Images-numpy-", "url": "https://github.com/elvinaqa/Python-Playing-with-Images-numpy-", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 403, "topics": []}, {"name": "python-tsp-simulated-annealing", "url": "https://github.com/elvinaqa/python-tsp-simulated-annealing", "description": "Visualisation of Simulated Annealing algorithm to solve TSP", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 15, "topics": []}, {"name": "PyTorch-Application-Python", "url": "https://github.com/elvinaqa/PyTorch-Application-Python", "description": "PyTorch Application Python", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "Quantium-", "url": "https://github.com/elvinaqa/Quantium-", "description": "Quantium data exploration on transaction data", "language": ["HTML", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13234, "topics": []}, {"name": "Question-Answering-Albert-Electra", "url": "https://github.com/elvinaqa/Question-Answering-Albert-Electra", "description": "Question Answering using Albert and Electra", "language": ["Python", "HTML", "JavaScript", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2953, "topics": []}, {"name": "Quiz_QuestionAir_App_Android", "url": "https://github.com/elvinaqa/Quiz_QuestionAir_App_Android", "description": "Questinnaire", "language": ["Java"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 2413, "topics": []}, {"name": "React-Recipe-App-API", "url": "https://github.com/elvinaqa/React-Recipe-App-API", "description": "Requesting recipes and calories of meals ...", "language": ["JavaScript", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 817, "topics": ["html-css-javascript", "js", "react", "react-components"]}, {"name": "Reaction-Tester-HTML-CSS-JS-", "url": "https://github.com/elvinaqa/Reaction-Tester-HTML-CSS-JS-", "description": null, "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 276, "topics": []}, {"name": "readme-template", "url": "https://github.com/elvinaqa/readme-template", "description": "A template for useful READMEs", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "Recurrent-Neural-Networks-Keras-Theory-and-Implementation", "url": "https://github.com/elvinaqa/Recurrent-Neural-Networks-Keras-Theory-and-Implementation", "description": "Recurrent Neural Networks with Keras", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 121, "topics": []}, {"name": "Regression-Pytorch-ANN", "url": "https://github.com/elvinaqa/Regression-Pytorch-ANN", "description": "Regression Pytorch ANN Application with Python", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 48, "topics": []}, {"name": "rex-gym", "url": "https://github.com/elvinaqa/rex-gym", "description": "OpenAI Gym environments for an open-source quadruped robot (SpotMicro)", "language": ["Python", "Makefile"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 233696, "topics": []}, {"name": "RNN-TimeSeries-Prediction_Keras", "url": "https://github.com/elvinaqa/RNN-TimeSeries-Prediction_Keras", "description": "Recurrent Neural Networks Application to the Time Series Data from FRED, prediction for 12 months", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 253, "topics": []}, {"name": "RNN-TimeSeriesGenerator-FProduction", "url": "https://github.com/elvinaqa/RNN-TimeSeriesGenerator-FProduction", "description": "Time Series data with Recurrent Neural Networks (keras)", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 82, "topics": []}, {"name": "Scraper-Chatbot-", "url": "https://github.com/elvinaqa/Scraper-Chatbot-", "description": "A chatbot that learns from the scraped data, article, or text, then gives an output based on the input by finding the similar sentence according to the context of the input by cosine similarity ", "language": ["Jupyter Notebook", "HTML", "CSS", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41, "topics": []}, {"name": "Scraper-Text-Analyzer-", "url": "https://github.com/elvinaqa/Scraper-Text-Analyzer-", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 39, "topics": []}, {"name": "Self-driving-Car-Basic-Lane-Detection", "url": "https://github.com/elvinaqa/Self-driving-Car-Basic-Lane-Detection", "description": "Lane detection algorithm with OpenCV library of Python with the application to the images and videos", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 368, "topics": []}, {"name": "Sentiment-Analysis-TextBlob", "url": "https://github.com/elvinaqa/Sentiment-Analysis-TextBlob", "description": "Sentiment Analysis with TextBlob, Newspaper3k, NLTK", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "SpeechApp", "url": "https://github.com/elvinaqa/SpeechApp", "description": null, "language": ["Java"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 393, "topics": []}, {"name": "SpeechToTextAndroid", "url": "https://github.com/elvinaqa/SpeechToTextAndroid", "description": "Speech to Text and Text to Speech App with Android Studio (Java) EA", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "Swift-Machine-Learning-App", "url": "https://github.com/elvinaqa/Swift-Machine-Learning-App", "description": "Machine Learning application with Swift (Google's newly developed API for Machine Learning applications via supporting Tensorflow))", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 80, "topics": []}, {"name": "Tensorboard-Tensorflow-Colab", "url": "https://github.com/elvinaqa/Tensorboard-Tensorflow-Colab", "description": "Tensorboard implementation in Google Colab (Tensorflow)", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7489, "topics": []}, {"name": "tensorflow-yolov4-tflite", "url": "https://github.com/elvinaqa/tensorflow-yolov4-tflite", "description": "YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite", "language": ["Python", "Java", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 216537, "topics": []}, {"name": "Text-Classification-GloVe-CNN", "url": "https://github.com/elvinaqa/Text-Classification-GloVe-CNN", "description": "Text Classification Implementation of few papers on Glove, Word2Sec, Bag of Words models on Kaggle data. ", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 1256, "topics": ["ai", "cnn", "cnn-keras", "glove-embeddings", "intent-classification", "keras", "machine-learning", "text-classification"]}, {"name": "The-Rise-of-CoronaVirus", "url": "https://github.com/elvinaqa/The-Rise-of-CoronaVirus", "description": "Action Game for illustrating CoronaVirus in Wuhan", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4, "topics": []}, {"name": "The-Rise-of-CoronaVirus-1-0-0", "url": "https://github.com/elvinaqa/The-Rise-of-CoronaVirus-1-0-0", "description": "ActionGame", "language": ["Java"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 5588, "topics": ["action", "unity", "unity3d"]}, {"name": "tilt.js", "url": "https://github.com/elvinaqa/tilt.js", "description": "A tiny 60+fps parallax tilt hover effect for jQuery. ", "language": ["JavaScript", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5102, "topics": []}, {"name": "travelling-salesman-problem-genetic-algorithm", "url": "https://github.com/elvinaqa/travelling-salesman-problem-genetic-algorithm", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 22, "topics": []}, {"name": "tutorials", "url": "https://github.com/elvinaqa/tutorials", "description": "This is a repo for all the tutorials put out by H2O.ai. This includes learning paths for Driverless AI, H2O-3, Sparkling Water and more...", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 299038, "topics": []}, {"name": "twint", "url": "https://github.com/elvinaqa/twint", "description": "An advanced Twitter scraping & OSINT tool written in Python that doesn't use Twitter's API, allowing you to scrape a user's followers, following, Tweets and more while evading most API limitations.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4540, "topics": []}, {"name": "Virtual-Assistant-Python", "url": "https://github.com/elvinaqa/Virtual-Assistant-Python", "description": "Added Virtual Assistant capabilities to Python program", "language": ["Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 58, "topics": []}, {"name": "VirtualShusha", "url": "https://github.com/elvinaqa/VirtualShusha", "description": "Virtual, Augmented, Extended Shusah (Karabagh)", "language": ["C#"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 5652, "topics": []}, {"name": "Water-Cleanliness-with-CNN-Keras", "url": "https://github.com/elvinaqa/Water-Cleanliness-with-CNN-Keras", "description": "Image classification problem with Convolutional Neural Networks application, Water Cleanliness with CNN Keras Tensorflow", "language": ["Jupyter Notebook", "JavaScript", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 2696, "topics": []}, {"name": "YelpDataAnalysisEA", "url": "https://github.com/elvinaqa/YelpDataAnalysisEA", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41, "topics": []}]