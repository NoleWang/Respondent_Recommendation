[{"name": "aaaml", "url": "https://github.com/mrdvince/aaaml", "description": "Approaching (Almost) Any Machine Learning Problem by Abhishek Thakur, Book code repo", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41, "topics": []}, {"name": "ajime", "url": "https://github.com/mrdvince/ajime", "description": "mime classification training submodule", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 35202, "topics": ["copy-paste", "python3", "pytorch"]}, {"name": "amazon_clone", "url": "https://github.com/mrdvince/amazon_clone", "description": "An amazon clone built with react js, payment processing using stripe, orders stored in firestore and hosting on netlify", "language": ["JavaScript", "CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1695, "topics": ["amazon", "cloud-functions", "ecommerce", "firebase", "payment-processing", "react", "react-js", "stripe"]}, {"name": "anga", "url": "https://github.com/mrdvince/anga", "description": "Using a pre-trained efficientnet (for experimental purposes) to classifier plant diseases given an image. Plant village challenge dataset.", "language": ["Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 194869, "topics": ["deep-learning", "efficientnet", "efficientnet-pytorch", "mixnet", "mixnet-pytorch", "plant-disease", "pytorch", "transfer-learning"]}, {"name": "aucal", "url": "https://github.com/mrdvince/aucal", "description": "A WhatsApp bot to convert pdf books text into audio. More like Audible audiobooks but using the tacotron2 model.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 30, "topics": ["audio", "deep-learning", "pytorch", "whatsapp-bot"]}, {"name": "autoencoders", "url": "https://github.com/mrdvince/autoencoders", "description": "Autoencoders are neural networks used for data compression, image de-noising, and dimensionality reduction. Using PyTorch.", "language": ["Python"], "forks_count": 0, "stargazers_count": 5, "watchers_count": 5, "size": 346, "topics": ["autoencoder", "autoencoders", "cnn", "convolution-autoencoders", "convolutional-neural-networks", "data-compression", "deeplearning", "dimensionality-reduction", "linear-autoencoders", "neural-networks", "python3", "pytorch", "udacity", "udacity-nanodegree"]}, {"name": "box_of_crayons", "url": "https://github.com/mrdvince/box_of_crayons", "description": "Taking food security, sustainable agriculture and \"plant pathology\" beyond the moon. \ud83d\ude80\ud83d\ude80\ud83d\ude80\ud83d\ude80( \"\u3064\u3065\u304f!!\" )", "language": ["Python", "Shell", "Mako", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9817, "topics": ["cpp", "docker", "docker-compose", "python", "pytorch"]}, {"name": "breast_cancer_detection", "url": "https://github.com/mrdvince/breast_cancer_detection", "description": "Breast Cancer Detection classifier built from the The Breast Cancer Histopathological Image Classification (BreakHis) dataset composed of 7,909 microscopic images.", "language": ["Python"], "forks_count": 15, "stargazers_count": 24, "watchers_count": 24, "size": 31878, "topics": ["breast-cancer", "breast-cancer-prediction", "deep-learning", "deep-learning-library", "detection", "histopathological-images", "machine", "machine-learning", "pytorch"]}, {"name": "celebA", "url": "https://github.com/mrdvince/celebA", "description": "Using Deep Convolutional GAN (generative adversarial network) to generate realistic faces, trained using the celebA dataset, implemented using pytorch c++ frontend.", "language": ["Jupyter Notebook", "C++", "Python", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4409, "topics": ["celeba", "cnns", "cpp", "dcgan", "deeplearning", "gans", "pytorch"]}, {"name": "Chaos", "url": "https://github.com/mrdvince/Chaos", "description": "Visualizations of the connections between chaos theory and fractals through the logistic map; made for Veritasium YouTube video", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 30684, "topics": []}, {"name": "co2-dashboard", "url": "https://github.com/mrdvince/co2-dashboard", "description": "A CO2 emissions dashboard visualization using d3.js. https://droid021.github.io/co2-dashboard/", "language": ["JavaScript", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 249, "topics": ["d3", "data-visualization"]}, {"name": "collaboration_competition", "url": "https://github.com/mrdvince/collaboration_competition", "description": "Collaboration and Competition (using multi agent reinforcement learning). Train a pair of agents to play tennis.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 630, "topics": ["agents", "collaboration", "deep-learning", "pytorch", "pytorch-rl", "reinforcement-learning", "tennis", "unity-environment"]}, {"name": "configs", "url": "https://github.com/mrdvince/configs", "description": "my neovim lua config", "language": ["Lua", "Vim script"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 47, "topics": []}, {"name": "continuous_control", "url": "https://github.com/mrdvince/continuous_control", "description": "Using Deep Deterministic Policy Gradient(DDPG) to train a robotic arm to reach target locations, simulated on a unity environment", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 333, "topics": ["agents", "ddpg-algorithm", "pytorch", "reinforcement-learning", "unity-environment"]}, {"name": "data-science-ipython-notebooks", "url": "https://github.com/mrdvince/data-science-ipython-notebooks", "description": "Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.", "language": ["Python", "CSS", "Makefile", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 49025, "topics": []}, {"name": "deep-learning-papers-reading-roadmap", "url": "https://github.com/mrdvince/deep-learning-papers-reading-roadmap", "description": "Deep Learning papers reading roadmap for anyone who are eager to learn this amazing tech!", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 3638, "topics": []}, {"name": "deep-learning-project-template", "url": "https://github.com/mrdvince/deep-learning-project-template", "description": "Pytorch Lightning code guideline for conferences", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 80, "topics": []}, {"name": "deep_learning", "url": "https://github.com/mrdvince/deep_learning", "description": " A collection of hobby/demo/research notebooks and some of the projects built as part of the udacity nanodegree programs", "language": ["Jupyter Notebook", "Python", "HTML", "Shell", "TeX"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 241551, "topics": ["ai", "deep-learning", "python3", "pytorch"]}, {"name": "demolib", "url": "https://github.com/mrdvince/demolib", "description": "Attempt at stitching together a multipurpose ml framework, focusing on using a single algorithim(random forest)", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 36, "topics": ["machine-learning", "random-forest"]}, {"name": "deployment-demo", "url": "https://github.com/mrdvince/deployment-demo", "description": "Repo used for the zoom call demo for computer vision model deployment built using fastai", "language": ["Python", "HTML", "JavaScript", "CSS"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 29796, "topics": ["computer-vision", "cv", "deeplearning"]}, {"name": "dermatologist", "url": "https://github.com/mrdvince/dermatologist", "description": "Using PyTorch's C++ frontend to visually diagnose melanoma nevus and seborrheic keratosis, using the 2017 ISIC Challenge on Skin Lesion Analysis Towards Melanoma Detection", "language": ["C++", "Python", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 47, "topics": ["cpp", "deeplearning", "other-stuff", "pytorch", "pytorch-cpp", "pytorch-cpp-frontend"]}, {"name": "dgenie", "url": "https://github.com/mrdvince/dgenie", "description": "Django Rest Framework PyTorch deployment template !", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 40, "topics": []}, {"name": "dltb", "url": "https://github.com/mrdvince/dltb", "description": "Computer vision for tuberculosis classification and lung segmentation. ", "language": ["Jupyter Notebook", "Python", "HCL", "Dockerfile", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17152, "topics": ["classification", "deep-learning", "diagnosis-tool", "hpu", "python3", "pytorch", "segmentation"]}, {"name": "dltb_hpu", "url": "https://github.com/mrdvince/dltb_hpu", "description": "Lung segmentantion using Montgomery dataset, Basically training a UNET on Habana Gaudi AI processor(s).", "language": ["Jupyter Notebook", "Python", "HCL", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7270, "topics": ["deep-learning", "pytorch"]}, {"name": "docker_self_hosted_registry", "url": "https://github.com/mrdvince/docker_self_hosted_registry", "description": "docker custom/private registry config, images stored on an AWS S3 bucket, ssl and traefik as the reverse proxy.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4, "topics": ["aws-s3", "docker", "docker-registry-v2", "poxy-server", "traefik"]}, {"name": "dummy-repo", "url": "https://github.com/mrdvince/dummy-repo", "description": "For storing images to link to other notebooks", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 231, "topics": []}, {"name": "ezolimo", "url": "https://github.com/mrdvince/ezolimo", "description": "ezolimo, a companion app for the box of crayons repo built with flutter, and basically \"frankensteined\" code.", "language": ["Dart", "HTML", "Swift", "Kotlin", "Objective-C"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 9317, "topics": ["ezolimo", "flutter", "pytorch"]}, {"name": "first-order-model", "url": "https://github.com/mrdvince/first-order-model", "description": "This repository contains the source code for the paper First Order Motion Model for Image Animation ", "language": ["Jupyter Notebook", "Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 73873, "topics": []}, {"name": "flutter-clean-architecture-medium", "url": "https://github.com/mrdvince/flutter-clean-architecture-medium", "description": "Flutter architecture for medium-sized projects", "language": ["Dart", "Shell", "HTML", "Ruby", "Swift", "Kotlin", "Objective-C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 516, "topics": []}, {"name": "flutter_adventures", "url": "https://github.com/mrdvince/flutter_adventures", "description": "This repo contains demo/pet projects built for the sole purpose of learning flutter. Feel free to clone and run some samples.", "language": ["Dart", "Kotlin", "Swift", "HTML", "Objective-C"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 21033, "topics": ["android", "android-ui", "flutter", "flutter-apps", "flutter-demo", "flutter-examples", "vscode"]}, {"name": "hmm_tagger", "url": "https://github.com/mrdvince/hmm_tagger", "description": "A hidden Markov model for part of speech tagging using Pomegranate library with a universal target set", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 55, "topics": ["hmm-viterbi-algorithm", "markov-model", "nlp"]}, {"name": "houc", "url": "https://github.com/mrdvince/houc", "description": "A sort of banking and loan application flutter app using firebase for auth and storage and designs stitched together from different sources online. Arranged as feature by folder.", "language": ["Dart", "HTML", "Swift", "Kotlin", "Objective-C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 879, "topics": ["android", "authentication", "firebase", "flutter"]}, {"name": "image_captioning", "url": "https://github.com/mrdvince/image_captioning", "description": "Automatically produce captions given an input image, using a resnet 50 as the encoder and a custom defined Decoder RNN, basically by combining a CNN for feature extraction and an RNN", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 287, "topics": ["anaconda", "cnn", "computer-vision-nanodegree", "exercises", "image-captioning", "miniconda", "python3", "pytorch", "rnn"]}, {"name": "juceq", "url": "https://github.com/mrdvince/juceq", "description": "A 3-band Stereo EQ built using JUCE Framework, Hosted/Testing using the Audio Plugin Host included in JUCE extras. Or import it into Fl Studio and knock yourself out.", "language": ["C++", "CMake", "C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 215, "topics": ["cpp", "cpp17", "equalizer", "juce-framework", "music"]}, {"name": "koko", "url": "https://github.com/mrdvince/koko", "description": "Using Terraform to provision AWS resources & Ansible to deploy a Docker container", "language": ["HCL", "Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 69, "topics": ["ansible", "aws", "docker", "jenkins", "terraform"]}, {"name": "libtorch_impls", "url": "https://github.com/mrdvince/libtorch_impls", "description": "A bunch of random PyTorch models using PyTorch's C++ frontend", "language": ["C++", "CMake", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 293, "topics": ["cpp", "deeplearning", "python", "pytorch", "pytroch-cpp"]}, {"name": "lox", "url": "https://github.com/mrdvince/lox", "description": "Implementing an interpreter  in C. (learning some C)", "language": ["C", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11, "topics": []}, {"name": "machine_translation", "url": "https://github.com/mrdvince/machine_translation", "description": "Deep neural network that functions as part of an end-to-end machine translation pipeline", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2467, "topics": ["machine-translation", "neural-network", "python3"]}, {"name": "maddpg_lab", "url": "https://github.com/mrdvince/maddpg_lab", "description": "Multi-Agent reinforcement learning, goal is to train an agent to solve the Physical Deception problem. ", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3705, "topics": ["marl", "python3", "pytorch", "reinforcement-learning", "udacity"]}, {"name": "maskedlm", "url": "https://github.com/mrdvince/maskedlm", "description": "Using distilled bert language model for mask predictions, Serving it using a flask api endpoint", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2, "topics": ["bert", "distilled-bert", "flask", "pytorch", "transformers"]}, {"name": "melanoma_SIIM_ISIC", "url": "https://github.com/mrdvince/melanoma_SIIM_ISIC", "description": "SIIM-ISIC Melanoma Classification, Identify melanoma in lesion images.(Skin cancer is the most prevalent type of cancer. Melanoma, specifically, is responsible for 75% of skin cancer deaths, despite being the least common skin cancer.)", "language": ["Python", "HTML"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 471, "topics": ["kaggle", "melanoma", "neural-networks", "pytorch", "resnet"]}, {"name": "mime", "url": "https://github.com/mrdvince/mime", "description": "Here be mimes!", "language": ["HTML", "CSS", "Python", "Dockerfile", "Shell", "SCSS", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2583, "topics": ["copy-paste", "django", "django-rest-framework", "python"]}, {"name": "mrdvince", "url": "https://github.com/mrdvince/mrdvince", "description": null, "language": [], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 5211, "topics": []}, {"name": "natural_language_processing", "url": "https://github.com/mrdvince/natural_language_processing", "description": "A collection of projects, demos etc focusing on natural language processing, mainly concentrating on transfomer models", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 139, "topics": []}, {"name": "netflix_clone", "url": "https://github.com/mrdvince/netflix_clone", "description": "A netflix clone built with react js,  Firebase auth and storage hosted on netlify ", "language": ["JavaScript", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 19512, "topics": ["compound-components", "javascript", "netflix", "netlify", "react", "reactjs", "styled-components"]}, {"name": "nlp-datasets", "url": "https://github.com/mrdvince/nlp-datasets", "description": "Alphabetical list of free/public domain datasets with text data for use in Natural Language Processing (NLP)", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 77, "topics": []}, {"name": "notebooks", "url": "https://github.com/mrdvince/notebooks", "description": "Some of my Jupyter notebook collection", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7115, "topics": []}, {"name": "opengl", "url": "https://github.com/mrdvince/opengl", "description": "Learn some OpenGL in a weekend. Knocking myself out.", "language": ["C++", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "penlight", "url": "https://github.com/mrdvince/penlight", "description": "A basic deep learning framework running on OpenCL. Using Arrayfire backend.", "language": ["Python", "C++"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": ["arrayfire", "cpp", "opencl", "pybind11", "python", "pytorch"]}, {"name": "planets", "url": "https://github.com/mrdvince/planets", "description": "Planet: Understanding the Amazon from Space kaggle competition using fast ai. Check out the blog on https://droidinc.com", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 352, "topics": ["ai", "deep-learning", "fastai", "machine-learning", "neural-network"]}, {"name": "PythonDataScienceHandbook", "url": "https://github.com/mrdvince/PythonDataScienceHandbook", "description": "Python Data Science Handbook: full text in Jupyter Notebooks", "language": ["Jupyter Notebook", "Python", "CSS", "HTML", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 32393, "topics": []}, {"name": "pytorch-deepdream", "url": "https://github.com/mrdvince/pytorch-deepdream", "description": "PyTorch implementation of DeepDream algorithm (Mordvintsev et al.). Additionally I've included playground.py to help you better understand basic concepts behind the algo.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 29444, "topics": []}, {"name": "pytorchfb-lab", "url": "https://github.com/mrdvince/pytorchfb-lab", "description": "An image classifier built using  Pytorch as part of the Udacity Pytorch facebook challenge lab project. Using a flower dataset containing 102 flower classes.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 2377, "topics": ["dataset", "driver", "flower", "image-dataset", "optimizer", "python3", "pytorch", "pytorch-udacity", "torch"]}, {"name": "pytorch_chatbot", "url": "https://github.com/mrdvince/pytorch_chatbot", "description": "A chatbot implemented using PyTorch, using Cornell Movie-Quotes Corpus which contains a large metadata-rich collection of fictional conversations extracted from raw movie scripts", "language": ["Python"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 30, "topics": ["bot", "chatbot", "deep-learning", "machine-learning", "machinelearning", "python", "pytorch"]}, {"name": "pytorch_mobile", "url": "https://github.com/mrdvince/pytorch_mobile", "description": "Starting point for using custom tflite models using flutter", "language": ["Java", "Dart", "Swift", "Kotlin", "Python", "Objective-C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 184, "topics": []}, {"name": "pytorch_template", "url": "https://github.com/mrdvince/pytorch_template", "description": "PyTorch deep learning projects made easy.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 296, "topics": []}, {"name": "reinforcement-learning-an-introduction", "url": "https://github.com/mrdvince/reinforcement-learning-an-introduction", "description": "Python Implementation of Reinforcement Learning: An Introduction", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5559, "topics": []}, {"name": "reinforcement_learning", "url": "https://github.com/mrdvince/reinforcement_learning", "description": "A bunch of reinforcement learning implementations in PyTorch, will eventually include Deep Q-Networks (DQN), Deep Deterministic Policy Gradients (DDPG) etc", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 194, "topics": ["dqn-pytorch", "pytorch", "reinforcement-learning"]}, {"name": "research_papers", "url": "https://github.com/mrdvince/research_papers", "description": "A repository implementing some of the papers from arxiv (arXiv provides the world with access to the newest scientific developments. Open Access has a myriad of benefits, in particular, it allows science to be more efficient.) and just fun stuff with AI mainly using PyTorch", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4778, "topics": ["arxiv", "arxiv-org", "classification", "cnn", "python", "pytorch", "pytorch-implementation", "research", "research-paper"]}, {"name": "sas", "url": "https://github.com/mrdvince/sas", "description": "Random sas code practice, Conversions to python", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 240, "topics": []}, {"name": "sentiment-analysis", "url": "https://github.com/mrdvince/sentiment-analysis", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10, "topics": ["cnn", "convolutional-neural-networks", "imdb", "neural-networks", "python", "pytroch", "sentiment-analysis", "sentiment-analysis-dataset"]}, {"name": "SimCLR", "url": "https://github.com/mrdvince/SimCLR", "description": "Self-Supervised Learning", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 138, "topics": ["pytorch", "self-supervised-learning"]}, {"name": "slam", "url": "https://github.com/mrdvince/slam", "description": "Implement SLAM (Simultaneous Localization and Mapping) for a 2 dimensional world. Combining robot sensor measurements and movement to create a map of an environment from only sensor and motion data gathered by a robot, over time.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 482, "topics": ["computer-vision", "localization", "python", "robotics", "slam", "vision"]}, {"name": "tensorflow_noob_impls", "url": "https://github.com/mrdvince/tensorflow_noob_impls", "description": "A bunch of TF implementations. n00b tensorflow repo.", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 19789, "topics": ["tensorflow"]}, {"name": "the-incredible-pytorch", "url": "https://github.com/mrdvince/the-incredible-pytorch", "description": "The Incredible PyTorch: a curated list of tutorials, papers, projects, communities and more relating to PyTorch. ", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 507, "topics": []}, {"name": "udacity-kotlin", "url": "https://github.com/mrdvince/udacity-kotlin", "description": "Android apps from developing android apps with kotlin udacity course", "language": ["Kotlin"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3332, "topics": ["android", "kotlin", "kotlin-android", "udacity"]}, {"name": "unity_navigation", "url": "https://github.com/mrdvince/unity_navigation", "description": "Using a Deep Q Network to train an agent to collect only yellow bananas leaving the blue ones in a unity ml-agents environment", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 123, "topics": ["agent", "deep-q-network", "dqn-model", "episodes", "python", "pytorch", "reinforcement-learning", "udacity-nanodegree"]}, {"name": "vision", "url": "https://github.com/mrdvince/vision", "description": "A computer vision repo with random implementations. Using PyTorch", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 30769, "topics": ["cnn", "computer-vision", "opencv", "python", "pytorch", "pytorch-implementation"]}, {"name": "yag", "url": "https://github.com/mrdvince/yag", "description": "Yet another Git", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "yolo", "url": "https://github.com/mrdvince/yolo", "description": "Object detection using yolov3 (You Only Look Once) inference, a modified darknet version.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10878, "topics": ["pytorch", "pytorch-implementation", "yolov3", "youonlylookonce"]}, {"name": "yolov5", "url": "https://github.com/mrdvince/yolov5", "description": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11163, "topics": []}]