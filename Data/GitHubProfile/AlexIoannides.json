[{"name": "alexioannides", "url": "https://github.com/AlexIoannides/alexioannides", "description": "Python source code for generating my website at alexaioannides.github.io.", "language": ["CSS", "HTML", "Less", "Python", "Shell", "JavaScript", "Makefile"], "forks_count": 2, "stargazers_count": 3, "watchers_count": 3, "size": 10089, "topics": ["pelican", "python", "website"]}, {"name": "alexioannides.github.io", "url": "https://github.com/AlexIoannides/alexioannides.github.io", "description": "My GitHub Pages website and blog about all things (data) science and probably a lot more.", "language": ["HTML", "CSS", "Less", "JavaScript"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 10255, "topics": ["github-pages", "pelican"]}, {"name": "bodywork-core", "url": "https://github.com/AlexIoannides/bodywork-core", "description": "An open-source deployment automation tool for machine learning in Python, on Kubernetes. Run batch jobs, serve models and deploy ML pipelines without the DevOps headache. Accelerated MLOps \ud83d\ude80", "language": ["Python", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 661, "topics": []}, {"name": "bodywork-mlops-demo", "url": "https://github.com/AlexIoannides/bodywork-mlops-demo", "description": "Demonstrating how Bodywork can be used to deploy a simulation of the lifecycle of a train-and-serve ML pipeline, responding to new data undergoing concept drift.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 9, "watchers_count": 9, "size": 552, "topics": ["aws", "data-science", "docker", "kubernetes", "machine-learning", "mlops", "numpy", "python", "scikit-learn"]}, {"name": "data-science-and-ml-notebook", "url": "https://github.com/AlexIoannides/data-science-and-ml-notebook", "description": "Data science and machine learning experiments and code snippets", "language": ["Jupyter Notebook", "Python", "Mako"], "forks_count": 1, "stargazers_count": 7, "watchers_count": 7, "size": 112, "topics": ["data-science", "machine-learning", "mlflow"]}, {"name": "elasticsearchr", "url": "https://github.com/AlexIoannides/elasticsearchr", "description": "Lightweight Elasticsearch client for R.", "language": ["R"], "forks_count": 21, "stargazers_count": 53, "watchers_count": 53, "size": 205, "topics": ["api", "api-client", "client-library", "cran", "data-frame", "elasticsearch", "nosql", "r"]}, {"name": "kubernetes-mlops", "url": "https://github.com/AlexIoannides/kubernetes-mlops", "description": "MLOps tutorial using Python, Docker and Kubernetes.", "language": ["Python", "Dockerfile"], "forks_count": 86, "stargazers_count": 276, "watchers_count": 276, "size": 140, "topics": ["cloud-platform", "docker", "flask", "gcp", "helm", "kubernetes", "machine-learning", "mlops", "python", "seldon", "seldon-core"]}, {"name": "lbg-hackathon-team-05", "url": "https://github.com/AlexIoannides/lbg-hackathon-team-05", "description": "Predicting transportation usage in NYC using BigQuery and Vertex AI pipelines on GCP.", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 7748, "topics": []}, {"name": "lime-interpretable-ml", "url": "https://github.com/AlexIoannides/lime-interpretable-ml", "description": "An example of how the LIME algorithm can be used to provide real-world insight into the decision processes of a 'black-box' machine learning algorithm - in this case a Radom Forest regressor.", "language": ["Jupyter Notebook"], "forks_count": 5, "stargazers_count": 10, "watchers_count": 10, "size": 5417, "topics": ["data-science", "interpretability", "lime", "machine-learning", "numpy", "pandas", "pydata", "python", "scikit-learn"]}, {"name": "ml-workflow-automation", "url": "https://github.com/AlexIoannides/ml-workflow-automation", "description": "Python Machine Learning (ML) project that demonstrates the archetypal ML workflow within a Jupyter notebook, with automated model deployment as a RESTful service on Kubernetes.", "language": ["Jupyter Notebook", "Python", "Dockerfile"], "forks_count": 25, "stargazers_count": 44, "watchers_count": 44, "size": 4191, "topics": ["classification", "data-science", "flask", "helm", "jupyter-notebook", "kaggle", "kubernetes", "machine-learning", "mlops", "numpy", "pandas", "python", "rest-api", "sklearn"]}, {"name": "pipeliner", "url": "https://github.com/AlexIoannides/pipeliner", "description": "Machine learning pipelines for R.", "language": ["R"], "forks_count": 6, "stargazers_count": 65, "watchers_count": 65, "size": 101, "topics": ["data-science", "machine-learning", "machine-learning-pipelines", "pipeline", "prediction", "r", "statistics", "transform-functions", "workflow"]}, {"name": "py-docker-aws-example-project", "url": "https://github.com/AlexIoannides/py-docker-aws-example-project", "description": "Automated testing and deployment of a simple Flask-based (RESTful) micro-service to a production-like environment on AWS, using Docker containers and Travis-CI.", "language": ["Python"], "forks_count": 13, "stargazers_count": 34, "watchers_count": 34, "size": 51, "topics": ["aws", "boto3", "continuous-deployment", "continuous-integration", "docker", "ecs", "microservice", "python", "travis-ci"]}, {"name": "py-package-template", "url": "https://github.com/AlexIoannides/py-package-template", "description": "Python package template project for kick-starting new Python projects.", "language": ["Python"], "forks_count": 35, "stargazers_count": 69, "watchers_count": 69, "size": 149, "topics": ["automated-deployment", "automated-testing", "continuous-delivery", "example-project", "flake8", "mypy", "package", "pip", "pypi", "pytest", "python", "sphinx", "template-project", "travis-ci"]}, {"name": "py-readme-snippets", "url": "https://github.com/AlexIoannides/py-readme-snippets", "description": "This repository contains snippits of writing (in Markdown), on various topics relating to various flavours of Python development project.", "language": [], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 22, "topics": ["python", "python-library", "spark"]}, {"name": "pycaret-mlops", "url": "https://github.com/AlexIoannides/pycaret-mlops", "description": "Using PyCaret with Bodywork to deploy ML pipelines to Kuberentes", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 7, "watchers_count": 7, "size": 2134, "topics": ["bodywork", "fastapi", "kubernetes", "machine-learning", "mlops", "pycaret"]}, {"name": "pymc-advi-hmc-demo", "url": "https://github.com/AlexIoannides/pymc-advi-hmc-demo", "description": "Demonstrating HMC and ADVI algorithms for Bayesian data analysis using PYMC3.", "language": ["Jupyter Notebook"], "forks_count": 3, "stargazers_count": 10, "watchers_count": 10, "size": 407, "topics": ["bayesian-data-analysis", "bayesian-inference", "data-science", "example-project", "jupyter-notebook", "machine-learning", "markov-chain-monte-carlo", "probabilistic-programming", "pymc3", "python", "variational-inference"]}, {"name": "pymc-example-project", "url": "https://github.com/AlexIoannides/pymc-example-project", "description": "Example PyMC3 project for performing Bayesian data analysis using a probabilistic programming approach to machine learning.", "language": ["Jupyter Notebook"], "forks_count": 17, "stargazers_count": 96, "watchers_count": 96, "size": 81087, "topics": ["bayesian-data-analysis", "bayesian-inference", "data-science", "machine-learning", "numpy", "pandas", "probabilistic-programming", "pymc3", "python", "scikit-learn"]}, {"name": "pymc-stochastic-process", "url": "https://github.com/AlexIoannides/pymc-stochastic-process", "description": "Demonstrating the benefits of using Bayesian Inference and PYMC3 for estimating the parameters of stochastic processes commonly used in quantitative finance.", "language": ["Jupyter Notebook"], "forks_count": 9, "stargazers_count": 33, "watchers_count": 33, "size": 460, "topics": ["bayesian-inference", "probabilistic-programming", "pymc3", "python", "quantitative-finance", "risk-modelling", "stochastic-processes"]}, {"name": "pyspark-example-project", "url": "https://github.com/AlexIoannides/pyspark-example-project", "description": "Example project implementing best practices for PySpark ETL jobs and applications.", "language": ["Python", "Shell"], "forks_count": 491, "stargazers_count": 937, "watchers_count": 937, "size": 787, "topics": ["data-engineering", "data-science", "etl", "etl-job", "etl-pipeline", "pyspark", "python", "spark"]}, {"name": "python-packages-notebook", "url": "https://github.com/AlexIoannides/python-packages-notebook", "description": "Experiments, PoCs and code snippets for useful Python packages.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5, "topics": []}, {"name": "registerit", "url": "https://github.com/AlexIoannides/registerit", "description": "Have an idea for a Python package? Register the name on PyPI \ud83d\udca1", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 33, "topics": ["pypi", "python"]}]