[{"name": "6S191_MIT_DeepLearning", "url": "https://github.com/yazabat/6S191_MIT_DeepLearning", "description": "MIT Introduction to Deep Learning (6.S191) Instructors: Alexander Amini and Ava Soleimany Course Information Summary Prerequisites Schedule Lectures Labs, Final Projects, Grading, and Prizes Software labs Gather.Town lab + Office Hour sessions Final project Paper Review Project Proposal Presentation Project Proposal Grading Rubric Past Project Proposal Ideas Awards + Categories Important Links and Emails Course Information Summary MIT's introductory course on deep learning methods with applications to computer vision, natural language processing, biology, and more! Students will gain foundational knowledge of deep learning algorithms and get practical experience in building neural networks in TensorFlow. Course concludes with a project proposal competition with feedback from staff and a panel of industry sponsors.  Prerequisites  We expect basic knowledge of calculus (e.g., taking derivatives), linear algebra (e.g., matrix multiplication), and probability (e.g., Bayes theorem) -- we'll try to explain everything else along the way! Experience in Python is helpful but not necessary. This class is taught during MIT's IAP term by current MIT PhD researchers. Listeners are welcome! Schedule Monday Jan 18, 2021 Lecture: Introduction to Deep Learning and NNs Lab: Lab 1A Tensorflow and building NNs from scratch Tuesday Jan 19, 2021 Lecture: Deep Sequence Modelling Lab: Lab 1B Music Generation using RNNs Wednesday Jan 20, 2021 Lecture: Deep Computer Vision Lab: Lab 2A Image classification and detection Thursday Jan 21, 2021 Lecture: Deep Generative Modelling Lab: Lab 2B Debiasing facial recognition systems Friday Jan 22, 2021 Lecture: Deep Reinforcement Learning Lab: Lab 3 pixel-to-control planning Monday Jan 25, 2021 Lecture: Limitations and New Frontiers Lab: Lab 3 continued Tuesday Jan 26, 2021 Lecture (part 1): Evidential Deep Learning Lecture (part 2): Bias and Fairness Lab: Work on final assignments Lab competition entries due at 11:59pm ET on Canvas! Lab 1, Lab 2, and Lab 3 Wednesday Jan 27, 2021 Lecture (part 1): Nigel Duffy, Ernst & Young Lecture (part 2): Kate Saenko, Boston University and MIT-IBM Watson AI Lab Lab: Work on final assignments Assignments due: Sign up for Final Project Competition Thursday Jan 28, 2021 Lecture (part 1): Sanja Fidler, U. Toronto, Vector Institute, and NVIDIA Lecture (part 2): Katherine Chou, Google Lab: Work on final assignments Assignments due: 1 page paper review (if applicable) Friday Jan 29, 2021 Lecture: Student project pitch competition Lab: Awards ceremony and prize giveaway Assignments due: Project proposals (if applicable) Lectures Lectures will be held starting at 1:00pm ET from Jan 18 - Jan 29 2021, Monday through Friday, virtually through Zoom. Current MIT students, faculty, postdocs, researchers, staff, etc. will be able to access the lectures during this two week period, synchronously or asynchronously, via the MIT Canvas course webpage (MIT internal only). Lecture recordings will be uploaded to the Canvas as soon as possible; students are not required to attend any lectures synchronously. Please see the Canvas for details on Zoom links.  The public edition of the course will only be made available after completion of the MIT course. Labs, Final Projects, Grading, and Prizes Course will be graded during MIT IAP for 6 units under P/D/F grading. Receiving a passing grade requires completion of each software lab project (through honor code, with submission required to enter lab competitions), a final project proposal/presentation or written review of a deep learning paper (submission required), and attendance/lecture viewing (through honor code). Submission of a written report or presentation of a project proposal will ensure a passing grade.  MIT students will be eligible for prizes and awards as part of the class competitions. There will be two parts to the competitions: (1) software labs and (2) final projects. More information is provided below. Winners will be announced on the last day of class, with thousands of dollars of prizes being given away!  Software labs There are three TensorFlow software lab exercises for the course, designed as iPython notebooks hosted in Google Colab. Software labs can be found on GitHub: https://github.com/aamini/introtodeeplearning. These are self-paced exercises and are designed to help you gain practical experience implementing neural networks in TensorFlow.  For registered MIT students, submission of lab materials is not necessary to get credit for the course or to pass the course.  At the end of each software lab there will be task-associated materials to submit (along with instructions) for entry into the competitions, open to MIT students and affiliates during the IAP offering. This includes MIT students/affiliates who are taking the class as listeners -- you are eligible!  These instructions are provided at the end of each of the labs. Completing these tasks and submitting your materials to Canvas will enter you into a per-lab competition. MIT students and affiliates will be eligible for prizes during the IAP offering; at the end of the course, prize-winners will be awarded with their prizes.  All competition submissions are due on January 26 at 11:59pm ET to Canvas.  For the software lab competitions, submissions will be judged on the basis of the following criteria: Strength and quality of final results (lab dependent) Soundness of implementation and approach Thoroughness and quality of provided descriptions and figures Gather.Town lab + Office Hour sessions After each day\u2019s lecture, there will be open Office Hours in the class GatherTown, up until 3pm ET. An MIT email is required to log in and join the GatherTown. During these sessions, there will not be a walk through or dictation of the labs; the labs are designed to be self-paced and to be worked on on your own time.  The GatherTown sessions will be hosted by course staff and are held so you can: Ask questions on course lectures, labs, logistics, project, or anything else; Work on the labs in the presence of classmates/TAs/instructors; Meet classmates to find groups for the final project; Group work time for the final project; Bring the class community together. Final project To satisfy the final project requirement for this course, students will have two options: (1) write a 1 page paper review (single-spaced) on a recent deep learning paper of your choice or (2) participate and present in the project proposal pitch competition. The 1 page paper review option is straightforward, we propose some papers within this document to help you get started, and you can satisfy a passing grade with this option -- you will not be eligible for the grand prizes. On the other hand, participation in the project proposal pitch competition will equivalently satisfy your course requirements but additionally make you eligible for the grand prizes. See the section below for more details and requirements for each of these options. Paper Review Students may satisfy the final project requirement by reading and reviewing a recent deep learning paper of their choosing. In the written review, students should provide both: 1) a description of the problem, technical approach, and results of the paper; 2) critical analysis and exposition of the limitations of the work and opportunities for future work. Reviews should be submitted on Canvas by Thursday Jan 28, 2021, 11:59:59pm Eastern Time (ET).  Just a few paper options to consider...  https://papers.nips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf https://papers.nips.cc/paper/2018/file/69386f6bb1dfed68692a24c8686939b9-Paper.pdf https://papers.nips.cc/paper/2020/file/1457c0d6bfcb4967418bfb8ac142f64a-Paper.pdf https://science.sciencemag.org/content/362/6419/1140 https://papers.nips.cc/paper/2018/file/0e64a7b00c83e3d22ce6b3acf2c582b6-Paper.pdf https://arxiv.org/pdf/1906.11829.pdf https://www.nature.com/articles/s42256-020-00237-3 https://pubmed.ncbi.nlm.nih.gov/32084340/ Project Proposal Presentation Keyword: proposal  This is a 2 week course so we do not require results or working implementations! However, to win the top prizes, nice, clear results and implementations will demonstrate feasibility of your proposal which is something we look for!  Logistics -- please read!  You must sign up to present before 11:59:59pm Eastern Time (ET) on Wednesday Jan 27, 2021 Slides must be in a Google Slide before 11:59:59pm Eastern Time (ET) on Thursday Jan 28, 2021 Project groups can be between 1 and 5 people Listeners welcome To be eligible for a prize you must have at least 1 registered MIT student in your group Each participant will only be allowed to be in one group and present one project pitch Synchronous attendance on 1/29/21 is required to make the project pitch! 3 min presentation on your idea (we will be very strict with the time limits) Prizes! (see below)  Sign up to Present here: by 11:59pm ET on Wednesday Jan 27  Once you sign up, make your slide in the following Google Slides; submit by midnight on Thursday Jan 28. Please specify the project group # on your slides!!!  Things to Consider This doesn\u2019t have to be a new deep learning method.  It can just be an interesting application that you apply some existing deep learning method to. What problem are you solving?  Are there use cases/applications?   Why do you think deep learning methods might be suited to this task?  How have people done it before? Is it a new task? If so, what are similar tasks that people have worked on?  In what aspects have they succeeded or failed?   What is your method of solving this problem? What type of model + architecture would you use?  Why?  What is the data for this task? Do you need to make a dataset or is there one publicly available? What are the characteristics of the data?  Is it sparse, messy, imbalanced?  How would you deal with that? Project Proposal Grading Rubric Project proposals will be evaluated by a panel of judges on the basis of the following three criteria: 1) novelty and impact; 2) technical soundness, feasibility, and organization, including quality of any presented results; 3) clarity and presentation. Each judge will award a score from 1 (lowest) to 5 (highest) for each of the criteria; the average score from each judge across these criteria will then be averaged with that of the other judges to provide the final score. The proposals with the highest final scores will be selected for prizes.   Here are the guidelines for the criteria:  Novelty and impact: encompasses the potential impact of the project idea, its novelty with respect to existing approaches. Why does the proposed work matter? What problem(s) does it solve? Why are these problems important? Technical soundness, feasibility, and organization: encompasses all technical aspects of the proposal. Do the proposed methodology and architecture make sense? Is the architecture the best suited for the proposed problem? Is deep learning the best approach for the problem? How realistic is it to implement the idea? Was there any implementation of the method? If results and data are presented, we will evaluate the strength of the results/data. Clarity and presentation: encompasses the delivery and quality of the presentation itself. Is the talk well organized? Are the slides aesthetically compelling? Is there a clear, well-delivered narrative? Are the problem and proposed method clearly presented?   Past Project Proposal Ideas Recipe Generation with RNNs Can we compress videos with CNN + RNN? Music Generation with RNNs Style Transfer Applied to X GAN\u2019s on a new modality Summarizing text/news articles Combining news articles about similar events  Code or spec generation Multimodal speech \u2192 handwriting Generate handwriting based on keywords (i.e. cursive, slanted, neat) Predicting stock market trends Show language learners articles or videos at their level  Transfer of writing style Chemical Synthesis with Recurrent Neural networks Transfer learning to learn something in a domain for which it\u2019s hard or risky to gather data or do training RNNs to model some type of time series data Computer vision to coach sports players Computer vision system for safety brakes or warnings  Use IBM Watson API to get the sentiment of your Facebook newsfeed Deep learning webcam to give wifi-access to friends or improve video chat in some way Domain-specific chatbot to help you perform a specific task Detect whether a signature is fraudulent Awards + Categories Final Project Awards: 1x NVIDIA RTX 3080 4x Google Home Max 3x Display Monitors  Software Lab Awards: Bose headphones (Lab 1) Display monitor (Lab 2) Bebop drone (Lab 3) Important Links and Emails Course website: http://introtodeeplearning.com Course staff: introtodeeplearning-staff@mit.edu Piazza forum (MIT only): https://piazza.com/mit/spring2021/6s191 Canvas (MIT only): https://canvas.mit.edu/courses/8291 Software lab repository: https://github.com/aamini/introtodeeplearning Lab/office hour sessions (MIT only): https://gather.town/app/56toTnlBrsKCyFgj/MITDeepLearning", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 74361, "topics": []}, {"name": "90DaysOfDevOps", "url": "https://github.com/yazabat/90DaysOfDevOps", "description": "This repository is my documenting repository for learning the world of DevOps. I started this journey on the 1st January 2022 and I plan to run to March 31st for a complete 90-day romp on spending an hour a day including weekends to get a foundational knowledge across a lot of different areas that make up DevOps. ", "language": ["Shell", "Go", "Python", "HCL", "Dockerfile", "Jinja", "PowerShell", "Makefile", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 212146, "topics": []}, {"name": "amazon-sagemaker-examples", "url": "https://github.com/yazabat/amazon-sagemaker-examples", "description": "Example notebooks that show how to apply machine learning, deep learning and reinforcement learning in Amazon SageMaker", "language": ["Jupyter Notebook", "Python", "Roff", "Shell", "HTML", "Dockerfile", "R", "Java", "C", "JSONiq"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 280473, "topics": []}, {"name": "artificial-intelligence-for-trading", "url": "https://github.com/yazabat/artificial-intelligence-for-trading", "description": "Content for Udacity's AI in Trading NanoDegree.", "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9108, "topics": []}, {"name": "automation", "url": "https://github.com/yazabat/automation", "description": "Automation with Python (Excel, scripts, etc)", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 271, "topics": []}, {"name": "auto_bank_reconcilation", "url": "https://github.com/yazabat/auto_bank_reconcilation", "description": "a python script to automate the dreaded bank reconciliation process by automatically highlighting any matching instances found in the user and the bank records.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13, "topics": []}, {"name": "bobetocalo_pami20", "url": "https://github.com/yazabat/bobetocalo_pami20", "description": "Multi-task head pose estimation in-the-wild", "language": ["C++", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 118390, "topics": []}, {"name": "Breve-introduccion-a-algunos-diagramas-en-R", "url": "https://github.com/yazabat/Breve-introduccion-a-algunos-diagramas-en-R", "description": "Este repositorio esta dise\u00f1ado con la intenci\u00f3n de brindar una breve gu\u00eda sobre el uso de algunos gr\u00e1ficos en R", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 97, "topics": []}, {"name": "CienciaDeDatos-Modeler", "url": "https://github.com/yazabat/CienciaDeDatos-Modeler", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 21489, "topics": []}, {"name": "COP-Estimation-Misspec", "url": "https://github.com/yazabat/COP-Estimation-Misspec", "description": "R code used in the master thesis \"Estimation of the Dependence Parameter in Bivariate Archimedean Copula Models Under Misspecification\"", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 18707, "topics": []}, {"name": "copula", "url": "https://github.com/yazabat/copula", "description": "Matlab Copula Toolbox", "language": ["MATLAB", "Python", "C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2798, "topics": []}, {"name": "copulae", "url": "https://github.com/yazabat/copulae", "description": "Multivariate data modelling with Copulas in Python", "language": ["Jupyter Notebook", "Python", "Cython", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2545, "topics": []}, {"name": "CPP-Crash-Course", "url": "https://github.com/yazabat/CPP-Crash-Course", "description": "C++ Crash Course", "language": ["C++", "HTML", "Python", "CSS", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 66, "topics": []}, {"name": "create-eth-app", "url": "https://github.com/yazabat/create-eth-app", "description": "Create Ethereum-powered apps with one command", "language": ["JavaScript", "TypeScript", "Handlebars", "HTML", "Vue", "CSS", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 39456, "topics": []}, {"name": "Cyberfort-CTF-Website", "url": "https://github.com/yazabat/Cyberfort-CTF-Website", "description": "Cyberfort CTF is an online platform to test and advance skills in Penetration Testing and Cybersecurity.", "language": ["JavaScript", "CSS", "HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10052, "topics": []}, {"name": "DataAnalysisProjects", "url": "https://github.com/yazabat/DataAnalysisProjects", "description": "This contains data analysis projects", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9853, "topics": []}, {"name": "Datapath_webinar", "url": "https://github.com/yazabat/Datapath_webinar", "description": "Recursos utilizados en el webinar de Datapah - Limpieza de datos con Python", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5030, "topics": []}, {"name": "datosabiertosEjecucionPresupuestalMEF_Covid", "url": "https://github.com/yazabat/datosabiertosEjecucionPresupuestalMEF_Covid", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "DY_cohomology", "url": "https://github.com/yazabat/DY_cohomology", "description": "Contains the GAP programs used in the paper arXiv:2202.12287", "language": ["GAP"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 17, "topics": []}, {"name": "econometrics_at_scale", "url": "https://github.com/yazabat/econometrics_at_scale", "description": null, "language": ["R", "Jupyter Notebook", "Shell", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11546, "topics": []}, {"name": "erpnext-client", "url": "https://github.com/yazabat/erpnext-client", "description": "GUI for ERPNext bank reconciliation and purchase invoice creation", "language": ["Python", "Shell", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 325, "topics": []}, {"name": "Ferrari-Stock-Pitch---Cleveland-Research-Company", "url": "https://github.com/yazabat/Ferrari-Stock-Pitch---Cleveland-Research-Company", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 801, "topics": []}, {"name": "FISCO-BCOS", "url": "https://github.com/yazabat/FISCO-BCOS", "description": "FISCO BCOS\u662f\u7531\u5fae\u4f17\u7275\u5934\u7684\u91d1\u94fe\u76df\u4e3b\u5bfc\u7814\u53d1\u3001\u5bf9\u5916\u5f00\u6e90\u3001\u5b89\u5168\u53ef\u63a7\u7684\u4f01\u4e1a\u7ea7\u91d1\u878d\u533a\u5757\u94fe\u5e95\u5c42\u6280\u672f\u5e73\u53f0\u3002 \u5355\u94fe\u914d\u7f6e\u4e0b\uff0c\u6027\u80fdTPS\u53ef\u8fbe\u4e07\u7ea7\u3002\u63d0\u4f9b\u7fa4\u7ec4\u67b6\u6784\u3001\u5e76\u884c\u8ba1\u7b97\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u3001\u53ef\u63d2\u62d4\u7684\u5171\u8bc6\u673a\u5236\u3001\u9690\u79c1\u4fdd\u62a4\u7b97\u6cd5\u3001\u652f\u6301\u5168\u94fe\u8def\u56fd\u5bc6\u7b97\u6cd5\u7b49\u8bf8\u591a\u7279\u6027\u3002 \u7ecf\u8fc7\u591a\u4e2a\u673a\u6784\u3001\u591a\u4e2a\u5e94\u7528\uff0c\u957f\u65f6\u95f4\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5b9e\u8df5\u68c0\u9a8c\uff0c\u5177\u5907\u91d1\u878d\u7ea7\u7684\u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u7528\u6027\u53ca\u9ad8\u5b89\u5168\u6027\u3002FISCO BCOS is a secure and reliable financial-grade open-source blockchain platform. The platform provides rich features including group architecture, cross-chain communication protocols, pluggable consensus mechanisms, privacy protection algorithms, OSCCA-approved (Office of State Commercial Cryptography Administration) cryptography algorithms, and distributed storage. Its performance, usability, and security have been testified by many institutional users and successful business applications in a live production environment.", "language": ["C++", "Python", "CMake", "Shell", "Solidity", "C", "Rust", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 287335, "topics": []}, {"name": "Fitting_and_Simulating_Archimedean_Copulas", "url": "https://github.com/yazabat/Fitting_and_Simulating_Archimedean_Copulas", "description": "Fitting and Simulating Archimedean Gumbel, Clayton and Frank Copulas", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 234, "topics": []}, {"name": "gcmi", "url": "https://github.com/yazabat/gcmi", "description": "Functions for calculating mutual information and other information theoretic quantities using a parametric Gaussian copula.", "language": ["MATLAB", "Python", "M"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 86, "topics": []}, {"name": "HPCS-HR-Panel", "url": "https://github.com/yazabat/HPCS-HR-Panel", "description": "An extensive HR Panel which incorporates all the basic manegerial tasks like Employee Attendance Checker, Employee Management etc.  Although the live version has some issues (due to code not deploying properly on server, the website can be seen live here: https://hr-panel.000webhostapp.com/", "language": ["JavaScript", "PHP", "CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41260, "topics": []}, {"name": "introduccion-a-spark", "url": "https://github.com/yazabat/introduccion-a-spark", "description": "Curso Introductorio de Spark by Platzi \ud83d\udc9a", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 18586, "topics": []}, {"name": "joypy", "url": "https://github.com/yazabat/joypy", "description": "Joyplots in Python with matplotlib & pandas :chart_with_upwards_trend:", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8506, "topics": []}, {"name": "Kalman-Filter", "url": "https://github.com/yazabat/Kalman-Filter", "description": "Developed as coursework for Artificial Intelligence for Robotics @ Georgia Tech", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "keywordPDFsearchLISTINGpy", "url": "https://github.com/yazabat/keywordPDFsearchLISTINGpy", "description": "This code allows to automatize the search of keywords in a directory saving several hours", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "LatexDocs_AppliedMath", "url": "https://github.com/yazabat/LatexDocs_AppliedMath", "description": "2022-1", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "lecturaveloz", "url": "https://github.com/yazabat/lecturaveloz", "description": null, "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "meetup-presentations_lima", "url": "https://github.com/yazabat/meetup-presentations_lima", "description": null, "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 73717, "topics": []}, {"name": "microslides", "url": "https://github.com/yazabat/microslides", "description": "buec311 class page trial", "language": ["HTML", "TeX", "JavaScript", "R", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 125397, "topics": []}, {"name": "mml-book.github.io", "url": "https://github.com/yazabat/mml-book.github.io", "description": "Companion webpage to the book \"Mathematics For Machine Learning\"", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 203821, "topics": []}, {"name": "nlp-in-python-tutorial", "url": "https://github.com/yazabat/nlp-in-python-tutorial", "description": "comparing stand up comedians using natural language processing", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 998, "topics": []}, {"name": "nlp_public_policy", "url": "https://github.com/yazabat/nlp_public_policy", "description": "NLP: An Application for Public Policy, PyCon Ireland 2018", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 32669, "topics": []}, {"name": "notebooks", "url": "https://github.com/yazabat/notebooks", "description": "Jupyter notebooks for the Natural Language Processing with Transformers book", "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 34957, "topics": []}, {"name": "nuclear_data", "url": "https://github.com/yazabat/nuclear_data", "description": "Web Scraping del Power Reactor Information System", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 384, "topics": []}, {"name": "optimizers", "url": "https://github.com/yazabat/optimizers", "description": "examples of lp optimization in python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8806, "topics": []}, {"name": "oTree", "url": "https://github.com/yazabat/oTree", "description": "Python framework for multiplayer decision games, behavioral experiments, and surveys", "language": ["Python", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 16085, "topics": []}, {"name": "pdf-finder", "url": "https://github.com/yazabat/pdf-finder", "description": "busca palabras en cuerpo de pdf", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8848, "topics": []}, {"name": "Poo2022", "url": "https://github.com/yazabat/Poo2022", "description": "Poo2022-UNI", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "Portfolio", "url": "https://github.com/yazabat/Portfolio", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "py", "url": "https://github.com/yazabat/py", "description": "Repository to store sample python programs for python learning", "language": ["Jupyter Notebook", "Python", "HTML", "JavaScript", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 201094, "topics": []}, {"name": "pycopula", "url": "https://github.com/yazabat/pycopula", "description": "Python copulas library for dependency modeling", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5101, "topics": []}, {"name": "python-data-analysis-test1", "url": "https://github.com/yazabat/python-data-analysis-test1", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 179, "topics": []}, {"name": "python-training", "url": "https://github.com/yazabat/python-training", "description": "Python training for business analysts and traders", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 869, "topics": []}, {"name": "qrm", "url": "https://github.com/yazabat/qrm", "description": "qrm", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 181547, "topics": []}, {"name": "qut_thesis", "url": "https://github.com/yazabat/qut_thesis", "description": "QUT thesis for Masters by Research", "language": ["TeX", "R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 202326, "topics": []}, {"name": "r4ds", "url": "https://github.com/yazabat/r4ds", "description": "R for data science: a book", "language": ["R", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 44566, "topics": []}, {"name": "rladies-lima-meetup-oct21", "url": "https://github.com/yazabat/rladies-lima-meetup-oct21", "description": "\u00a1Hola mundo! Aqu\u00ed se encuentran los materiales del encuentro de R-Ladies para este mes", "language": ["R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2104, "topics": []}, {"name": "R_workshop", "url": "https://github.com/yazabat/R_workshop", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "sakila", "url": "https://github.com/yazabat/sakila", "description": "Sakila sample database for each database platform", "language": ["TSQL", "PLpgSQL", "PLSQL", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12296, "topics": []}, {"name": "sci-hub-now", "url": "https://github.com/yazabat/sci-hub-now", "description": "Free access to academic papers with just a single click! Abolish publishers, long live the open access movement! \ud83e\udd85", "language": ["JavaScript", "HTML", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 509, "topics": []}, {"name": "Spark-The-Definitive-Guide", "url": "https://github.com/yazabat/Spark-The-Definitive-Guide", "description": "Spark: The Definitive Guide's Code Repository", "language": ["Scala", "Python", "Java", "TSQL", "R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 536465, "topics": []}, {"name": "TabPy", "url": "https://github.com/yazabat/TabPy", "description": "Execute Python code on the fly and display results in Tableau visualizations:", "language": ["Python", "Jupyter Notebook", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1567, "topics": []}, {"name": "TallerRLadiesLima", "url": "https://github.com/yazabat/TallerRLadiesLima", "description": "Este repositorio incluye el material  del Taller \"Analiza datos electorales con R\" organizado por RLadiesLima y CIPO UARM.", "language": ["HTML", "R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 28210, "topics": []}, {"name": "test2", "url": "https://github.com/yazabat/test2", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "test_repo", "url": "https://github.com/yazabat/test_repo", "description": "R ladies DC demo repository", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2, "topics": []}, {"name": "text_analytics", "url": "https://github.com/yazabat/text_analytics", "description": "Basic text analytics and natural language processing in Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 181, "topics": []}, {"name": "web-scraping-with-python-2848331", "url": "https://github.com/yazabat/web-scraping-with-python-2848331", "description": "Web Scraping with Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7960, "topics": []}, {"name": "Webscraping_Platzi", "url": "https://github.com/yazabat/Webscraping_Platzi", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1, "topics": []}, {"name": "website", "url": "https://github.com/yazabat/website", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 449, "topics": []}]