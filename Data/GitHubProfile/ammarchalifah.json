[{"name": "addons", "url": "https://github.com/ammarchalifah/addons", "description": "Useful extra functionality for TensorFlow 2.x maintained by SIG-addons", "language": ["Python", "C++", "Smarty", "Starlark", "Shell", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5668, "topics": []}, {"name": "airflow-pipeline", "url": "https://github.com/ammarchalifah/airflow-pipeline", "description": "Project repository of Apache Airflow, deployed on Docker in Amazon EC2 via GitLab. ", "language": ["Python", "Shell"], "forks_count": 9, "stargazers_count": 8, "watchers_count": 8, "size": 73, "topics": []}, {"name": "ammarchalifah.github.io", "url": "https://github.com/ammarchalifah/ammarchalifah.github.io", "description": "Ammar's personal coding space", "language": ["HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 427, "topics": []}, {"name": "ammaru-kub-bot", "url": "https://github.com/ammarchalifah/ammaru-kub-bot", "description": "LINE chatbot to perform simple commands (sending pictures from static directory and sending predetermined text messages) built with Flask and Line Chatbot SDK. The script is deployed to Heroku, then connected to LINE messaging API via its webhook service.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "data-eng-zoomcamp", "url": "https://github.com/ammarchalifah/data-eng-zoomcamp", "description": "Repository to store projects and other notes from the DataTalks' Data Engineering Zoomcamp.", "language": ["Python", "Dockerfile", "HCL", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 54, "topics": []}, {"name": "datapipeline-simple-ingestion", "url": "https://github.com/ammarchalifah/datapipeline-simple-ingestion", "description": "Simple data pipeline to migrate a table from source Postgres table to destination Postgres table.", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 85, "topics": ["airflow", "postgres"]}, {"name": "faster-rcnn-implementation", "url": "https://github.com/ammarchalifah/faster-rcnn-implementation", "description": "Object detectio inference using Faster RCNN model. Functions modified from Tensorflow Object Detection API.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 196, "topics": []}, {"name": "hadoop-practice", "url": "https://github.com/ammarchalifah/hadoop-practice", "description": "Personal learning repository to understand Hadoop, YARN, Spark, and HIVE.", "language": ["Java"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "moving-granary-background-selector", "url": "https://github.com/ammarchalifah/moving-granary-background-selector", "description": "Simple implementation to generate grayscale background image from a video stream. Implemented using OpenCV library and Python language.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7802, "topics": []}, {"name": "multiple-object-color-tracker", "url": "https://github.com/ammarchalifah/multiple-object-color-tracker", "description": "Multiple object tracker based on color implemented with Python and OpenCV. ", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 14764, "topics": []}, {"name": "people-counting", "url": "https://github.com/ammarchalifah/people-counting", "description": "Framework for people counting algorithm utilizing TensorFlow 2 Object Detection API.", "language": ["Python", "Jupyter Notebook", "Shell", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 41338, "topics": []}, {"name": "people-tracker-and-counter", "url": "https://github.com/ammarchalifah/people-tracker-and-counter", "description": "Python based object detection and tracking for collecting data from CCTV. Built on TensorFlow Object Detection API 2 and centroid tracker implementation by Pyimagesearch.", "language": ["Python", "Jupyter Notebook", "Shell", "Dockerfile"], "forks_count": 0, "stargazers_count": 7, "watchers_count": 7, "size": 223407, "topics": []}, {"name": "PlotNeuralNet", "url": "https://github.com/ammarchalifah/PlotNeuralNet", "description": "Latex code for making neural networks diagrams", "language": ["TeX", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2268, "topics": []}, {"name": "simple-spam-classification", "url": "https://github.com/ammarchalifah/simple-spam-classification", "description": "This simple program classify a text message as spam/not spam. It uses NLTK and Pandas library. The mechanism behind the classification is by using a training data with spam/not spam label, and by using direct comparison between keywords from the spam and not spam categories. For words that appear in spam categories and not in not spam categories, it will be saved as spam keywords. When a test text given as an input, the program will see whether it has the spam keyword in it or not, then classify it accordingly.", "language": ["Python", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2973, "topics": []}, {"name": "tensorflow", "url": "https://github.com/ammarchalifah/tensorflow", "description": "An Open Source Machine Learning Framework for Everyone", "language": ["C++", "Python", "MLIR", "Starlark", "HTML", "Go", "C", "Java", "Jupyter Notebook", "Shell", "Dockerfile", "Objective-C++", "Objective-C", "CMake", "Makefile", "Swift", "Smarty", "Batchfile", "PHP", "Pascal", "Assembly", "C#", "SourcePawn", "Ruby", "Perl", "LLVM", "Roff", "NASL", "Vim Snippet"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 693950, "topics": []}, {"name": "video-analytics-bisa-ai", "url": "https://github.com/ammarchalifah/video-analytics-bisa-ai", "description": "Basics of video analytics", "language": ["Python"], "forks_count": 2, "stargazers_count": 1, "watchers_count": 1, "size": 25794, "topics": []}, {"name": "VideoRCNN", "url": "https://github.com/ammarchalifah/VideoRCNN", "description": "RCNN object detection implementation with python from scratch.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4885, "topics": []}]