[{"name": "agramfort.github.io", "url": "https://github.com/agramfort/agramfort.github.io", "description": "Source of my webpage", "language": ["TeX", "HTML", "CSS", "Python", "Makefile", "Shell"], "forks_count": 4, "stargazers_count": 0, "watchers_count": 0, "size": 1818, "topics": []}, {"name": "AI4Health_ml_eeg", "url": "https://github.com/agramfort/AI4Health_ml_eeg", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 2, "stargazers_count": 4, "watchers_count": 4, "size": 45185, "topics": []}, {"name": "air_passengers", "url": "https://github.com/agramfort/air_passengers", "description": "Air passengers RAMP starting kit", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 898, "topics": []}, {"name": "alphacsc", "url": "https://github.com/agramfort/alphacsc", "description": "Convolution dictionary learning for time-series", "language": ["Python", "TeX", "CSS", "HTML", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12812, "topics": []}, {"name": "app-detect-ecg-artifact", "url": "https://github.com/agramfort/app-detect-ecg-artifact", "description": "A sample brainlife app that uses EEG data (fif)", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": []}, {"name": "arl-eegmodels", "url": "https://github.com/agramfort/arl-eegmodels", "description": "This is the Army Research Laboratory (ARL) EEGModels Project: A Collection of Convolutional Neural Network (CNN) models for EEG signal classification, using Keras and Tensorflow", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 70, "topics": []}, {"name": "asgd_test", "url": "https://github.com/agramfort/asgd_test", "description": "a test for scikit's asgd", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11574, "topics": []}, {"name": "autoreject", "url": "https://github.com/agramfort/autoreject", "description": "Automated rejection and repair of bad trials/sensors in M/EEG", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 821, "topics": []}, {"name": "bayes_mxne", "url": "https://github.com/agramfort/bayes_mxne", "description": "Mixed-norms and Hierarchical Bayesian models for the M/EEG inverse problem", "language": ["Python", "Makefile"], "forks_count": 3, "stargazers_count": 5, "watchers_count": 5, "size": 2137, "topics": []}, {"name": "benchmark_huber_l2", "url": "https://github.com/agramfort/benchmark_huber_l2", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "benchmark_jointdiag", "url": "https://github.com/agramfort/benchmark_jointdiag", "description": "Benchmark repository for Approximate Joint Diagonalization (AJD)", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 15, "topics": []}, {"name": "benchmark_lasso", "url": "https://github.com/agramfort/benchmark_lasso", "description": "Benchopt benchmark for Lasso", "language": ["Python", "R", "Julia"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 66, "topics": []}, {"name": "benchmark_linear_ica", "url": "https://github.com/agramfort/benchmark_linear_ica", "description": "Benchopt benchmark for linear ICA", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "benchmark_linear_svm_binary_classif_no_intercept", "url": "https://github.com/agramfort/benchmark_linear_svm_binary_classif_no_intercept", "description": "Benchopt Benchmark for SVM for binary classification", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 13, "topics": []}, {"name": "benchmark_logreg_l1", "url": "https://github.com/agramfort/benchmark_logreg_l1", "description": "Benchopt benchmark for Sparse Logistic Regression", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 28, "topics": []}, {"name": "benchmark_logreg_l2", "url": "https://github.com/agramfort/benchmark_logreg_l2", "description": "Benchopt benchmark for L2-regularized Logistic Regression", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 52, "topics": []}, {"name": "benchmark_mcp", "url": "https://github.com/agramfort/benchmark_mcp", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10, "topics": []}, {"name": "benchmark_multi_task_lasso", "url": "https://github.com/agramfort/benchmark_multi_task_lasso", "description": "benchmarking of multi task lasso solvers", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 169, "topics": []}, {"name": "benchmark_nnls", "url": "https://github.com/agramfort/benchmark_nnls", "description": "Benchopt benchmark for Non-negative Least Square", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "benchmark_ols", "url": "https://github.com/agramfort/benchmark_ols", "description": "Benchopt benchmark for Ordinary Least Square", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11, "topics": []}, {"name": "benchmark_quantile_regression", "url": "https://github.com/agramfort/benchmark_quantile_regression", "description": "Benchopt benchmark for Quantile Regression", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11, "topics": []}, {"name": "benchmark_ridge_positive", "url": "https://github.com/agramfort/benchmark_ridge_positive", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7, "topics": []}, {"name": "benchmark_stochastic_logreg_l2", "url": "https://github.com/agramfort/benchmark_stochastic_logreg_l2", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "benchOpt", "url": "https://github.com/agramfort/benchOpt", "description": null, "language": ["Python", "Shell", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1132, "topics": []}, {"name": "BGBox", "url": "https://github.com/agramfort/BGBox", "description": "Bernoulli Gaussian Toolbox", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5, "topics": []}, {"name": "BIDS-examples", "url": "https://github.com/agramfort/BIDS-examples", "description": "A set of BIDS compatible datasets with empty nifti files that can be used for testing software.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 537237, "topics": []}, {"name": "bird", "url": "https://github.com/agramfort/bird", "description": "Pure Python implementation of the BIRD algorithm for (structured)-sparsity based denoising of multichannel array", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 39, "topics": []}, {"name": "blend2017", "url": "https://github.com/agramfort/blend2017", "description": "Material of talk at blendwebmix 2017", "language": ["Jupyter Notebook"], "forks_count": 2, "stargazers_count": 8, "watchers_count": 8, "size": 4348, "topics": []}, {"name": "boston_housing", "url": "https://github.com/agramfort/boston_housing", "description": "Boston housing price regression", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1407, "topics": []}, {"name": "brain-age-benchmark-paper", "url": "https://github.com/agramfort/brain-age-benchmark-paper", "description": "M/EEG brain age benchmark paper", "language": ["HTML", "Python", "R"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 8775, "topics": []}, {"name": "braindecode", "url": "https://github.com/agramfort/braindecode", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5265, "topics": []}, {"name": "brainstorm3", "url": "https://github.com/agramfort/brainstorm3", "description": "Brainstorm software: MEG, EEG, fNIRS, ECoG, sEEG and electrophysiology", "language": ["MATLAB", "C", "Shell", "Batchfile", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 448831, "topics": []}, {"name": "bst-data-examples", "url": "https://github.com/agramfort/bst-data-examples", "description": "A set of example datasets", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 109, "topics": []}, {"name": "california_rainfall_test", "url": "https://github.com/agramfort/california_rainfall_test", "description": "California rainfall forecasting RAMP starting kit (test)", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 104909, "topics": []}, {"name": "Cam-CAN-preprocessing", "url": "https://github.com/agramfort/Cam-CAN-preprocessing", "description": "Preprocessing of Cam-CAN's MEG/EEG data", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 49, "topics": []}, {"name": "Cam-CAN-to-BIDS", "url": "https://github.com/agramfort/Cam-CAN-to-BIDS", "description": "Cam-CAN to BIDS conversion via MNE-Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10, "topics": []}, {"name": "celer", "url": "https://github.com/agramfort/celer", "description": "Fast solver for the Lasso", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1486, "topics": []}, {"name": "challenge_IA_frugale_22", "url": "https://github.com/agramfort/challenge_IA_frugale_22", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 29418, "topics": []}, {"name": "check_notebook", "url": "https://github.com/agramfort/check_notebook", "description": "Command line tool to check notebooks (ie linter for notebooks)", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 19, "topics": []}, {"name": "cite-software", "url": "https://github.com/agramfort/cite-software", "description": "Citing software and how to measure it.", "language": ["Gnuplot", "Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 104, "topics": []}, {"name": "covertype", "url": "https://github.com/agramfort/covertype", "description": "Covertype RAMP kit", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20236, "topics": []}, {"name": "cpp-mkl-test", "url": "https://github.com/agramfort/cpp-mkl-test", "description": null, "language": ["C++", "CMake", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 81, "topics": []}, {"name": "cython_demo", "url": "https://github.com/agramfort/cython_demo", "description": "A demo of cython", "language": ["Python"], "forks_count": 0, "stargazers_count": 4, "watchers_count": 4, "size": 97, "topics": []}, {"name": "dask-glm", "url": "https://github.com/agramfort/dask-glm", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 160, "topics": []}, {"name": "datacamp-assignment-pandas", "url": "https://github.com/agramfort/datacamp-assignment-pandas", "description": "Assignement for Datacamp on pandas.", "language": ["Python"], "forks_count": 122, "stargazers_count": 0, "watchers_count": 0, "size": 1229, "topics": []}, {"name": "datacamp-assignment1", "url": "https://github.com/agramfort/datacamp-assignment1", "description": null, "language": ["Python"], "forks_count": 140, "stargazers_count": 0, "watchers_count": 0, "size": 6, "topics": []}, {"name": "datacamp2016_reports", "url": "https://github.com/agramfort/datacamp2016_reports", "description": null, "language": ["Jupyter Notebook"], "forks_count": 3, "stargazers_count": 1, "watchers_count": 1, "size": 2643, "topics": []}, {"name": "dicodile", "url": "https://github.com/agramfort/dicodile", "description": "Experiments for \"Distributed Convolutional Dictionary Learning (DiCoDiLe): Pattern Discovery in Large Images and Signals\"", "language": ["Python", "Shell", "TeX"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 303, "topics": []}, {"name": "DS3_practical_optim_for_ml", "url": "https://github.com/agramfort/DS3_practical_optim_for_ml", "description": "Notebooks from DS3 course on practical optimization", "language": ["Jupyter Notebook", "Python"], "forks_count": 4, "stargazers_count": 15, "watchers_count": 15, "size": 4474, "topics": []}, {"name": "eeglab-plugin-ieee-tbme-2010", "url": "https://github.com/agramfort/eeglab-plugin-ieee-tbme-2010", "description": "Eeglab plugin of my IEEE Paper in Trans. on Biomedical Engineering", "language": ["MATLAB", "C++", "XSLT", "CSS"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 1687, "topics": []}, {"name": "elekta-beamformer", "url": "https://github.com/agramfort/elekta-beamformer", "description": "Aston Beamformer Workshop", "language": ["MATLAB"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4111, "topics": []}, {"name": "el_nino_ramp", "url": "https://github.com/agramfort/el_nino_ramp", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 120, "topics": []}, {"name": "enhancement_proposals", "url": "https://github.com/agramfort/enhancement_proposals", "description": "Enhancement proposals for scikit-learn: structured discussions and rational for large additions and modifications", "language": ["Python", "Batchfile", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 129, "topics": []}, {"name": "fake_news", "url": "https://github.com/agramfort/fake_news", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 5349, "topics": []}, {"name": "fan_revenue_prediction", "url": "https://github.com/agramfort/fan_revenue_prediction", "description": "Company revenue prediction using French Attribution Notices", "language": ["HTML", "Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 339, "topics": []}, {"name": "faster-ica", "url": "https://github.com/agramfort/faster-ica", "description": "Several maximum likelihood ICA algorithms, including Picard", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 45194, "topics": []}, {"name": "fieldtrip", "url": "https://github.com/agramfort/fieldtrip", "description": "The MATLAB software toolbox for MEG and EEG analysis", "language": ["MATLAB", "C", "C++", "Java", "Processing", "Shell", "Makefile", "Mathematica", "Arduino", "Python", "QMake", "HTML", "Batchfile", "Emacs Lisp", "Objective-C"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 731714, "topics": []}, {"name": "findmkl_cmake", "url": "https://github.com/agramfort/findmkl_cmake", "description": null, "language": ["CMake", "C++"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 31, "topics": []}, {"name": "flask-mailing", "url": "https://github.com/agramfort/flask-mailing", "description": "Flask mail system for sending mails(individual, bulk) ,attachments(individual, bulk) fully asynchronously.", "language": ["Python", "Makefile", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1095, "topics": []}, {"name": "groupmne", "url": "https://github.com/agramfort/groupmne", "description": "Multi-subject MEG and EEG source localization with MNE", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9969, "topics": []}, {"name": "healthcare_bootcamp_new", "url": "https://github.com/agramfort/healthcare_bootcamp_new", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 89, "topics": []}, {"name": "heathcare_bootcamp", "url": "https://github.com/agramfort/heathcare_bootcamp", "description": null, "language": ["Python"], "forks_count": 12, "stargazers_count": 0, "watchers_count": 0, "size": 130, "topics": []}, {"name": "hidimstat", "url": "https://github.com/agramfort/hidimstat", "description": "HiDimStat: High-dimensional statistical inference tool for Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1038, "topics": []}, {"name": "hiparis_ml_eeg", "url": "https://github.com/agramfort/hiparis_ml_eeg", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 5, "watchers_count": 5, "size": 52010, "topics": []}, {"name": "HNPE", "url": "https://github.com/agramfort/HNPE", "description": "Repository with the code of \"HNPE: Leveraging Global Parameters for Neural Posterior Estimation\"", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1051, "topics": []}, {"name": "homebrew", "url": "https://github.com/agramfort/homebrew", "description": "The missing package manager for OS X.", "language": ["Ruby", "Python", "Shell", "JavaScript"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 8185, "topics": []}, {"name": "homebrew-science", "url": "https://github.com/agramfort/homebrew-science", "description": ":beer::microscope: Scientific formulae for the Homebrew package manager", "language": ["Ruby"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9345, "topics": []}, {"name": "human-locomotion", "url": "https://github.com/agramfort/human-locomotion", "description": "RAMP starting kit on the human locomotion data set", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20, "topics": []}, {"name": "inria-aphp-assignment", "url": "https://github.com/agramfort/inria-aphp-assignment", "description": null, "language": ["Python"], "forks_count": 7, "stargazers_count": 1, "watchers_count": 1, "size": 1235, "topics": []}, {"name": "intro-python-scarpentry-paris-2013", "url": "https://github.com/agramfort/intro-python-scarpentry-paris-2013", "description": "Teaching material on Python for the Software Carpentry bootcamp at Telecom ParisTech, Paris, 2013", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 116, "topics": []}, {"name": "IOKR", "url": "https://github.com/agramfort/IOKR", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 30870, "topics": []}, {"name": "ipython", "url": "https://github.com/agramfort/ipython", "description": "Official repository for IPython itself. Other repos in the IPython organization contain things like the website, documentation builds, etc.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 56910, "topics": []}, {"name": "iris", "url": "https://github.com/agramfort/iris", "description": "Iris classification", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 101, "topics": []}, {"name": "ironbci", "url": "https://github.com/agramfort/ironbci", "description": "Brain-Computer Interface, ADS1299 and STM32", "language": ["C"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3570, "topics": []}, {"name": "jax", "url": "https://github.com/agramfort/jax", "description": "Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more", "language": ["Python", "C++", "Jupyter Notebook", "Starlark", "Shell", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 35219, "topics": []}, {"name": "joblib", "url": "https://github.com/agramfort/joblib", "description": "Python function as pipeline jobs.", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2494, "topics": []}, {"name": "libmatio-feedstock", "url": "https://github.com/agramfort/libmatio-feedstock", "description": "A conda-smithy repository for libmatio.", "language": ["Shell", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 33, "topics": []}, {"name": "libsvmdata", "url": "https://github.com/agramfort/libsvmdata", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "liesse_telecom_paristech_python", "url": "https://github.com/agramfort/liesse_telecom_paristech_python", "description": "Supports de cours Python de la formation LIESSE de Telecom ParisTech", "language": [], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 3424, "topics": []}, {"name": "matio-openmeeg", "url": "https://github.com/agramfort/matio-openmeeg", "description": "clone of matio lib used in OpenMEEG", "language": ["C", "Fortran", "CMake"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10268, "topics": []}, {"name": "matlab_mesh_toolbox", "url": "https://github.com/agramfort/matlab_mesh_toolbox", "description": "mesh_*.m functions to work with triangulated surfaces in Matlab", "language": ["MATLAB", "C++", "Objective-C"], "forks_count": 5, "stargazers_count": 6, "watchers_count": 6, "size": 2812, "topics": []}, {"name": "meegpowreg", "url": "https://github.com/agramfort/meegpowreg", "description": "M/EEG power regression library", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 82, "topics": []}, {"name": "meg", "url": "https://github.com/agramfort/meg", "description": "source localisation of MEG signal", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8069, "topics": []}, {"name": "mesh2pdf-matlab", "url": "https://github.com/agramfort/mesh2pdf-matlab", "description": "Include 3D triangular meshes to a pdf from matlab", "language": ["Objective-C", "Shell"], "forks_count": 2, "stargazers_count": 3, "watchers_count": 3, "size": 7098, "topics": []}, {"name": "mesh_tracking_neuroimage_2010", "url": "https://github.com/agramfort/mesh_tracking_neuroimage_2010", "description": "Tracking brain activations on cortical mesh", "language": ["C", "MATLAB", "C++", "Objective-C"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 552, "topics": []}, {"name": "minirank", "url": "https://github.com/agramfort/minirank", "description": "Some ranking algorithms in Python", "language": ["C++", "C", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 142, "topics": []}, {"name": "mne-bids", "url": "https://github.com/agramfort/mne-bids", "description": "MNE BIDS ", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4869, "topics": []}, {"name": "mne-bids-pipeline", "url": "https://github.com/agramfort/mne-bids-pipeline", "description": "Template for a group study using the MNE Python software", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 2878, "topics": []}, {"name": "mne-bids-pipeline-config-files", "url": "https://github.com/agramfort/mne-bids-pipeline-config-files", "description": "Config files and reports of the MNE-BIDS-Pipeline", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1294320, "topics": []}, {"name": "mne-biomag-group-demo", "url": "https://github.com/agramfort/mne-biomag-group-demo", "description": "Group analysis demo with MNE", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 806039, "topics": []}, {"name": "mne-features", "url": "https://github.com/agramfort/mne-features", "description": "MNE-Features software for extracting features from multivariate time series", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7238, "topics": []}, {"name": "mne-hcp", "url": "https://github.com/agramfort/mne-hcp", "description": "MNE-HCP for processing the Human Connectome Project MEG data using MNE-Python", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6426, "topics": []}, {"name": "mne-matlab", "url": "https://github.com/agramfort/mne-matlab", "description": "MNE scripting with Matlab", "language": ["MATLAB", "Objective-C", "Shell"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 10147, "topics": []}, {"name": "mne-megnord-2019", "url": "https://github.com/agramfort/mne-megnord-2019", "description": "Teaching materials for MNE training session at MEG Nord 2019 Workshop", "language": ["Jupyter Notebook", "HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 29165, "topics": []}, {"name": "mne-python", "url": "https://github.com/agramfort/mne-python", "description": "MNE scripting with Python", "language": ["Python", "Shell", "PowerShell"], "forks_count": 0, "stargazers_count": 4, "watchers_count": 4, "size": 149942, "topics": []}, {"name": "mne-python-notebooks", "url": "https://github.com/agramfort/mne-python-notebooks", "description": "IPython notebooks for EEG/MEG data processing using mne-python", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 23508, "topics": []}, {"name": "mne-sandbox", "url": "https://github.com/agramfort/mne-sandbox", "description": "experimental mne-python code", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 33, "topics": []}, {"name": "mne-scripts", "url": "https://github.com/agramfort/mne-scripts", "description": "Sample scripts based on MNE", "language": ["Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 203, "topics": []}, {"name": "mne-testing-data", "url": "https://github.com/agramfort/mne-testing-data", "description": "Data for mne-python testing", "language": ["OpenEdge ABL"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1015641, "topics": []}, {"name": "mne-web-apps", "url": "https://github.com/agramfort/mne-web-apps", "description": "Voila Jupyter Apps made using MNE", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 3400, "topics": []}, {"name": "MNE_BIDS_cuttingeeg_2021", "url": "https://github.com/agramfort/MNE_BIDS_cuttingeeg_2021", "description": "MNE and BIDS Tutorial at CuttingEEG workshop 2021", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 4, "watchers_count": 4, "size": 36325, "topics": []}, {"name": "mne_biomag2012_poster", "url": "https://github.com/agramfort/mne_biomag2012_poster", "description": null, "language": ["TeX", "Python"], "forks_count": 6, "stargazers_count": 3, "watchers_count": 3, "size": 22960, "topics": []}, {"name": "mne_genova_2019", "url": "https://github.com/agramfort/mne_genova_2019", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 11579, "topics": []}, {"name": "mne_ohbm2018", "url": "https://github.com/agramfort/mne_ohbm2018", "description": null, "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 11688, "topics": []}, {"name": "mne_pratical_meeg", "url": "https://github.com/agramfort/mne_pratical_meeg", "description": "Materials for MNE tutorials at Practical MEEG workshop Paris 2019", "language": ["Jupyter Notebook", "Python"], "forks_count": 9, "stargazers_count": 9, "watchers_count": 9, "size": 5195, "topics": []}, {"name": "mne_sapien_labs_2019", "url": "https://github.com/agramfort/mne_sapien_labs_2019", "description": "MNE Talk Materials for Sapien Labs Symposium 2019", "language": ["HTML", "Jupyter Notebook"], "forks_count": 1, "stargazers_count": 4, "watchers_count": 4, "size": 3795, "topics": []}, {"name": "mne_scipy2017", "url": "https://github.com/agramfort/mne_scipy2017", "description": "Slides for MNE talk at Scipy Conf. 2017", "language": ["Jupyter Notebook"], "forks_count": 6, "stargazers_count": 15, "watchers_count": 15, "size": 920, "topics": []}, {"name": "mooc_python", "url": "https://github.com/agramfort/mooc_python", "description": "Material my mooc on Python at T\u00e9l\u00e9com ParisTech", "language": ["HTML", "JavaScript", "CSS"], "forks_count": 6, "stargazers_count": 4, "watchers_count": 4, "size": 2947, "topics": []}, {"name": "multiviewica", "url": "https://github.com/agramfort/multiviewica", "description": "MultiViewICA: Modeling shared sources", "language": ["Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 395, "topics": []}, {"name": "mvlearn", "url": "https://github.com/agramfort/mvlearn", "description": "Python package for multi-view machine learning", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 59434, "topics": []}, {"name": "nibabel", "url": "https://github.com/agramfort/nibabel", "description": "Python package to access a cacophony of neuro-imaging file formats", "language": ["Python", "C", "CSS", "Shell"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 7595, "topics": []}, {"name": "nilearn", "url": "https://github.com/agramfort/nilearn", "description": "Machine learning for NeuroImaging in Python", "language": ["Python", "Shell", "Makefile"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 26513, "topics": []}, {"name": "nipy", "url": "https://github.com/agramfort/nipy", "description": "Neuroimaging in python", "language": ["C", "Python", "Objective-C"], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 27597, "topics": []}, {"name": "nipype", "url": "https://github.com/agramfort/nipype", "description": "Pipelines and interfaces for neuroimaging packages", "language": ["Python", "Tcl", "MATLAB", "Shell", "Objective-C"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 11412, "topics": []}, {"name": "nistats", "url": "https://github.com/agramfort/nistats", "description": "Modeling and statistical inference on fMRI data in Python ", "language": ["Python", "Shell", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 227, "topics": []}, {"name": "nitime", "url": "https://github.com/agramfort/nitime", "description": "Timeseries analysis for neuroscience data", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 25168, "topics": []}, {"name": "nuclear_inventory_prediction", "url": "https://github.com/agramfort/nuclear_inventory_prediction", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5962, "topics": []}, {"name": "nuclear_iventory_prediction", "url": "https://github.com/agramfort/nuclear_iventory_prediction", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 39683, "topics": []}, {"name": "numba_tutorial_scipy2017", "url": "https://github.com/agramfort/numba_tutorial_scipy2017", "description": null, "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1722, "topics": []}, {"name": "openmeeg", "url": "https://github.com/agramfort/openmeeg", "description": "A C++ package for low-frequency bio-electromagnetism solving forward problems in the field of EEG and MEG.", "language": ["C", "Fortran", "C++", "Shell", "LiveScript", "Assembly", "Perl", "Ada", "C#", "Pascal", "Objective-C", "Python", "Logos", "CSS", "CLIPS", "JavaScript"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 41148, "topics": []}, {"name": "OpenMEEG-project", "url": "https://github.com/agramfort/OpenMEEG-project", "description": "This is an OpenMEEG super project which is meant to simplify the contrib stuff...", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 134, "topics": []}, {"name": "openmeeg.github.io", "url": "https://github.com/agramfort/openmeeg.github.io", "description": "OpenMEEG web site", "language": ["CSS", "Python", "PHP", "Makefile", "HTML", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8628, "topics": []}, {"name": "openmeeg_viz", "url": "https://github.com/agramfort/openmeeg_viz", "description": "Visualization code for OpenMEEG files", "language": ["Python", "GLSL"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 145, "topics": []}, {"name": "OpenScienceRoom2018", "url": "https://github.com/agramfort/OpenScienceRoom2018", "description": "Schedule and resources from the OHBM Open Science Room: Singapore 2018", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12413, "topics": []}, {"name": "pactools", "url": "https://github.com/agramfort/pactools", "description": "Phase-amplitude coupling (PAC) toolbox", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 272, "topics": []}, {"name": "picard", "url": "https://github.com/agramfort/picard", "description": "Preconditioned ICA for Real Data", "language": ["Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2694, "topics": []}, {"name": "pollenating_insects_3", "url": "https://github.com/agramfort/pollenating_insects_3", "description": "Pollenating insects (third) RAMP starting kit", "language": ["Jupyter Notebook", "Python", "Shell"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11022, "topics": []}, {"name": "POT", "url": "https://github.com/agramfort/POT", "description": "Python Optimal Transport library", "language": ["C++", "Python", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 44053, "topics": []}, {"name": "presentations", "url": "https://github.com/agramfort/presentations", "description": "Public presentations source file", "language": ["TeX", "Emacs Lisp"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8853, "topics": []}, {"name": "pydata-paris-2015", "url": "https://github.com/agramfort/pydata-paris-2015", "description": null, "language": ["HTML", "CSS", "CoffeeScript", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2263, "topics": []}, {"name": "PyMP", "url": "https://github.com/agramfort/PyMP", "description": "A Python Implementation of Greedy Algorithms developped during my PhD", "language": ["Python", "C", "C++"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 6517, "topics": []}, {"name": "pymultifracs", "url": "https://github.com/agramfort/pymultifracs", "description": "Wavelet based multifractal analysis of 1D signals", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 22173, "topics": []}, {"name": "pypreprocess", "url": "https://github.com/agramfort/pypreprocess", "description": "Preprocessing scripts for neuro imaging", "language": ["Python", "HTML", "Shell", "CSS", "Makefile", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 28096, "topics": []}, {"name": "pyprox", "url": "https://github.com/agramfort/pyprox", "description": "Proximal algorithms made easy in Python", "language": ["Python"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 363, "topics": []}, {"name": "pyRiemann", "url": "https://github.com/agramfort/pyRiemann", "description": "Python package for covariance matrices manipulation and Biosignal classification with application in Brain Computer interface", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 999, "topics": []}, {"name": "PySurfer", "url": "https://github.com/agramfort/PySurfer", "description": "Python tools for Freesurfer", "language": ["Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 13532, "topics": []}, {"name": "python-bibtexparser", "url": "https://github.com/agramfort/python-bibtexparser", "description": "Bibtex parser for Python 2.7 and 3.3 or newer", "language": ["Python", "TeX"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 589, "topics": []}, {"name": "python-gsoc.github.io", "url": "https://github.com/agramfort/python-gsoc.github.io", "description": "Website and ideas page for Python's Google Summer of Code efforts", "language": ["HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 160, "topics": []}, {"name": "qndiag", "url": "https://github.com/agramfort/qndiag", "description": "Quasi-Newton algorithm for joint-diagonalization", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 82, "topics": []}, {"name": "ramp-board", "url": "https://github.com/agramfort/ramp-board", "description": "RAMP packages: database, backend, frontend, utilities", "language": ["JavaScript", "Python", "HTML", "CSS", "Shell", "Batchfile", "Makefile"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 122415, "topics": []}, {"name": "ramp-workflow", "url": "https://github.com/agramfort/ramp-workflow", "description": "Toolkit for building predictive workflows on the top of pandas and scikit-learn.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 4567, "topics": []}, {"name": "results", "url": "https://github.com/agramfort/results", "description": "BenchOpt benchmark results", "language": ["Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 19613, "topics": []}, {"name": "sagemaker_test", "url": "https://github.com/agramfort/sagemaker_test", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "sbi", "url": "https://github.com/agramfort/sbi", "description": "Simulation-based inference in PyTorch", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9333, "topics": []}, {"name": "scientific-python-intro-45mins", "url": "https://github.com/agramfort/scientific-python-intro-45mins", "description": "An intro presentation of scientific Python in 45 minutes", "language": [], "forks_count": 7, "stargazers_count": 7, "watchers_count": 7, "size": 2133, "topics": []}, {"name": "scikit-learn", "url": "https://github.com/agramfort/scikit-learn", "description": "clone from agramfort of scikit-learn: machine learning in Python", "language": ["Python", "C", "C++", "PowerShell", "Shell", "Makefile"], "forks_count": 1, "stargazers_count": 11, "watchers_count": 11, "size": 134731, "topics": []}, {"name": "scikit-signal", "url": "https://github.com/agramfort/scikit-signal", "description": "A scikit for signal processing", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 68, "topics": []}, {"name": "scikit_sgd", "url": "https://github.com/agramfort/scikit_sgd", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 103, "topics": []}, {"name": "scipy-2017-sklearn", "url": "https://github.com/agramfort/scipy-2017-sklearn", "description": "Scipy 2017 scikit-learn tutorial by Alex Gramfort and Andreas Mueller", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20960, "topics": []}, {"name": "scipy-lecture-notes", "url": "https://github.com/agramfort/scipy-lecture-notes", "description": "Notes used to give tutorials (for example at Euroscipy 2010/2011)", "language": ["Python", "C", "Shell", "Fortran"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 27452, "topics": []}, {"name": "scipy_2017_notes", "url": "https://github.com/agramfort/scipy_2017_notes", "description": "Links and notes for SciPy 2017", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 21, "topics": []}, {"name": "sklearn-theano", "url": "https://github.com/agramfort/sklearn-theano", "description": "Scikit-learn compatible tools using theano", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2544, "topics": []}, {"name": "sklearn_pandas_intro", "url": "https://github.com/agramfort/sklearn_pandas_intro", "description": "Introduction to Scikit-Learn and Pandas", "language": ["Jupyter Notebook", "Python", "Makefile"], "forks_count": 15, "stargazers_count": 16, "watchers_count": 16, "size": 880, "topics": []}, {"name": "skope-rules", "url": "https://github.com/agramfort/skope-rules", "description": "skope-rules: machine learning with logical rules in Python", "language": ["Python", "Shell", "Batchfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3681, "topics": []}, {"name": "smica", "url": "https://github.com/agramfort/smica", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 160, "topics": []}, {"name": "sparse-ho", "url": "https://github.com/agramfort/sparse-ho", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 522, "topics": []}, {"name": "spatio-temporal-alignements", "url": "https://github.com/agramfort/spatio-temporal-alignements", "description": "Spatio-temporal alignements: Optimal transport in space and time", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 35557, "topics": []}, {"name": "sphinx-gallery", "url": "https://github.com/agramfort/sphinx-gallery", "description": "Sphinx extension for automatic generation of an example gallery", "language": ["Python", "Makefile", "Shell", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2454, "topics": []}, {"name": "stroke", "url": "https://github.com/agramfort/stroke", "description": null, "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 8030, "topics": []}, {"name": "summerschool", "url": "https://github.com/agramfort/summerschool", "description": "Proposal for a summer school in reproducible research in Python, Summer 2012 ", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 184, "topics": []}, {"name": "tempita", "url": "https://github.com/agramfort/tempita", "description": "Dev clone of https://bitbucket.org/ianb/tempita", "language": [], "forks_count": 6, "stargazers_count": 0, "watchers_count": 0, "size": 400, "topics": []}, {"name": "tinygbt", "url": "https://github.com/agramfort/tinygbt", "description": "A Tiny, Pure Python implementation of Gradient Boosted Trees.", "language": ["Python"], "forks_count": 2, "stargazers_count": 1, "watchers_count": 1, "size": 436, "topics": []}, {"name": "titanic", "url": "https://github.com/agramfort/titanic", "description": null, "language": ["Jupyter Notebook", "Python", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1490, "topics": []}, {"name": "torch-test-case", "url": "https://github.com/agramfort/torch-test-case", "description": "Extends unittest.TestCase such that assertions support PyTorch tensors and parameters.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 25, "topics": []}, {"name": "variable_stars", "url": "https://github.com/agramfort/variable_stars", "description": "Classification of variable stars from light curves", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 7030, "topics": []}, {"name": "variable_stars_hackaton", "url": "https://github.com/agramfort/variable_stars_hackaton", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 114, "topics": []}]