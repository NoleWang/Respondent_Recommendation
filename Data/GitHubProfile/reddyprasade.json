[{"name": "2020-PY-101", "url": "https://github.com/reddyprasade/2020-PY-101", "description": "This Python for beginners training course leads the students from the basics of writing and running Python scripts to more advanced features such as file operations, working with binary data, and using the extensive functionality of Python modules. Extra emphasis is placed on features unique to Python, such as tuples, array slices, and output formatting.", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 50334, "topics": []}, {"name": "311-Service-Requests-from-2010-to-Present", "url": "https://github.com/reddyprasade/311-Service-Requests-from-2010-to-Present", "description": "IBM-Capstone-Project", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 9, "topics": []}, {"name": "A-Criterion-for-Deciding-the-Number-of-Clusters-in-a-Dataset-Based-on-Data-Depth", "url": "https://github.com/reddyprasade/A-Criterion-for-Deciding-the-Number-of-Clusters-in-a-Dataset-Based-on-Data-Depth", "description": "This paper proposes a novel idea for \u00afnding the correct number of groups in a dataset based on data depth. The idea is to avoid the traditional process of running the clustering algorithm over a dataset for ffiffiffi n p times and further, \u00afnding the k value for a dataset without setting any speci\u00afc search range for k parameter. We experiment with di\u00aeerent indices, namely CH, KL, Silhouette, Gap, CSP and the proposed method on di\u00aeerent real and synthetic datasets to estimate the correct number of groups in a dataset. The experimental results on real and synthetic datasets indicate good performance of the proposed method.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2941, "topics": []}, {"name": "An-Introduction-to-Statistical-Learning-with-Applications-in-R", "url": "https://github.com/reddyprasade/An-Introduction-to-Statistical-Learning-with-Applications-in-R", "description": "An Introduction to Statistical Learning (ISL)\" by James, Witten, Hastie and Tibshirani is the \"how to'' manual for statistical learning. Inspired by \"The Elements of Statistical Learning'' (Hastie, Tibshirani and Friedman), this book provides clear and intuitive guidance on how to implement cutting edge statistical and machine learning methods. ISL makes modern methods accessible to a wide audience without requiring a background in Statistics or Computer Science.", "language": [], "forks_count": 3, "stargazers_count": 1, "watchers_count": 1, "size": 6, "topics": []}, {"name": "api", "url": "https://github.com/reddyprasade/api", "description": "Our Database", "language": ["JavaScript", "HTML", "Shell"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 17626, "topics": []}, {"name": "Automate-the-loan-eligibility-process-real-time-based-on-customer", "url": "https://github.com/reddyprasade/Automate-the-loan-eligibility-process-real-time-based-on-customer", "description": "Company wants to automate the loan eligibility process (real time) based on customer detail provided while filling online application form. These details are Gender, Marital Status, Education, Number of Dependents, Income, Loan Amount, Credit History and others. To automate this process, they have given a problem to identify the customers segments, those are eligible for loan amount so that they can specifically target these customers. Here they have provided a partial data set.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 218, "topics": []}, {"name": "BBC-New-Articles-Clustering-and-Classification", "url": "https://github.com/reddyprasade/BBC-New-Articles-Clustering-and-Classification", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 2378, "topics": []}, {"name": "Bias-correction-of-numerical-prediction-model-temperature-forecast-Data-Set", "url": "https://github.com/reddyprasade/Bias-correction-of-numerical-prediction-model-temperature-forecast-Data-Set", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 11224, "topics": []}, {"name": "Bicycle-sharing-system-in-US", "url": "https://github.com/reddyprasade/Bicycle-sharing-system-in-US", "description": "A bicycle-sharing system, public bicycle system, or bike-share scheme, is a service in which bicycles are made available for shared use to individuals on a short term basis for a price or free. Many bike share systems allow people to borrow a bike from a \"dock\" and return it at another dock belonging to the same system. Docks are special bike racks that lock the bike, and only release it by computer control. The user enters payment information, and the computer unlocks a bike. The user returns the bike by placing it in the dock, which locks it in place. Other systems are dockless. For many systems, smartphone mapping apps show nearby available bikes and open docks.", "language": ["Jupyter Notebook", "Python", "R"], "forks_count": 5, "stargazers_count": 1, "watchers_count": 1, "size": 22153, "topics": ["dataanalysis", "jupyter", "maplotlib", "numpy", "pandas", "python", "r"]}, {"name": "Bird-Classifications-Problem", "url": "https://github.com/reddyprasade/Bird-Classifications-Problem", "description": "Birds Classification by using Scikit-learn and Scikit-image ", "language": ["Python", "HTML", "JavaScript", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 14204, "topics": ["matplotlib", "numpy", "pandas", "python-3", "sckiit-learn", "sckit-image"]}, {"name": "Breast-cancer-Predication", "url": "https://github.com/reddyprasade/Breast-cancer-Predication", "description": "Breast cancer symptoms vary widely \u2014 from lumps to swelling to skin changes \u2014 and many breast cancers have no obvious symptoms at all.  In some cases, a lump may be too small for you to feel or to cause any unusual changes you can notice on your own. Often, an abnormal area turns up on a screening mammogram (X-ray of the breast), which leads to further testing.  In other cases, however, the first sign of breast cancer is a new lump or mass in the breast that you or your doctor can feel. A lump that is painless, hard, and has uneven edges is more likely to be cancer. But sometimes cancers can be tender, soft, and rounded. ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 848, "topics": []}, {"name": "Breast-cancer-wisconsin-by-using-KNN-Model", "url": "https://github.com/reddyprasade/Breast-cancer-wisconsin-by-using-KNN-Model", "description": "Breast cancer wisconsin data set", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 823, "topics": []}, {"name": "Carbon-Dioxide-Emissions-Predication-of-FuelConsumption-Data-Sets", "url": "https://github.com/reddyprasade/Carbon-Dioxide-Emissions-Predication-of-FuelConsumption-Data-Sets", "description": "which contains model-specific fuel consumption ratings and estimated carbon dioxide emissions for new light-duty vehicles for retail sale in Canada", "language": ["Jupyter Notebook", "HTML"], "forks_count": 0, "stargazers_count": 3, "watchers_count": 3, "size": 935, "topics": []}, {"name": "Collection-of-data", "url": "https://github.com/reddyprasade/Collection-of-data", "description": null, "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 20417, "topics": []}, {"name": "Computer-Vision-with-Python", "url": "https://github.com/reddyprasade/Computer-Vision-with-Python", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 29170, "topics": []}, {"name": "Converting-Image-to-Array-Image-Processig-by-Using-Scikit-image-", "url": "https://github.com/reddyprasade/Converting-Image-to-Array-Image-Processig-by-Using-Scikit-image-", "description": "scikit-image is a Python package dedicated to image processing, and using natively NumPy arrays as image objects. This chapter describes how to use scikit-image on various image processing tasks, and insists on the link with other scientific Python modules such as NumPy and SciPy.", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 7, "topics": []}, {"name": "COVID-19-Chest-X-Ray", "url": "https://github.com/reddyprasade/COVID-19-Chest-X-Ray", "description": "COVID-19 Chest X-Ray", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1068829, "topics": []}, {"name": "COVID19-CT", "url": "https://github.com/reddyprasade/COVID19-CT", "description": "## Problem Statement: Coronavirus disease 2019 (COVID-19) has infected more than 1.3 million individuals all over the world and caused more than 106,000 deaths. One major hurdle in controlling the spreading of this disease is the inefficiency and shortage of medical tests. To mitigate the inefficiency and shortage of existing tests for COVID-19, we propose this competition to encourage the development of effective Deep Learning techniques  to diagnose COVID-19 based on CT images.  The problem in this challenge is to classify each CT image into positive COVID-19 (the image has  clinical findings of COVID-19) or negative COVID-19 ( the image does not have clinical findings of COVID-19). It\u2019s a binary classification problem based on CT images.", "language": [], "forks_count": 1, "stargazers_count": 3, "watchers_count": 3, "size": 7, "topics": []}, {"name": "Data-Analysis-with-Python", "url": "https://github.com/reddyprasade/Data-Analysis-with-Python", "description": "In the Data Analysis with Python Certification, you'll learn the fundamentals of data analysis with Python. By the end of this certification, you'll know how to read data from sources like CSVs and SQL, and how to use libraries like Numpy, Pandas, Matplotlib, and Seaborn to process and visualize data.", "language": ["Jupyter Notebook", "JavaScript", "CSS", "Python", "HTML", "Procfile"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 57942, "topics": []}, {"name": "Data-Science-With-Python", "url": "https://github.com/reddyprasade/Data-Science-With-Python", "description": "The Data Science with Python course provides a complete overview of Data Science analytics techniques using Python. A data scientist is one of the hottest fields today and Python is a crucial skill for many Data Science roles. Expand your Data Science knowledge with this Python certification course.", "language": ["Jupyter Notebook", "Python"], "forks_count": 3, "stargazers_count": 12, "watchers_count": 12, "size": 17715, "topics": ["matplotlib", "numpy", "pandas", "seaborn", "statistics"]}, {"name": "Data-Science-With-R", "url": "https://github.com/reddyprasade/Data-Science-With-R", "description": "The goal of \u201cR for Data Science\u201d is to help you learn the most important tools in R that will allow you to do data science.", "language": ["Jupyter Notebook", "R"], "forks_count": 5, "stargazers_count": 1, "watchers_count": 1, "size": 11640, "topics": []}, {"name": "DataSet-for-ML-and-Data-Science", "url": "https://github.com/reddyprasade/DataSet-for-ML-and-Data-Science", "description": "Freely Available Data Sets For Real world Problems ", "language": ["HTML"], "forks_count": 26, "stargazers_count": 2, "watchers_count": 2, "size": 115503, "topics": ["data-science", "dataset", "datasets", "machine-learning", "machinelearningdataset", "python"]}, {"name": "datasets", "url": "https://github.com/reddyprasade/datasets", "description": "TFDS is a collection of datasets ready to use with TensorFlow", "language": ["Python", "Shell", "Perl", "Smalltalk"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 815357, "topics": []}, {"name": "Deep-Learning", "url": "https://github.com/reddyprasade/Deep-Learning", "description": "Deep learning (also known as deep structured learning or hierarchical learning) is part of a broader family of machine learning methods based on artificial neural networks. Learning can be supervised, semi-supervised or unsupervised. Deep learning architectures such as deep neural networks, deep belief networks, recurrent neural networks and convolutional neural networks have been applied to fields including computer vision, speech recognition, natural language processing, audio recognition, social network filtering, machine translation, bioinformatics, drug design, medical image analysis, material inspection and board game programs, where they have produced results comparable to and in some cases superior to human experts.", "language": ["Jupyter Notebook", "Python"], "forks_count": 8, "stargazers_count": 12, "watchers_count": 12, "size": 53801, "topics": ["anns", "artificial-neural-networks", "audio-recognition", "biological-brains", "board-game-programs", "deep-learning", "deep-learning-algorithms", "deep-learning-tutorial", "deep-neural-networks", "deep-reinforcement-learning", "hierarchical-learning", "natural-language-processing", "neural-network", "neural-networks", "social-network-filtering", "speech-recognition"]}, {"name": "Deep-Learning-with-Tensorflow-2.x", "url": "https://github.com/reddyprasade/Deep-Learning-with-Tensorflow-2.x", "description": "Deep Learning with Tensorflow 2 and Keras", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 46218, "topics": []}, {"name": "Deep-Neutral-Network-Softmax-for-Recomendation-system", "url": "https://github.com/reddyprasade/Deep-Neutral-Network-Softmax-for-Recomendation-system", "description": "We will create a movie recommendation system based on the MovieLens dataset available here. The data consists of movies ratings", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 29, "topics": []}, {"name": "Deploy-Predict-Cancer-Model-In-Flask-Api", "url": "https://github.com/reddyprasade/Deploy-Predict-Cancer-Model-In-Flask-Api", "description": null, "language": ["HTML", "Python", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 11, "topics": []}, {"name": "Detection-of-Ovarian-Cancer", "url": "https://github.com/reddyprasade/Detection-of-Ovarian-Cancer", "description": "Cancer that arises from different cells of the ovaries, the paried female reproductive organ.Although it is relatively uncommon, it is often diagnosed late. The exact cause is unknown. It can be symptomless initially but lower abdominal pain is observed in advanced stages, along with other symptoms. Treatment involves surgery followed by chemotherapy, or in combination.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5, "topics": []}, {"name": "Digit-Recognizer-with-Python", "url": "https://github.com/reddyprasade/Digit-Recognizer-with-Python", "description": "We used preprocessing programs made available by NIST to extract normalized bitmaps of handwritten digits from a preprinted form. From a total of 43 people, 30 contributed to the training set and different 13 to the test set. 32x32 bitmaps are divided into nonoverlapping blocks of 4x4 and the number of on pixels are counted in each block. This generates an input matrix of 8x8 where each element is an integer in the range 0..16. This reduces dimensional and gives in-variance to small distortions.", "language": ["Python"], "forks_count": 2, "stargazers_count": 1, "watchers_count": 1, "size": 4, "topics": []}, {"name": "Emotion-Based-Face-Expression-Detection-Through-Facial-Feature-Recognition-OpenCv-and-CNN", "url": "https://github.com/reddyprasade/Emotion-Based-Face-Expression-Detection-Through-Facial-Feature-Recognition-OpenCv-and-CNN", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 522, "topics": []}, {"name": "Face--Recognition-with-Opencv", "url": "https://github.com/reddyprasade/Face--Recognition-with-Opencv", "description": "Image recognition using python Very Easy Write and to Learn ", "language": ["Python"], "forks_count": 3, "stargazers_count": 2, "watchers_count": 2, "size": 227, "topics": ["opencv-library", "opencv-python", "opencv2"]}, {"name": "Feature-Engineering", "url": "https://github.com/reddyprasade/Feature-Engineering", "description": "The purpose of a feature, other than being an attribute, would be much easier to understand in the context of a problem. A feature is a characteristic that might help when solving the problem. Discover the most effective way to improve your models.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 3, "topics": ["feature-detection", "feature-engineering", "feature-extraction", "feature-selection"]}, {"name": "Fremont-Bridge-Bicycle-Counter-Data-Analysis", "url": "https://github.com/reddyprasade/Fremont-Bridge-Bicycle-Counter-Data-Analysis", "description": "The Fremont Bridge Bicycle Counter began operation in October 2012 and records the number of bikes that cross the bridge using the pedestrian/bicycle pathways. Inductive loops on the east and west pathways count the passing of bicycles regardless of travel direction. The data consists of a date/time field: Date, east pathway count field: Fremont Bridge NB, and west pathway count field: Fremont Bridge SB. The count fields represent the total bicycles detected during the specified one hour period. Direction of travel is not specified, but in general most traffic in the Fremont Bridge NB field is travelling northbound and most traffic in the Fremont Bridge SB field is travelling southbound.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 525, "topics": []}, {"name": "Global-Wheat-Detection-From-University-of-Saskatchewan", "url": "https://github.com/reddyprasade/Global-Wheat-Detection-From-University-of-Saskatchewan", "description": "Global WHEAT Dataset is the first large-scale dataset for wheat head detection from field optical images. It included a very large range of cultivars from differents continents. Wheat is a staple crop grown all over the world and consequently interest in wheat phenotyping spans the globe. Therefore, it is important that models developed for wheat phenotyping, such as wheat head detection networks, generalize between different growing environments around the world.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 34553, "topics": []}, {"name": "Heart-Disease-Data-Set-Predication", "url": "https://github.com/reddyprasade/Heart-Disease-Data-Set-Predication", "description": "This database contains 76 attributes, but all published experiments refer to using a subset of 14 of them. In particular, the Cleveland database is the only one that has been used by ML researchers to this date. The \"goal\" field refers to the presence of heart disease in the patient. It is integer valued from 0 (no presence) to 4. Experiments with the Cleveland database have concentrated on simply attempting to distinguish presence (values 1,2,3,4) from absence (value 0).  The names and social security numbers of the patients were recently removed from the database, replaced with dummy values.  One file has been \"processed\", that one containing the Cleveland database. All four unprocessed files also exist in this directory.  To see Test Costs (donated by Peter Turney), please see the folder \"Costs\"   Attribute Information:  Only 14 attributes used: 1. #3 (age) 2. #4 (sex) 3. #9 (cp) 4. #10 (trestbps) 5. #12 (chol) 6. #16 (fbs) 7. #19 (restecg) 8. #32 (thalach) 9. #38 (exang) 10. #40 (oldpeak) 11. #41 (slope) 12. #44 (ca) 13. #51 (thal) 14. #58 (num) (the predicted attribute)  Complete attribute documentation: 1 id: patient identification number 2 ccf: social security number (I replaced this with a dummy value of 0) 3 age: age in years 4 sex: sex (1 = male; 0 = female) 5 painloc: chest pain location (1 = substernal; 0 = otherwise) 6 painexer (1 = provoked by exertion; 0 = otherwise) 7 relrest (1 = relieved after rest; 0 = otherwise) 8 pncaden (sum of 5, 6, and 7) 9 cp: chest pain type -- Value 1: typical angina -- Value 2: atypical angina -- Value 3: non-anginal pain -- Value 4: asymptomatic 10 trestbps: resting blood pressure (in mm Hg on admission to the hospital) 11 htn 12 chol: serum cholestoral in mg/dl 13 smoke: I believe this is 1 = yes; 0 = no (is or is not a smoker) 14 cigs (cigarettes per day) 15 years (number of years as a smoker) 16 fbs: (fasting blood sugar > 120 mg/dl) (1 = true; 0 = false) 17 dm (1 = history of diabetes; 0 = no such history) 18 famhist: family history of coronary artery disease (1 = yes; 0 = no) 19 restecg: resting electrocardiographic results -- Value 0: normal -- Value 1: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV) -- Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria 20 ekgmo (month of exercise ECG reading) 21 ekgday(day of exercise ECG reading) 22 ekgyr (year of exercise ECG reading) 23 dig (digitalis used furing exercise ECG: 1 = yes; 0 = no) 24 prop (Beta blocker used during exercise ECG: 1 = yes; 0 = no) 25 nitr (nitrates used during exercise ECG: 1 = yes; 0 = no) 26 pro (calcium channel blocker used during exercise ECG: 1 = yes; 0 = no) 27 diuretic (diuretic used used during exercise ECG: 1 = yes; 0 = no) 28 proto: exercise protocol 1 = Bruce 2 = Kottus 3 = McHenry 4 = fast Balke 5 = Balke 6 = Noughton 7 = bike 150 kpa min/min (Not sure if \"kpa min/min\" is what was written!) 8 = bike 125 kpa min/min 9 = bike 100 kpa min/min 10 = bike 75 kpa min/min 11 = bike 50 kpa min/min 12 = arm ergometer 29 thaldur: duration of exercise test in minutes 30 thaltime: time when ST measure depression was noted 31 met: mets achieved 32 thalach: maximum heart rate achieved 33 thalrest: resting heart rate 34 tpeakbps: peak exercise blood pressure (first of 2 parts) 35 tpeakbpd: peak exercise blood pressure (second of 2 parts) 36 dummy 37 trestbpd: resting blood pressure 38 exang: exercise induced angina (1 = yes; 0 = no) 39 xhypo: (1 = yes; 0 = no) 40 oldpeak = ST depression induced by exercise relative to rest 41 slope: the slope of the peak exercise ST segment -- Value 1: upsloping -- Value 2: flat -- Value 3: downsloping 42 rldv5: height at rest 43 rldv5e: height at peak exercise 44 ca: number of major vessels (0-3) colored by flourosopy 45 restckm: irrelevant 46 exerckm: irrelevant 47 restef: rest raidonuclid (sp?) ejection fraction 48 restwm: rest wall (sp?) motion abnormality 0 = none 1 = mild or moderate 2 = moderate or severe 3 = akinesis or dyskmem (sp?) 49 exeref: exercise radinalid (sp?) ejection fraction 50 exerwm: exercise wall (sp?) motion 51 thal: 3 = normal; 6 = fixed defect; 7 = reversable defect 52 thalsev: not used 53 thalpul: not used 54 earlobe: not used 55 cmo: month of cardiac cath (sp?) (perhaps \"call\") 56 cday: day of cardiac cath (sp?) 57 cyr: year of cardiac cath (sp?) 58 num: diagnosis of heart disease (angiographic disease status) -- Value 0: < 50% diameter narrowing -- Value 1: > 50% diameter narrowing (in any major vessel: attributes 59 through 68 are vessels) 59 lmt 60 ladprox 61 laddist 62 diag 63 cxmain 64 ramus 65 om1 66 om2 67 rcaprox 68 rcadist 69 lvx1: not used 70 lvx2: not used 71 lvx3: not used 72 lvx4: not used 73 lvf: not used 74 cathef: not used 75 junk: not used 76 name: last name of patient (I replaced this with the dummy string \"name\")", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 1431, "topics": []}, {"name": "Hungarian-Chickenpox-Cases", "url": "https://github.com/reddyprasade/Hungarian-Chickenpox-Cases", "description": "A spatio-temporal dataset of weekly chickenpox cases from Hungary. The dataset consists of a county-level adjacency matrix and time series of the county-level reported cases between 2005 and 2015.", "language": ["HTML"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 1683, "topics": []}, {"name": "Image-Segmentation", "url": "https://github.com/reddyprasade/Image-Segmentation", "description": "Image Segmentation with Watershed Algorithm Any grayscale image can be viewed as a topographic surface where high intensity denotes peaks and hills while low intensity denotes valleys. You start filling every isolated valleys (local minima) with different colored water (labels). As the water rises, depending on the peaks (gradients) nearby, water from different valleys, obviously with different colors will start to merge. To avoid that, you build barriers in the locations where water merges. You continue the work of filling water and building barriers until all the peaks are under water. Then the barriers you created gives you the segmentation result. This is the \"philosophy\" behind the watershed. You can visit the CMM webpage on watershed to understand it with the help of some animations.  But this approach gives you oversegmented result due to noise or any other irregularities in the image. So OpenCV implemented a marker-based watershed algorithm where you specify which are all valley points are to be merged and which are not. It is an interactive image segmentation. What we do is to give different labels for our object we know. Label the region which we are sure of being the foreground or object with one color (or intensity), label the region which we are sure of being background or non-object with another color and finally the region which we are not sure of anything, label it with 0. That is our marker. Then apply watershed algorithm. Then our marker will be updated with the labels we gave, and the boundaries of objects will have a value of -1.", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 754, "topics": []}, {"name": "Image-to-array-Converting-By-Using-Python", "url": "https://github.com/reddyprasade/Image-to-array-Converting-By-Using-Python", "description": "n machine learning, Python uses image data in the form of a NumPy array, i.e., [Height, Width, Channel] format. To enhance the performance of the predictive model, we must know how to load and manipulate images. In Python, we can perform one task in different ways. We have options from Numpy to Pytorch and CUDA, depending on the complexity of the problem.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 73, "topics": []}, {"name": "Increasing-Subscription-Rate", "url": "https://github.com/reddyprasade/Increasing-Subscription-Rate", "description": "Developing machine learning model to predict a user who is most unlikely to subscribe for the paid membership of the app, used Logistic Regression to classify the users based on the app behavior usage and was able to predict with an accuracy of 77%, Overall this can be helpful for marketing team to target the ads for the user who are less likely to subscribe for paid version, this also helps to give the promotional offers only to specific set of customers there by reducing the marketing cost.", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 3676, "topics": []}, {"name": "Introducation-to-julia-Program", "url": "https://github.com/reddyprasade/Introducation-to-julia-Program", "description": "Julia is a high-level, high-performance, dynamic programming language. While it is a general purpose language and can be used to write any application, many of its features are well-suited for high-performance numerical analysis and computational science.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 17, "topics": ["julia", "julia-language", "julia-library", "julia-package", "julia-programming", "julia-programming-language", "julialang"]}, {"name": "io19", "url": "https://github.com/reddyprasade/io19", "description": null, "language": ["Jupyter Notebook", "Kotlin", "HTML"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 439, "topics": []}, {"name": "Learn_Pytorch", "url": "https://github.com/reddyprasade/Learn_Pytorch", "description": "PyTorch is an open source machine learning library based on the Torch library, used for applications such as computer vision and natural language processing. It is primarily developed by Facebook's artificial intelligence research group. It is free and open-source software released under the Modified BSD license.", "language": ["Jupyter Notebook", "Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 26, "topics": []}, {"name": "Machine-Learing-Model-Deployment-in-Amazon-SageMaker", "url": "https://github.com/reddyprasade/Machine-Learing-Model-Deployment-in-Amazon-SageMaker", "description": "Step 1. Create an Amazon SageMaker notebook instance for data preparation. In this step, you create the notebook... Step 2. Prepare the data. In this step, you use your Amazon SageMaker notebook instance to preprocess the data that you... Step 3. Train the ML model. In this step, you use your training dataset to train your machine learning model. In a new... Step 4. Deploy the model. In this step, you deploy the trained model to an endpoint, reformat and load the CSV data,... Step 6. Clean up.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1066, "topics": []}, {"name": "Machine-Learning-Interview-Preparation", "url": "https://github.com/reddyprasade/Machine-Learning-Interview-Preparation", "description": "Prepare to Technical Skills Here are the essential skills that a Machine Learning Engineer needs, as mentioned Read me files. Within each group are topics that you should be familiar with.  Study Tip: Copy and paste this list into a document and save to your computer for easy referral.  Computer Science Fundamentals and Programming Topics  Data structures: Lists, stacks, queues, strings, hash maps, vectors, matrices, classes & objects, trees, graphs, etc. Algorithms: Recursion, searching, sorting, optimization, dynamic programming, etc. Computability and complexity: P vs. NP, NP-complete problems, big-O notation, approximate algorithms, etc. Computer architecture: Memory, cache, bandwidth, threads & processes, deadlocks, etc. Probability and Statistics Topics  Basic probability: Conditional probability, Bayes rule, likelihood, independence, etc. Probabilistic models: Bayes Nets, Markov Decision Processes, Hidden Markov Models, etc. Statistical measures: Mean, median, mode, variance, population parameters vs. sample statistics etc. Proximity and error metrics: Cosine similarity, mean-squared error, Manhattan and Euclidean distance, log-loss, etc. Distributions and random sampling: Uniform, normal, binomial, Poisson, etc. Analysis methods: ANOVA, hypothesis testing, factor analysis, etc. Data Modeling and Evaluation Topics  Data preprocessing: Munging/wrangling, transforming, aggregating, etc. Pattern recognition: Correlations, clusters, trends, outliers & anomalies, etc. Dimensionality reduction: Eigenvectors, Principal Component Analysis, etc. Prediction: Classification, regression, sequence prediction, etc.; suitable error/accuracy metrics. Evaluation: Training-testing split, sequential vs. randomized cross-validation, etc. Applying Machine Learning Algorithms and Libraries Topics  Models: Parametric vs. nonparametric, decision tree, nearest neighbor, neural net, support vector machine, ensemble of multiple models, etc. Learning procedure: Linear regression, gradient descent, genetic algorithms, bagging, boosting, and other model-specific methods; regularization, hyperparameter tuning, etc. Tradeoffs and gotchas: Relative advantages and disadvantages, bias and variance, overfitting and underfitting, vanishing/exploding gradients, missing data, data leakage, etc. Software Engineering and System Design Topics  Software interface: Library calls, REST APIs, data collection endpoints, database queries, etc. User interface: Capturing user inputs & application events, displaying results & visualization, etc. Scalability: Map-reduce, distributed processing, etc. Deployment: Cloud hosting, containers & instances, microservices, etc. Move on to the final lesson of this course to find lots of sample practice questions for each topic!", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 5, "watchers_count": 5, "size": 8874, "topics": []}, {"name": "Machine-Learning-model-Income-Prediction-Deployment", "url": "https://github.com/reddyprasade/Machine-Learning-model-Income-Prediction-Deployment", "description": "Predict whether income exceeds $50K/yr based on census data. Also known as \"Census Income\" dataset", "language": ["HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 660, "topics": []}, {"name": "Machine-Learning-Problems-DataSets", "url": "https://github.com/reddyprasade/Machine-Learning-Problems-DataSets", "description": "We currently maintain 488 data sets as a service to the machine learning community. You may view all data sets through our searchable interface. For a general overview of the Repository, please visit our About page. For information about citing data sets in publications, please read our citation policy. If you wish to donate a data set, please consult our donation policy. For any other questions, feel free to contact the Repository librarians.", "language": ["Python"], "forks_count": 15, "stargazers_count": 21, "watchers_count": 21, "size": 289566, "topics": ["machine-learning-dataset", "machine-learning-datasets", "uci", "uci-machine-learning"]}, {"name": "Machine-Learning-With-AI", "url": "https://github.com/reddyprasade/Machine-Learning-With-AI", "description": "Make Machine Learning  ", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 6, "topics": []}, {"name": "Machine-Learning-With-R", "url": "https://github.com/reddyprasade/Machine-Learning-With-R", "description": "Machine Learning in R ", "language": ["HTML", "Jupyter Notebook", "R"], "forks_count": 6, "stargazers_count": 3, "watchers_count": 3, "size": 11043, "topics": ["machine-learning", "machine-learning-algorithms", "multiple-linear-regression", "simple-linear-regression"]}, {"name": "Machine-Learning-with-Scikit-Learn-Python-3.x", "url": "https://github.com/reddyprasade/Machine-Learning-with-Scikit-Learn-Python-3.x", "description": "In general, a learning problem considers a set of n samples of data and then tries to predict properties of unknown data. If each sample is more than a single number and, for instance, a multi-dimensional entry (aka multivariate data), it is said to have several attributes or features.  Learning problems fall into a few categories:  supervised learning, in which the data comes with additional attributes that we want to predict (Click here to go to the scikit-learn supervised learning page).This problem can be either:  classification: samples belong to two or more classes and we want to learn from already labeled data how to predict the class of unlabeled data. An example of a classification problem would be handwritten digit recognition, in which the aim is to assign each input vector to one of a finite number of discrete categories. Another way to think of classification is as a discrete (as opposed to continuous) form of supervised learning where one has a limited number of categories and for each of the n samples provided, one is to try to label them with the correct category or class.  regression: if the desired output consists of one or more continuous variables, then the task is called regression. An example of a regression problem would be the prediction of the length of a salmon as a function of its age and weight.  unsupervised learning, in which the training data consists of a set of input vectors x without any corresponding target values. The goal in such problems may be to discover groups of similar examples within the data, where it is called clustering, or to determine the distribution of data within the input space, known as density estimation, or to project the data from a high-dimensional space down to two or three dimensions for the purpose of visualization (Click here to go to the Scikit-Learn unsupervised learning page).", "language": ["Jupyter Notebook", "Python"], "forks_count": 20, "stargazers_count": 41, "watchers_count": 41, "size": 76383, "topics": ["classification", "consists", "machine-learning", "machine-learning-algorithms", "prediction", "python", "python-3", "regression", "reinforcement-learning", "scikit-image", "scikit-learn", "scikit-learn-api", "scikit-learn-python", "scikit-model", "semi-supervised-learning", "sklearn", "supervised-learning", "unsupervised-learning", "vector"]}, {"name": "Matplotlib", "url": "https://github.com/reddyprasade/Matplotlib", "description": "Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications using general-purpose GUI toolkits like Tkinter, wxPython, Qt, or GTK+. There is also a procedural \"pylab\" interface based on a state machine, designed to closely resemble that of MATLAB, though its use is discouraged. SciPy makes use of Matplotlib.", "language": ["Jupyter Notebook", "Python"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 4937, "topics": []}, {"name": "ML-With_python_pract", "url": "https://github.com/reddyprasade/ML-With_python_pract", "description": null, "language": ["Jupyter Notebook"], "forks_count": 4, "stargazers_count": 2, "watchers_count": 2, "size": 62, "topics": []}, {"name": "MNIST-Digit-Classification-Problem", "url": "https://github.com/reddyprasade/MNIST-Digit-Classification-Problem", "description": "  The MNIST database of handwritten digits, available from this page, has a training set of 60,000 examples, and a test set of 10,000 examples. It is a subset of a larger set available from NIST. The digits have been size-normalized and centered in a fixed-size image.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 10, "topics": []}, {"name": "model-deployment-for-iris-dataset", "url": "https://github.com/reddyprasade/model-deployment-for-iris-dataset", "description": "We Deploy a Machine Learning Model in GitHub ", "language": ["Jupyter Notebook", "HTML", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1662, "topics": []}, {"name": "Natural-Language-Processing", "url": "https://github.com/reddyprasade/Natural-Language-Processing", "description": "Natural language processing (NLP) is a subfield of linguistics, computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human (natural) languages, in particular how to program computers to process and analyze large amounts of natural language data.", "language": ["Jupyter Notebook", "Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 9940, "topics": []}, {"name": "Networking-With-Python-", "url": "https://github.com/reddyprasade/Networking-With-Python-", "description": "Client-Server-Programing", "language": ["Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 22, "topics": []}, {"name": "Neural-Collaborative-Filtering-with-Tensorflow", "url": "https://github.com/reddyprasade/Neural-Collaborative-Filtering-with-Tensorflow", "description": "we Build a Neural Collaborative Filtering with Tensor flow", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 26824, "topics": []}, {"name": "Neuro-Imaging-in-Python", "url": "https://github.com/reddyprasade/Neuro-Imaging-in-Python", "description": "Nilearn is a Python module for fast and easy statistical learning on NeuroImaging data.  It leverages the scikit-learn Python toolbox for multivariate statistics with applications such as predictive modelling, classification, decoding, or connectivity analysis.", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 8, "topics": []}, {"name": "Numpy-with-Python", "url": "https://github.com/reddyprasade/Numpy-with-Python", "description": "NumPy is the fundamental package for scientific computing with Python. It contains among other things:  a powerful N-dimensional array object sophisticated (broadcasting) functions tools for integrating C/C++ and Fortran code useful linear algebra, Fourier transform, and random number capabilities", "language": ["Jupyter Notebook"], "forks_count": 8, "stargazers_count": 2, "watchers_count": 2, "size": 1568, "topics": ["numpy", "numpy-array-creation", "numpy-arrays", "numpy-data-acessing", "numpy-exercises", "numpy-library", "numpy-matrix", "numpy-tutorial", "numpy-with-python"]}, {"name": "Object-Detection-with-Deployement", "url": "https://github.com/reddyprasade/Object-Detection-with-Deployement", "description": null, "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "Pandas-Practice", "url": "https://github.com/reddyprasade/Pandas-Practice", "description": "Pandas ", "language": ["Jupyter Notebook"], "forks_count": 2, "stargazers_count": 2, "watchers_count": 2, "size": 5233, "topics": ["daat", "data-analysis", "data-science", "flexible", "labeling", "missing-data", "missing-values", "pandas", "pandas-profiling"]}, {"name": "Pandas-with-Python", "url": "https://github.com/reddyprasade/Pandas-with-Python", "description": "Pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series. It is free software released under the three-clause BSD license.", "language": ["Jupyter Notebook", "HTML"], "forks_count": 4, "stargazers_count": 1, "watchers_count": 1, "size": 896, "topics": []}, {"name": "PatternPackage", "url": "https://github.com/reddyprasade/PatternPackage", "description": null, "language": [], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "PYML-2020", "url": "https://github.com/reddyprasade/PYML-2020", "description": null, "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 4319, "topics": []}, {"name": "Python-Basic-For-All-3.x", "url": "https://github.com/reddyprasade/Python-Basic-For-All-3.x", "description": "We are going to Learn Python, it is a powerful multi-purpose programming language created by Guido van Rossum.  It has simple easy-to-use syntax, making it the perfect language for someone trying to learn computer programming for the first time.  This is a comprehensive guide on how to get started in Python, why you should learn it and how you can learn it. However, if you knowledge of other programming languages and want to quickly get started with Python.", "language": ["Jupyter Notebook", "HTML", "Python"], "forks_count": 28, "stargazers_count": 11, "watchers_count": 11, "size": 28588, "topics": ["comprehensive-guide", "data-science", "knowledge", "perfect-language", "programming-languages", "python", "python-3", "python-3-6", "python3"]}, {"name": "Python-Pattern-Programming", "url": "https://github.com/reddyprasade/Python-Pattern-Programming", "description": "Pattern programming is one type of programming process it consists of both static and dynamic", "language": ["Jupyter Notebook", "Python"], "forks_count": 5, "stargazers_count": 1, "watchers_count": 1, "size": 14, "topics": []}, {"name": "R-Program", "url": "https://github.com/reddyprasade/R-Program", "description": "R is a programming language and free software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing. The R language is widely used among statisticians and data miners for developing statistical software and data analysis.", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 58, "topics": ["data-analysis", "data-science", "r-programming"]}, {"name": "reddyprasade", "url": "https://github.com/reddyprasade/reddyprasade", "description": null, "language": [], "forks_count": 3, "stargazers_count": 1, "watchers_count": 1, "size": 90, "topics": []}, {"name": "reddyprasade.github.io", "url": "https://github.com/reddyprasade/reddyprasade.github.io", "description": "Website Code", "language": ["CSS", "HTML", "SCSS", "JavaScript"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5718, "topics": []}, {"name": "Regression-on-fuel-consumption-in-canada", "url": "https://github.com/reddyprasade/Regression-on-fuel-consumption-in-canada", "description": "Datasets provide model-specific fuel consumption ratings and estimated carbon dioxide emissions for new light-duty vehicles for retail sale in Canada.", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 2, "watchers_count": 2, "size": 235, "topics": []}, {"name": "Simple-Linear-Regression", "url": "https://github.com/reddyprasade/Simple-Linear-Regression", "description": "Simple Linear Regression used to Predicate ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 515, "topics": ["machine", "machine-learning"]}, {"name": "SOCKETS-WITH-PYTHON-", "url": "https://github.com/reddyprasade/SOCKETS-WITH-PYTHON-", "description": "Socket Programming with Python ", "language": ["Python", "Jupyter Notebook"], "forks_count": 3, "stargazers_count": 1, "watchers_count": 1, "size": 26, "topics": []}, {"name": "sreeharie.github.io", "url": "https://github.com/reddyprasade/sreeharie.github.io", "description": null, "language": ["CSS", "HTML"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1875, "topics": []}, {"name": "statsmodels-with-Python", "url": "https://github.com/reddyprasade/statsmodels-with-Python", "description": "statsmodels is a Python module that provides classes and functions for the estimation of many different statistical models, as well as for conducting statistical tests, and statistical data exploration. An extensive list of result statistics are available for each estimator. The results are tested against existing statistical packages to ensure that they are correct. ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 1093, "topics": []}, {"name": "Support-Vector_Machine-For-Cat-Dog-Image-Classification", "url": "https://github.com/reddyprasade/Support-Vector_Machine-For-Cat-Dog-Image-Classification", "description": "Support Vector Machine For Image Classification ", "language": [], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2, "topics": []}, {"name": "Telecommunications-Data-for-Predicting-Customer-Churn", "url": "https://github.com/reddyprasade/Telecommunications-Data-for-Predicting-Customer-Churn", "description": "We\u2019ll use a telecommunications data for predicting customer churn. This is a historical customer data where each row represents one customer. The data is relatively easy to understand, and you may uncover insights you can use immediately. Typically it\u2019s less expensive to keep customers than acquire new ones, so the focus of this analysis is to predict the customers who will stay with the company.  This data set provides info to help you predict behavior to retain customers. You can analyze all relevant customer data and develop focused customer retention programs.  The data set includes information about:  Customers who left within the last month \u2013 the column is called Churn Services that each customer has signed up for \u2013 phone, multiple lines, internet, online security, online backup, device protection, tech support, and streaming TV and movies Customer account information \u2013 how long they\u2019ve been a customer, contract, payment method, paperless billing, monthly charges, and total charges Demographic info about customers \u2013 gender, age range, and if they have partners and dependents", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 3, "watchers_count": 3, "size": 29, "topics": []}, {"name": "Text-Mining-with-Python", "url": "https://github.com/reddyprasade/Text-Mining-with-Python", "description": "introduce the learner to text mining and text manipulation basics. The course begins with an understanding of how text is handled by python, the structure of text both to the machine and to humans, and an overview of the nltk framework for manipulating text. The second week focuses on common manipulation needs, including regular expressions (searching for text), cleaning text, and preparing text for use by machine learning processes. The third week will apply basic natural language processing methods to text, and demonstrate how text classification is accomplished. The final week will explore more advanced methods for detecting the topics in documents and grouping them by similarity (topic modelling). ", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 761, "topics": []}, {"name": "The-Street-View-House-Numbers-Machine-Learning-Model-Deployment-By-Web-Flask-API", "url": "https://github.com/reddyprasade/The-Street-View-House-Numbers-Machine-Learning-Model-Deployment-By-Web-Flask-API", "description": "Machine Learn Model Deployment with Flask Api", "language": ["Python", "HTML"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 30, "topics": []}, {"name": "Theano-Practices", "url": "https://github.com/reddyprasade/Theano-Practices", "description": "Theano is a Python library that allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently. Theano features:  tight integration with NumPy \u2013 Use numpy.ndarray in Theano-compiled functions. transparent use of a GPU \u2013 Perform data-intensive computations much faster than on a CPU. efficient symbolic differentiation \u2013 Theano does your derivatives for functions with one or many inputs. speed and stability optimizations \u2013 Get the right answer for log(1+x) even when x is really tiny. dynamic C code generation \u2013 Evaluate expressions faster. extensive unit-testing and self-verification \u2013 Detect and diagnose many types of errors. Theano has been powering large-scale computationally intensive scientific investigations since 2007. But it is also approachable enough to be used in the classroom (University of Montreal\u2019s deep learning/machine learning classes).", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 4408, "topics": []}, {"name": "Time_Series_Analysis", "url": "https://github.com/reddyprasade/Time_Series_Analysis", "description": "Time Series Analysis with Python numpy pandas", "language": ["Jupyter Notebook"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 1120, "topics": []}, {"name": "Top-Zomato-Restaurants-in-Bengaluru", "url": "https://github.com/reddyprasade/Top-Zomato-Restaurants-in-Bengaluru", "description": "The basic idea of analysing the Zomato dataset is to get a fair idea about the factors affecting the aggregate rating of each restaurant, establishment of different types of restaurant at different places, Bengaluru being one such city has more than 12,000 restaurants with restaurants serving dishes from all over the world. With each day new restaurants opening the industry hasn\u2019t been saturated yet and the demand is increasing day by day. In spite of increasing demand it however has become difficult for new restaurants to compete with established restaurants. Most of them serving the same food. Bengaluru being an IT capital of India. Most of the people here are dependent mainly on the restaurant food as they don't have time to cook for themselves. With such an overwhelming demand of restaurants it has therefore become important to study the demography of a location. Hence build a model to predict the rating of the each restaurants.", "language": ["Jupyter Notebook"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 2079, "topics": []}, {"name": "Turtle_Graphics_In_Python3", "url": "https://github.com/reddyprasade/Turtle_Graphics_In_Python3", "description": "Turtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967.", "language": ["Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 12, "topics": ["turtle", "turtle-graphics", "turtle-graphics-programs", "turtle-programming", "turtle-programs", "turtles"]}, {"name": "Uber-Data-Analysis-Project", "url": "https://github.com/reddyprasade/Uber-Data-Analysis-Project", "description": "Data is the oil for uber. With data analysis tools and great insights, Uber improve its decisions, marketing strategy, promotional offers and predictive analytics.  With more than 15 million rides per day across 600 cities in 65 countries, Uber is growing rapidly with Data Science starting from data visualization and gaining insights that help them to craft better decisions. Data Science tools play a key role in every operation of Uber.", "language": ["Python"], "forks_count": 1, "stargazers_count": 1, "watchers_count": 1, "size": 28, "topics": []}, {"name": "Unstructured-Images-to-Structure-Array-in-Python", "url": "https://github.com/reddyprasade/Unstructured-Images-to-Structure-Array-in-Python", "description": "Machine learning, Python uses image data in the form of a NumPy array, i.e., [Height, Width, Channel] format. To enhance the performance of the predictive model, we must know how to load and manipulate images. In Python, we can perform one task in different ways. We have options from Numpy to Pytorch and CUDA, depending on the complexity of the problem.  By the end of this tutorial, you will have hands-on experience with:  Loading and displaying an image using Matplotlib, OpenCV and Keras API Converting the loaded images to the NumPy array and back Conducting basic manipulation of an image using the Pillow and NumPy libraries and saving it to your local system. Reading images as arrays in Keras API and OpenCV", "language": ["Python"], "forks_count": 0, "stargazers_count": 1, "watchers_count": 1, "size": 2545, "topics": []}, {"name": "VulnerableRubyWebsite", "url": "https://github.com/reddyprasade/VulnerableRubyWebsite", "description": "Vulnerable Ruby Website", "language": ["Ruby", "HTML", "JavaScript", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 51, "topics": []}, {"name": "Zero-to-Hero-with-Python-2.x", "url": "https://github.com/reddyprasade/Zero-to-Hero-with-Python-2.x", "description": "Learn Python For any one and any Where but i need you time to learn ", "language": ["Jupyter Notebook"], "forks_count": 8, "stargazers_count": 3, "watchers_count": 3, "size": 138, "topics": ["python", "python-3", "python36"]}]