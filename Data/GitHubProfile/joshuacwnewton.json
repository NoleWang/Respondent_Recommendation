[{"name": "BentoML", "url": "https://github.com/joshuacwnewton/BentoML", "description": "Model Serving Made Easy", "language": ["Python", "JavaScript", "TypeScript", "Jupyter Notebook", "Shell", "Dockerfile", "Makefile", "Mako", "HTML", "CSS"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 26387, "topics": []}, {"name": "cython-lda", "url": "https://github.com/joshuacwnewton/cython-lda", "description": "A fast Cython implementation of Latent Dirichlet Allocation using a Collapsed Gibbs Sampler.", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 65, "topics": ["collapsed-gibbs-sampling", "gibbs-sampling", "latent-dirichlet-allocation", "natural-language-processing", "text-mining", "topic-modeling"]}, {"name": "d-SNE-PyTorch", "url": "https://github.com/joshuacwnewton/d-SNE-PyTorch", "description": "A PyTorch port of the existing MXNet implementation for the 2019 CVPR paper \"d-SNE: Domain Adaptation Using Stochastic Neighborhood Embedding.\"", "language": ["Python"], "forks_count": 2, "stargazers_count": 5, "watchers_count": 5, "size": 440, "topics": ["d-sne", "deep-learning", "domain-adaptation", "machine-learning", "mxnet", "neural-network", "pytorch", "t-sne"]}, {"name": "data-PAM50", "url": "https://github.com/joshuacwnewton/data-PAM50", "description": "Test PyPI package for PAM50 template data.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 69288, "topics": []}, {"name": "data-template", "url": "https://github.com/joshuacwnewton/data-template", "description": "Template repo for making datasets we can include as pythonic dependencies of SCT.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 89, "topics": []}, {"name": "joshuacwnewton", "url": "https://github.com/joshuacwnewton/joshuacwnewton", "description": "You found a secret! joshuacwnewton/joshuacwnewton is a \u2728special \u2728 repository that you can use to add a README.md to your GitHub profile.", "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 12, "topics": []}, {"name": "listening-history", "url": "https://github.com/joshuacwnewton/listening-history", "description": "Storing my music listening history (and any related data manipulation efforts)", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 5143, "topics": []}, {"name": "ONNX-to-TFLite", "url": "https://github.com/joshuacwnewton/ONNX-to-TFLite", "description": "Converting the ONNX model representation to the TensorFlow Lite representation.", "language": ["Jupyter Notebook"], "forks_count": 3, "stargazers_count": 26, "watchers_count": 26, "size": 24527, "topics": ["deep-learning", "machine-learning", "matlab", "neural-network", "onnx", "onnx-tf", "tensorflow", "tensorflow-examples", "tensorflow-lite", "tensorflow-tutorials", "tflite"]}, {"name": "portalocker", "url": "https://github.com/joshuacwnewton/portalocker", "description": "An easy library for Python file locking. It works on Windows, Linux, BSD and Unix systems and can even perform distributed locking. Naturally it also supports the with statement.", "language": ["Python"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 298, "topics": []}, {"name": "scikit-learn", "url": "https://github.com/joshuacwnewton/scikit-learn", "description": "scikit-learn: machine learning in Python", "language": ["Python", "C++", "C", "Shell", "Batchfile", "Makefile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 115897, "topics": []}, {"name": "Spark-The-Definitive-Guide", "url": "https://github.com/joshuacwnewton/Spark-The-Definitive-Guide", "description": "Spark: The Definitive Guide's Code Repository", "language": ["Scala", "Python", "Java", "TSQL", "R"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 536465, "topics": []}, {"name": "spinalcordtoolbox", "url": "https://github.com/joshuacwnewton/spinalcordtoolbox", "description": "Comprehensive and open-source library of analysis tools for MRI of the spinal cord.", "language": ["Python", "Shell", "HTML", "JavaScript", "Batchfile", "CSS", "Dockerfile"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 138116, "topics": []}, {"name": "spinalcordtoolbox-binaries-old", "url": "https://github.com/joshuacwnewton/spinalcordtoolbox-binaries-old", "description": null, "language": [], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 0, "topics": []}, {"name": "swift-classification", "url": "https://github.com/joshuacwnewton/swift-classification", "description": "A sister repository to \"swiftwatcher\" for testing classification between images of chimney swifts and images of other bird species.", "language": ["Python", "Jupyter Notebook"], "forks_count": 0, "stargazers_count": 0, "watchers_count": 0, "size": 1016, "topics": ["birds", "chimney-swifts", "deep-learning", "machine-learning", "motion-detection", "motion-tracking", "neural-network", "python", "swift-classification"]}, {"name": "swiftwatcher", "url": "https://github.com/joshuacwnewton/swiftwatcher", "description": "An application for tracking the behaviour of migratory chimney swifts in video footage using computer vision", "language": ["Python"], "forks_count": 1, "stargazers_count": 0, "watchers_count": 0, "size": 51100, "topics": ["birds", "chimney-swifts", "computer-vision", "computer-vision-algorithms", "computer-vision-tools", "motion-detection", "motion-tracking", "object-tracking", "segmentation", "swift-classification", "video-analysis"]}, {"name": "test-github-actions", "url": "https://github.com/joshuacwnewton/test-github-actions", "description": "A place to experiment with GitHub Actions without needing to open up PRs on main repositories", "language": [], "forks_count": 2, "stargazers_count": 0, "watchers_count": 0, "size": 57, "topics": []}, {"name": "vid_to_hdf5", "url": "https://github.com/joshuacwnewton/vid_to_hdf5", "description": "Small utility for extracting frames from a video file and storing them in an HDF5 container.", "language": ["Python"], "forks_count": 0, "stargazers_count": 2, "watchers_count": 2, "size": 3, "topics": []}]